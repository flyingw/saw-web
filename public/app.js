// Generated by purs bundle 0.13.6
var PS = {};
(function(exports) {
  /* global XMLHttpRequest */
  /* global process */
  "use strict";

  exports._ajax = function () {
    var platformSpecific = { };
    if (typeof module !== "undefined" && module.require && !(typeof process !== "undefined" && process.versions["electron"])) {
      // We are on node.js
      platformSpecific.newXHR = function () {
        var XHR = module.require("xhr2");
        return new XHR();
      };

      platformSpecific.fixupUrl = function (url, xhr) {
        if (xhr.nodejsBaseUrl === null) {
          var urllib = module.require("url");
          var u = urllib.parse(url);
          u.protocol = u.protocol || "http:";
          u.hostname = u.hostname || "localhost";
          return urllib.format(u);
        } else {
          return url || "/";
        }
      };

      platformSpecific.getResponse = function (xhr) {
        return xhr.response;
      };
    } else {
      // We are in the browser
      platformSpecific.newXHR = function () {
        return new XMLHttpRequest();
      };

      platformSpecific.fixupUrl = function (url) {
        return url || "/";
      };

      platformSpecific.getResponse = function (xhr) {
        return xhr.response;
      };
    }

    return function (mkHeader, options) {
      return function (errback, callback) {
        var xhr = platformSpecific.newXHR();
        var fixedUrl = platformSpecific.fixupUrl(options.url, xhr);
        xhr.open(options.method || "GET", fixedUrl, true, options.username, options.password);
        if (options.headers) {
          try {
            for (var i = 0, header; (header = options.headers[i]) != null; i++) {
              xhr.setRequestHeader(header.field, header.value);
            }
          } catch (e) {
            errback(e);
          }
        }
        var onerror = function (msg) {
          return function () {
            errback(new Error(msg + ": " + options.method + " " + options.url));
          };
        };
        xhr.onerror = onerror("AJAX request failed");
        xhr.ontimeout = onerror("AJAX request timed out");
        xhr.onload = function () {
          callback({
            status: xhr.status,
            statusText: xhr.statusText,
            headers: xhr.getAllResponseHeaders().split("\r\n")
              .filter(function (header) {
                return header.length > 0;
              })
              .map(function (header) {
                var i = header.indexOf(":");
                return mkHeader(header.substring(0, i))(header.substring(i + 2));
              }),
            body: platformSpecific.getResponse(xhr)
          });
        };
        xhr.responseType = options.responseType;
        xhr.withCredentials = options.withCredentials;
        xhr.send(options.content);

        return function (error, cancelErrback, cancelCallback) {
          try {
            xhr.abort();
          } catch (e) {
            return cancelErrback(e);
          }
          return cancelCallback();
        };
      };
    };
  }();
})(PS["Affjax"] = PS["Affjax"] || {});
(function($PS) {
  "use strict";
  $PS["Control.Alt"] = $PS["Control.Alt"] || {};
  var exports = $PS["Control.Alt"];                          
  var Alt = function (Functor0, alt) {
      this.Functor0 = Functor0;
      this.alt = alt;
  };                                                       
  var alt = function (dict) {
      return dict.alt;
  };
  exports["Alt"] = Alt;
  exports["alt"] = alt;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayApply = function (fs) {
    return function (xs) {
      var l = fs.length;
      var k = xs.length;
      var result = new Array(l*k);
      var n = 0;
      for (var i = 0; i < l; i++) {
        var f = fs[i];
        for (var j = 0; j < k; j++) {
          result[n++] = f(xs[j]);
        }
      }
      return result;
    };
  };
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function($PS) {
  "use strict";
  $PS["Control.Semigroupoid"] = $PS["Control.Semigroupoid"] || {};
  var exports = $PS["Control.Semigroupoid"];
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  exports["compose"] = compose;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS);
(function($PS) {
  "use strict";
  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];                    
  var on = function (f) {
      return function (g) {
          return function (x) {
              return function (y) {
                  return f(g(x))(g(y));
              };
          };
      };
  };
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["flip"] = flip;
  exports["const"] = $$const;
  exports["on"] = on;
})(PS);
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  "use strict";
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);
(function($PS) {
  "use strict";
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];
  var $foreign = $PS["Data.Functor"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Function = $PS["Data.Function"];
  var Data_Unit = $PS["Data.Unit"];                
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var mapFlipped = function (dictFunctor) {
      return function (fa) {
          return function (f) {
              return map(dictFunctor)(f)(fa);
          };
      };
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  var functorArray = new Functor($foreign.arrayMap);
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["mapFlipped"] = mapFlipped;
  exports["void"] = $$void;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS);
(function($PS) {
  "use strict";
  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];
  var $foreign = $PS["Control.Apply"];
  var Data_Functor = $PS["Data.Functor"];                
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  }; 
  var applyArray = new Apply(function () {
      return Data_Functor.functorArray;
  }, $foreign.arrayApply);
  var apply = function (dict) {
      return dict.apply;
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applyArray"] = applyArray;
})(PS);
(function($PS) {
  "use strict";
  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];        
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayBind = function (arr) {
    return function (f) {
      var result = [];
      for (var i = 0, l = arr.length; i < l; i++) {
        Array.prototype.push.apply(result, f(arr[i]));
      }
      return result;
    };
  };
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function($PS) {
  "use strict";
  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];
  var $foreign = $PS["Control.Bind"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Function = $PS["Data.Function"];
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  }; 
  var bindArray = new Bind(function () {
      return Control_Apply.applyArray;
  }, $foreign.arrayBind);
  var bind = function (dict) {
      return dict.bind;
  };
  var bindFlipped = function (dictBind) {
      return Data_Function.flip(bind(dictBind));
  };
  var composeKleisliFlipped = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bindFlipped(dictBind)(f)(g(a));
              };
          };
      };
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
  exports["composeKleisliFlipped"] = composeKleisliFlipped;
  exports["bindArray"] = bindArray;
})(PS);
(function($PS) {
  "use strict";
  $PS["Control.Category"] = $PS["Control.Category"] || {};
  var exports = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];                
  var Category = function (Semigroupoid0, identity) {
      this.Semigroupoid0 = Semigroupoid0;
      this.identity = identity;
  };
  var identity = function (dict) {
      return dict.identity;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS);
(function($PS) {
  "use strict";
  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];          
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe (line 217, column 1 - line 217, column 51): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };                                                         
  var isJust = maybe(false)(Data_Function["const"](true));
  var functorMaybe = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var fromMaybe = function (a) {
      return maybe(a)(Control_Category.identity(Control_Category.categoryFn));
  };
  var fromJust = function (dictPartial) {
      return function (v) {
          if (v instanceof Just) {
              return v.value0;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 268, column 1 - line 268, column 46): " + [ v.constructor.name ]);
      };
  };
  var applyMaybe = new Control_Apply.Apply(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return Data_Functor.map(functorMaybe)(v.value0)(v1);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 67, column 1 - line 69, column 30): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindMaybe = new Control_Bind.Bind(function () {
      return applyMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return v1(v.value0);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 125, column 1 - line 127, column 28): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeMaybe = new Control_Applicative.Applicative(function () {
      return applyMaybe;
  }, Just.create);
  var altMaybe = new Control_Alt.Alt(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nothing) {
              return v1;
          };
          return v;
      };
  });
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["fromMaybe"] = fromMaybe;
  exports["isJust"] = isJust;
  exports["fromJust"] = fromJust;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["altMaybe"] = altMaybe;
  exports["bindMaybe"] = bindMaybe;
})(PS);
(function($PS) {
  "use strict";
  $PS["Data.MediaType.Common"] = $PS["Data.MediaType.Common"] || {};
  var exports = $PS["Data.MediaType.Common"];          
  var applicationJSON = "application/json";
  var applicationFormURLEncoded = "application/x-www-form-urlencoded";
  exports["applicationFormURLEncoded"] = applicationFormURLEncoded;
  exports["applicationJSON"] = applicationJSON;
})(PS);
(function($PS) {
  "use strict";
  $PS["Affjax.RequestBody"] = $PS["Affjax.RequestBody"] || {};
  var exports = $PS["Affjax.RequestBody"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_MediaType_Common = $PS["Data.MediaType.Common"];                
  var ArrayView = (function () {
      function ArrayView(value0) {
          this.value0 = value0;
      };
      ArrayView.create = function (value0) {
          return new ArrayView(value0);
      };
      return ArrayView;
  })();
  var Blob = (function () {
      function Blob(value0) {
          this.value0 = value0;
      };
      Blob.create = function (value0) {
          return new Blob(value0);
      };
      return Blob;
  })();
  var Document = (function () {
      function Document(value0) {
          this.value0 = value0;
      };
      Document.create = function (value0) {
          return new Document(value0);
      };
      return Document;
  })();
  var $$String = (function () {
      function $$String(value0) {
          this.value0 = value0;
      };
      $$String.create = function (value0) {
          return new $$String(value0);
      };
      return $$String;
  })();
  var FormData = (function () {
      function FormData(value0) {
          this.value0 = value0;
      };
      FormData.create = function (value0) {
          return new FormData(value0);
      };
      return FormData;
  })();
  var FormURLEncoded = (function () {
      function FormURLEncoded(value0) {
          this.value0 = value0;
      };
      FormURLEncoded.create = function (value0) {
          return new FormURLEncoded(value0);
      };
      return FormURLEncoded;
  })();
  var Json = (function () {
      function Json(value0) {
          this.value0 = value0;
      };
      Json.create = function (value0) {
          return new Json(value0);
      };
      return Json;
  })();
  var toMediaType = function (v) {
      if (v instanceof FormURLEncoded) {
          return new Data_Maybe.Just(Data_MediaType_Common.applicationFormURLEncoded);
      };
      if (v instanceof Json) {
          return new Data_Maybe.Just(Data_MediaType_Common.applicationJSON);
      };
      return Data_Maybe.Nothing.value;
  };                     
  var arrayView = function (av) {
      return new ArrayView(function (f) {
          return f(av);
      });
  };
  exports["ArrayView"] = ArrayView;
  exports["Blob"] = Blob;
  exports["Document"] = Document;
  exports["String"] = $$String;
  exports["FormData"] = FormData;
  exports["FormURLEncoded"] = FormURLEncoded;
  exports["Json"] = Json;
  exports["arrayView"] = arrayView;
  exports["toMediaType"] = toMediaType;
})(PS);
(function(exports) {
  "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function($PS) {
  "use strict";
  $PS["Data.HeytingAlgebra"] = $PS["Data.HeytingAlgebra"] || {};
  var exports = $PS["Data.HeytingAlgebra"];
  var $foreign = $PS["Data.HeytingAlgebra"];
  var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
      this.conj = conj;
      this.disj = disj;
      this.ff = ff;
      this.implies = implies;
      this.not = not;
      this.tt = tt;
  };
  var not = function (dict) {
      return dict.not;
  };
  var ff = function (dict) {
      return dict.ff;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
      return function (b) {
          return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
      };
  }, $foreign.boolNot, true);
  exports["ff"] = ff;
  exports["disj"] = disj;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
})(PS);
(function(exports) {
  "use strict";

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function($PS) {
  "use strict";
  $PS["Data.Semigroup"] = $PS["Data.Semigroup"] || {};
  var exports = $PS["Data.Semigroup"];
  var $foreign = $PS["Data.Semigroup"];
  var Semigroup = function (append) {
      this.append = append;
  }; 
  var semigroupString = new Semigroup($foreign.concatString);
  var append = function (dict) {
      return dict.append;
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupString"] = semigroupString;
})(PS);
(function($PS) {
  "use strict";
  $PS["Data.Monoid"] = $PS["Data.Monoid"] || {};
  var exports = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Monoid = function (Semigroup0, mempty) {
      this.Semigroup0 = Semigroup0;
      this.mempty = mempty;
  };                 
  var monoidString = new Monoid(function () {
      return Data_Semigroup.semigroupString;
  }, "");
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["monoidString"] = monoidString;
})(PS);
(function($PS) {
  "use strict";
  $PS["Data.Monoid.Disj"] = $PS["Data.Monoid.Disj"] || {};
  var exports = $PS["Data.Monoid.Disj"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];      
  var Disj = function (x) {
      return x;
  };
  var semigroupDisj = function (dictHeytingAlgebra) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
          };
      });
  };
  var monoidDisj = function (dictHeytingAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupDisj(dictHeytingAlgebra);
      }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
  };
  exports["Disj"] = Disj;
  exports["monoidDisj"] = monoidDisj;
})(PS);
(function($PS) {
  "use strict";
  $PS["Data.Newtype"] = $PS["Data.Newtype"] || {};
  var exports = $PS["Data.Newtype"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid_Disj = $PS["Data.Monoid.Disj"];                      
  var Newtype = function (unwrap, wrap) {
      this.unwrap = unwrap;
      this.wrap = wrap;
  };
  var wrap = function (dict) {
      return dict.wrap;
  };
  var unwrap = function (dict) {
      return dict.unwrap;
  };                        
  var newtypeDisj = new Newtype(function (v) {
      return v;
  }, Data_Monoid_Disj.Disj);
  var alaF = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (v) {
                      return function (f) {
                          var $96 = Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1));
                          var $97 = Data_Functor.map(dictFunctor)(wrap(dictNewtype));
                          return function ($98) {
                              return $96(f($97($98)));
                          };
                      };
                  };
              };
          };
      };
  };
  exports["unwrap"] = unwrap;
  exports["Newtype"] = Newtype;
  exports["alaF"] = alaF;
  exports["newtypeDisj"] = newtypeDisj;
})(PS);
(function($PS) {
  "use strict";
  $PS["Data.MediaType"] = $PS["Data.MediaType"] || {};
  var exports = $PS["Data.MediaType"];
  var Data_Newtype = $PS["Data.Newtype"];          
  var MediaType = function (x) {
      return x;
  }; 
  var newtypeMediaType = new Data_Newtype.Newtype(function (n) {
      return n;
  }, MediaType);
  exports["newtypeMediaType"] = newtypeMediaType;
})(PS);
(function($PS) {
  "use strict";
  $PS["Affjax.RequestHeader"] = $PS["Affjax.RequestHeader"] || {};
  var exports = $PS["Affjax.RequestHeader"];
  var Data_MediaType = $PS["Data.MediaType"];
  var Data_Newtype = $PS["Data.Newtype"];          
  var Accept = (function () {
      function Accept(value0) {
          this.value0 = value0;
      };
      Accept.create = function (value0) {
          return new Accept(value0);
      };
      return Accept;
  })();
  var ContentType = (function () {
      function ContentType(value0) {
          this.value0 = value0;
      };
      ContentType.create = function (value0) {
          return new ContentType(value0);
      };
      return ContentType;
  })();
  var RequestHeader = (function () {
      function RequestHeader(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      RequestHeader.create = function (value0) {
          return function (value1) {
              return new RequestHeader(value0, value1);
          };
      };
      return RequestHeader;
  })();
  var value = function (v) {
      if (v instanceof Accept) {
          return Data_Newtype.unwrap(Data_MediaType.newtypeMediaType)(v.value0);
      };
      if (v instanceof ContentType) {
          return Data_Newtype.unwrap(Data_MediaType.newtypeMediaType)(v.value0);
      };
      if (v instanceof RequestHeader) {
          return v.value1;
      };
      throw new Error("Failed pattern match at Affjax.RequestHeader (line 26, column 1 - line 26, column 33): " + [ v.constructor.name ]);
  }; 
  var name = function (v) {
      if (v instanceof Accept) {
          return "Accept";
      };
      if (v instanceof ContentType) {
          return "Content-Type";
      };
      if (v instanceof RequestHeader) {
          return v.value0;
      };
      throw new Error("Failed pattern match at Affjax.RequestHeader (line 21, column 1 - line 21, column 32): " + [ v.constructor.name ]);
  };
  exports["Accept"] = Accept;
  exports["ContentType"] = ContentType;
  exports["name"] = name;
  exports["value"] = value;
})(PS);
(function($PS) {
  "use strict";
  $PS["Affjax.ResponseFormat"] = $PS["Affjax.ResponseFormat"] || {};
  var exports = $PS["Affjax.ResponseFormat"];
  var Control_Category = $PS["Control.Category"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_MediaType_Common = $PS["Data.MediaType.Common"];
  var $$ArrayBuffer = (function () {
      function $$ArrayBuffer(value0) {
          this.value0 = value0;
      };
      $$ArrayBuffer.create = function (value0) {
          return new $$ArrayBuffer(value0);
      };
      return $$ArrayBuffer;
  })();
  var Blob = (function () {
      function Blob(value0) {
          this.value0 = value0;
      };
      Blob.create = function (value0) {
          return new Blob(value0);
      };
      return Blob;
  })();
  var Document = (function () {
      function Document(value0) {
          this.value0 = value0;
      };
      Document.create = function (value0) {
          return new Document(value0);
      };
      return Document;
  })();
  var Json = (function () {
      function Json(value0) {
          this.value0 = value0;
      };
      Json.create = function (value0) {
          return new Json(value0);
      };
      return Json;
  })();
  var $$String = (function () {
      function $$String(value0) {
          this.value0 = value0;
      };
      $$String.create = function (value0) {
          return new $$String(value0);
      };
      return $$String;
  })();
  var Ignore = (function () {
      function Ignore(value0) {
          this.value0 = value0;
      };
      Ignore.create = function (value0) {
          return new Ignore(value0);
      };
      return Ignore;
  })();
  var toResponseType = function (v) {
      if (v instanceof $$ArrayBuffer) {
          return "arraybuffer";
      };
      if (v instanceof Blob) {
          return "blob";
      };
      if (v instanceof Document) {
          return "document";
      };
      if (v instanceof Json) {
          return "text";
      };
      if (v instanceof $$String) {
          return "text";
      };
      if (v instanceof Ignore) {
          return "";
      };
      throw new Error("Failed pattern match at Affjax.ResponseFormat (line 46, column 3 - line 52, column 19): " + [ v.constructor.name ]);
  };
  var toMediaType = function (v) {
      if (v instanceof Json) {
          return new Data_Maybe.Just(Data_MediaType_Common.applicationJSON);
      };
      return Data_Maybe.Nothing.value;
  };
  var string = new $$String(Control_Category.identity(Control_Category.categoryFn));
  var ignore = new Ignore(Control_Category.identity(Control_Category.categoryFn));
  var arrayBuffer = new $$ArrayBuffer(Control_Category.identity(Control_Category.categoryFn));
  exports["ArrayBuffer"] = $$ArrayBuffer;
  exports["Blob"] = Blob;
  exports["Document"] = Document;
  exports["Json"] = Json;
  exports["String"] = $$String;
  exports["Ignore"] = Ignore;
  exports["arrayBuffer"] = arrayBuffer;
  exports["string"] = string;
  exports["ignore"] = ignore;
  exports["toResponseType"] = toResponseType;
  exports["toMediaType"] = toMediaType;
})(PS);
(function($PS) {
  "use strict";
  $PS["Affjax.ResponseHeader"] = $PS["Affjax.ResponseHeader"] || {};
  var exports = $PS["Affjax.ResponseHeader"];      
  var ResponseHeader = (function () {
      function ResponseHeader(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ResponseHeader.create = function (value0) {
          return function (value1) {
              return new ResponseHeader(value0, value1);
          };
      };
      return ResponseHeader;
  })();
  exports["ResponseHeader"] = ResponseHeader;
})(PS);
(function($PS) {
  "use strict";
  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];                
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (f$prime) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(f$prime(a$prime));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS);
(function($PS) {
  "use strict";
  $PS["Data.Bifunctor"] = $PS["Data.Bifunctor"] || {};
  var exports = $PS["Data.Bifunctor"];
  var Control_Category = $PS["Control.Category"];                
  var Bifunctor = function (bimap) {
      this.bimap = bimap;
  };
  var bimap = function (dict) {
      return dict.bimap;
  };
  var lmap = function (dictBifunctor) {
      return function (f) {
          return bimap(dictBifunctor)(f)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  exports["Bifunctor"] = Bifunctor;
  exports["lmap"] = lmap;
})(PS);
(function($PS) {
  "use strict";
  $PS["Data.Either"] = $PS["Data.Either"] || {};
  var exports = $PS["Data.Either"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];              
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var note = function (a) {
      return Data_Maybe.maybe(new Left(a))(Right.create);
  };
  var functorEither = new Data_Functor.Functor(function (f) {
      return function (m) {
          if (m instanceof Left) {
              return new Left(m.value0);
          };
          if (m instanceof Right) {
              return new Right(f(m.value0));
          };
          throw new Error("Failed pattern match at Data.Either (line 38, column 1 - line 38, column 52): " + [ m.constructor.name ]);
      };
  });
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either (line 238, column 1 - line 238, column 64): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return new Left(v(v2.value0));
              };
              if (v2 instanceof Right) {
                  return new Right(v1(v2.value0));
              };
              throw new Error("Failed pattern match at Data.Either (line 46, column 1 - line 48, column 36): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  });
  var applyEither = new Control_Apply.Apply(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return new Left(v.value0);
          };
          if (v instanceof Right) {
              return Data_Functor.map(functorEither)(v.value0)(v1);
          };
          throw new Error("Failed pattern match at Data.Either (line 82, column 1 - line 84, column 30): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindEither = new Control_Bind.Bind(function () {
      return applyEither;
  }, either(function (e) {
      return function (v) {
          return new Left(e);
      };
  })(function (a) {
      return function (f) {
          return f(a);
      };
  }));
  var applicativeEither = new Control_Applicative.Applicative(function () {
      return applyEither;
  }, Right.create);
  var monadEither = new Control_Monad.Monad(function () {
      return applicativeEither;
  }, function () {
      return bindEither;
  });
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["note"] = note;
  exports["functorEither"] = functorEither;
  exports["bifunctorEither"] = bifunctorEither;
  exports["applicativeEither"] = applicativeEither;
  exports["bindEither"] = bindEither;
  exports["monadEither"] = monadEither;
})(PS);
(function($PS) {
  "use strict";
  $PS["Control.Monad.Error.Class"] = $PS["Control.Monad.Error.Class"] || {};
  var exports = $PS["Control.Monad.Error.Class"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];                        
  var MonadThrow = function (Monad0, throwError) {
      this.Monad0 = Monad0;
      this.throwError = throwError;
  };
  var MonadError = function (MonadThrow0, catchError) {
      this.MonadThrow0 = MonadThrow0;
      this.catchError = catchError;
  };
  var throwError = function (dict) {
      return dict.throwError;
  };                                                      
  var catchError = function (dict) {
      return dict.catchError;
  };
  var $$try = function (dictMonadError) {
      return function (a) {
          return catchError(dictMonadError)(Data_Functor.map(((((dictMonadError.MonadThrow0()).Monad0()).Bind1()).Apply0()).Functor0())(Data_Either.Right.create)(a))((function () {
              var $17 = Control_Applicative.pure(((dictMonadError.MonadThrow0()).Monad0()).Applicative0());
              return function ($18) {
                  return $17(Data_Either.Left.create($18));
              };
          })());
      };
  };
  exports["throwError"] = throwError;
  exports["MonadThrow"] = MonadThrow;
  exports["MonadError"] = MonadError;
  exports["try"] = $$try;
})(PS);
(function($PS) {
  "use strict";
  $PS["Control.Monad.Except.Trans"] = $PS["Control.Monad.Except.Trans"] || {};
  var exports = $PS["Control.Monad.Except.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];                
  var ExceptT = function (x) {
      return x;
  };
  var runExceptT = function (v) {
      return v;
  }; 
  var mapExceptT = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var functorExceptT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
      });
  };
  var monadExceptT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeExceptT(dictMonad);
      }, function () {
          return bindExceptT(dictMonad);
      });
  };
  var bindExceptT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyExceptT(dictMonad);
      }, function (v) {
          return function (k) {
              return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either((function () {
                  var $90 = Control_Applicative.pure(dictMonad.Applicative0());
                  return function ($91) {
                      return $90(Data_Either.Left.create($91));
                  };
              })())(function (a) {
                  var v1 = k(a);
                  return v1;
              }));
          };
      });
  };
  var applyExceptT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
      }, Control_Monad.ap(monadExceptT(dictMonad)));
  };
  var applicativeExceptT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyExceptT(dictMonad);
      }, (function () {
          var $92 = Control_Applicative.pure(dictMonad.Applicative0());
          return function ($93) {
              return ExceptT($92(Data_Either.Right.create($93)));
          };
      })());
  };
  var monadThrowExceptT = function (dictMonad) {
      return new Control_Monad_Error_Class.MonadThrow(function () {
          return monadExceptT(dictMonad);
      }, (function () {
          var $102 = Control_Applicative.pure(dictMonad.Applicative0());
          return function ($103) {
              return ExceptT($102(Data_Either.Left.create($103)));
          };
      })());
  };
  exports["runExceptT"] = runExceptT;
  exports["functorExceptT"] = functorExceptT;
  exports["applicativeExceptT"] = applicativeExceptT;
  exports["bindExceptT"] = bindExceptT;
  exports["monadThrowExceptT"] = monadThrowExceptT;
})(PS);
(function($PS) {
  "use strict";
  $PS["Data.Identity"] = $PS["Data.Identity"] || {};
  var exports = $PS["Data.Identity"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Newtype = $PS["Data.Newtype"];          
  var Identity = function (x) {
      return x;
  };
  var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Identity);
  var functorIdentity = new Data_Functor.Functor(function (f) {
      return function (m) {
          return f(m);
      };
  });
  var applyIdentity = new Control_Apply.Apply(function () {
      return functorIdentity;
  }, function (v) {
      return function (v1) {
          return v(v1);
      };
  });
  var bindIdentity = new Control_Bind.Bind(function () {
      return applyIdentity;
  }, function (v) {
      return function (f) {
          return f(v);
      };
  });
  var applicativeIdentity = new Control_Applicative.Applicative(function () {
      return applyIdentity;
  }, Identity);
  var monadIdentity = new Control_Monad.Monad(function () {
      return applicativeIdentity;
  }, function () {
      return bindIdentity;
  });
  exports["newtypeIdentity"] = newtypeIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["monadIdentity"] = monadIdentity;
})(PS);
(function($PS) {
  "use strict";
  $PS["Control.Monad.Except"] = $PS["Control.Monad.Except"] || {};
  var exports = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Newtype = $PS["Data.Newtype"];                                                
  var runExcept = (function () {
      var $0 = Data_Newtype.unwrap(Data_Identity.newtypeIdentity);
      return function ($1) {
          return $0(Control_Monad_Except_Trans.runExceptT($1));
      };
  })();
  exports["runExcept"] = runExcept;
})(PS);
(function(exports) {
  "use strict";

  function id(x) {
    return x;
  }                      
  exports.fromObject = id;

  exports.stringify = function (j) {
    return JSON.stringify(j);
  };

  function isArray(a) {
    return Object.prototype.toString.call(a) === "[object Array]";
  }
})(PS["Data.Argonaut.Core"] = PS["Data.Argonaut.Core"] || {});
(function(exports) {
  "use strict";

  exports.empty = {};

  function toArrayWithKey(f) {
    return function (m) {
      var r = [];
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }
})(PS["Foreign.Object"] = PS["Foreign.Object"] || {});
(function($PS) {
  "use strict";
  $PS["Foreign.Object"] = $PS["Foreign.Object"] || {};
  var exports = $PS["Foreign.Object"];
  var $foreign = $PS["Foreign.Object"];
  exports["empty"] = $foreign.empty;
})(PS);
(function($PS) {
  "use strict";
  $PS["Data.Argonaut.Core"] = $PS["Data.Argonaut.Core"] || {};
  var exports = $PS["Data.Argonaut.Core"];
  var $foreign = $PS["Data.Argonaut.Core"];
  var Foreign_Object = $PS["Foreign.Object"];   
  var jsonEmptyObject = $foreign.fromObject(Foreign_Object.empty);
  exports["jsonEmptyObject"] = jsonEmptyObject;
  exports["stringify"] = $foreign.stringify;
})(PS);
(function(exports) {
  "use strict";

  exports._jsonParser = function (fail, succ, s) {
    try {
      return succ(JSON.parse(s));
    }
    catch (e) {
      return fail(e.message);
    }
  };
})(PS["Data.Argonaut.Parser"] = PS["Data.Argonaut.Parser"] || {});
(function($PS) {
  "use strict";
  $PS["Data.Argonaut.Parser"] = $PS["Data.Argonaut.Parser"] || {};
  var exports = $PS["Data.Argonaut.Parser"];
  var $foreign = $PS["Data.Argonaut.Parser"];
  var Data_Either = $PS["Data.Either"];                
  var jsonParser = function (j) {
      return $foreign["_jsonParser"](Data_Either.Left.create, Data_Either.Right.create, j);
  };
  exports["jsonParser"] = jsonParser;
})(PS);
(function(exports) {
  "use strict";                                                                                      

  exports.fromFoldableImpl = (function () {
    function Cons(head, tail) {
      this.head = head;
      this.tail = tail;
    }
    var emptyList = {};

    function curryCons(head) {
      return function (tail) {
        return new Cons(head, tail);
      };
    }

    function listToArray(list) {
      var result = [];
      var count = 0;
      var xs = list;
      while (xs !== emptyList) {
        result[count++] = xs.head;
        xs = xs.tail;
      }
      return result;
    }

    return function (foldr) {
      return function (xs) {
        return listToArray(foldr(curryCons)(emptyList)(xs));
      };
    };
  })();

  //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  exports.snoc = function (l) {
    return function (e) {
      var l1 = l.slice();
      l1.push(e);
      return l1;
    };
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  exports.findIndexImpl = function (just) {
    return function (nothing) {
      return function (f) {
        return function (xs) {
          for (var i = 0, l = xs.length; i < l; i++) {
            if (f(xs[i])) return just(i);
          }
          return nothing;
        };
      };
    };
  };

  exports._deleteAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (l) {
          if (i < 0 || i >= l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i, 1);
          return just(l1);
        };
      };
    };
  };

  exports.filter = function (f) {
    return function (xs) {
      return xs.filter(f);
    };
  };

  exports.take = function (n) {
    return function (l) {
      return n < 1 ? [] : l.slice(0, n);
    };
  };

  exports.drop = function (n) {
    return function (l) {
      return n < 1 ? l : l.slice(n);
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  "use strict";

  var refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };                            
  exports.eqIntImpl = refEq; 
  exports.eqStringImpl = refEq;
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function($PS) {
  "use strict";
  $PS["Data.Eq"] = $PS["Data.Eq"] || {};
  var exports = $PS["Data.Eq"];
  var $foreign = $PS["Data.Eq"];
  var Eq = function (eq) {
      this.eq = eq;
  }; 
  var eqString = new Eq($foreign.eqStringImpl);
  var eqInt = new Eq($foreign.eqIntImpl);
  var eq = function (dict) {
      return dict.eq;
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["eqInt"] = eqInt;
  exports["eqString"] = eqString;
})(PS);
(function(exports) {
  "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function($PS) {
  "use strict";
  $PS["Data.Foldable"] = $PS["Data.Foldable"] || {};
  var exports = $PS["Data.Foldable"];
  var $foreign = $PS["Data.Foldable"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Monoid_Disj = $PS["Data.Monoid.Disj"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];      
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var intercalate = function (dictFoldable) {
      return function (dictMonoid) {
          return function (sep) {
              return function (xs) {
                  var go = function (v) {
                      return function (x) {
                          if (v.init) {
                              return {
                                  init: false,
                                  acc: x
                              };
                          };
                          return {
                              init: false,
                              acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
                          };
                      };
                  };
                  return (foldl(dictFoldable)(go)({
                      init: true,
                      acc: Data_Monoid.mempty(dictMonoid)
                  })(xs)).acc;
              };
          };
      };
  }; 
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldr(dictFoldable)(function (x) {
                  return function (acc) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var any = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Newtype.newtypeDisj)(Data_Newtype.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
      };
  };
  var elem = function (dictFoldable) {
      return function (dictEq) {
          var $204 = any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean);
          var $205 = Data_Eq.eq(dictEq);
          return function ($206) {
              return $204($205($206));
          };
      };
  };
  exports["Foldable"] = Foldable;
  exports["foldr"] = foldr;
  exports["foldl"] = foldl;
  exports["intercalate"] = intercalate;
  exports["any"] = any;
  exports["elem"] = elem;
  exports["foldableArray"] = foldableArray;
})(PS);
(function($PS) {
  "use strict";
  $PS["Data.Array"] = $PS["Data.Array"] || {};
  var exports = $PS["Data.Array"];
  var $foreign = $PS["Data.Array"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var singleton = function (a) {
      return [ a ];
  };
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var head = function (xs) {
      return index(xs)(0);
  };
  var fromFoldable = function (dictFoldable) {
      return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
  };
  var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var deleteAt = $foreign["_deleteAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var deleteBy = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2.length === 0) {
                  return [  ];
              };
              return Data_Maybe.maybe(v2)(function (i) {
                  return Data_Maybe.fromJust()(deleteAt(i)(v2));
              })(findIndex(v(v1))(v2));
          };
      };
  };
  var $$delete = function (dictEq) {
      return deleteBy(Data_Eq.eq(dictEq));
  };
  var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));
  var mapMaybe = function (f) {
      return concatMap((function () {
          var $94 = Data_Maybe.maybe([  ])(singleton);
          return function ($95) {
              return $94(f($95));
          };
      })());
  };
  var catMaybes = mapMaybe(Control_Category.identity(Control_Category.categoryFn));
  exports["fromFoldable"] = fromFoldable;
  exports["singleton"] = singleton;
  exports["head"] = head;
  exports["concatMap"] = concatMap;
  exports["mapMaybe"] = mapMaybe;
  exports["catMaybes"] = catMaybes;
  exports["delete"] = $$delete;
  exports["cons"] = $foreign.cons;
  exports["snoc"] = $foreign.snoc;
  exports["filter"] = $foreign.filter;
  exports["take"] = $foreign.take;
  exports["drop"] = $foreign.drop;
})(PS);
(function(exports) {
  "use strict";

  exports.split = function (sep) {
    return function (s) {
      return s.split(sep);
    };
  };

  exports.toLower = function (s) {
    return s.toLowerCase();
  };

  exports.joinWith = function (s) {
    return function (xs) {
      return xs.join(s);
    };
  };
})(PS["Data.String.Common"] = PS["Data.String.Common"] || {});
(function($PS) {
  "use strict";
  $PS["Data.String.Common"] = $PS["Data.String.Common"] || {};
  var exports = $PS["Data.String.Common"];
  var $foreign = $PS["Data.String.Common"];
  exports["split"] = $foreign.split;
  exports["toLower"] = $foreign.toLower;
  exports["joinWith"] = $foreign.joinWith;
})(PS);
(function(exports) {
  "use strict";

  // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function array1(a) {
      return [a];
    }

    function array2(a) {
      return function (b) {
        return [a, b];
      };
    }

    function array3(a) {
      return function (b) {
        return function (c) {
          return [a, b, c];
        };
      };
    }

    function concat2(xs) {
      return function (ys) {
        return xs.concat(ys);
      };
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            return function (array) {
              function go(bot, top) {
                switch (top - bot) {
                case 0: return pure([]);
                case 1: return map(array1)(f(array[bot]));
                case 2: return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));
                case 3: return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));
                default:
                  // This slightly tricky pivot selection aims to produce two
                  // even-length partitions where possible.
                  var pivot = bot + Math.floor((top - bot) / 4) * 2;
                  return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));
                }
              }
              return go(0, array.length);
            };
          };
        };
      };
    };
  }();
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function($PS) {
  "use strict";
  $PS["Data.Traversable"] = $PS["Data.Traversable"] || {};
  var exports = $PS["Data.Traversable"];
  var $foreign = $PS["Data.Traversable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];                                                      
  var Traversable = function (Foldable1, Functor0, sequence, traverse) {
      this.Foldable1 = Foldable1;
      this.Functor0 = Functor0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  }; 
  var sequenceDefault = function (dictTraversable) {
      return function (dictApplicative) {
          return traverse(dictTraversable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Data_Functor.functorArray;
  }, function (dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
  }, function (dictApplicative) {
      return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map((dictApplicative.Apply0()).Functor0()))(Control_Applicative.pure(dictApplicative));
  });
  var sequence = function (dict) {
      return dict.sequence;
  };
  exports["traverse"] = traverse;
  exports["sequence"] = sequence;
  exports["traversableArray"] = traversableArray;
})(PS);
(function(exports) {
  /* globals exports */
  "use strict";         

  exports.infinity = Infinity;                       

  var encdecURI = function (encdec) {
    return function (fail, succ, s) {
      try {
        return succ(encdec(s));
      }
      catch (e) {
        return fail(e.message);
      }
    };
  };                                        
  exports._encodeURI = encdecURI(encodeURI);                  
  exports._encodeURIComponent = encdecURI(encodeURIComponent);
})(PS["Global"] = PS["Global"] || {});
(function($PS) {
  "use strict";
  $PS["Global"] = $PS["Global"] || {};
  var exports = $PS["Global"];
  var $foreign = $PS["Global"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var $$encodeURIComponent = function (s) {
      return $foreign["_encodeURIComponent"](Data_Function["const"](Data_Maybe.Nothing.value), Data_Maybe.Just.create, s);
  };
  var $$encodeURI = function (s) {
      return $foreign["_encodeURI"](Data_Function["const"](Data_Maybe.Nothing.value), Data_Maybe.Just.create, s);
  };
  exports["encodeURI"] = $$encodeURI;
  exports["encodeURIComponent"] = $$encodeURIComponent;
  exports["infinity"] = $foreign.infinity;
})(PS);
(function($PS) {
  "use strict";
  $PS["Data.FormURLEncoded"] = $PS["Data.FormURLEncoded"] || {};
  var exports = $PS["Data.FormURLEncoded"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Global = $PS["Global"];
  var toArray = function (v) {
      return v;
  };                                                                                                                 
  var encode = (function () {
      var encodePart = function (v) {
          if (v.value1 instanceof Data_Maybe.Nothing) {
              return Global["encodeURIComponent"](v.value0);
          };
          if (v.value1 instanceof Data_Maybe.Just) {
              return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function (key) {
                  return function (val) {
                      return key + ("=" + val);
                  };
              })(Global["encodeURIComponent"](v.value0)))(Global["encodeURIComponent"](v.value1.value0));
          };
          throw new Error("Failed pattern match at Data.FormURLEncoded (line 37, column 18 - line 39, column 108): " + [ v.constructor.name ]);
      };
      var $19 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_String_Common.joinWith("&"));
      var $20 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(encodePart);
      return function ($21) {
          return $19($20(toArray($21)));
      };
  })();
  exports["encode"] = encode;
})(PS);
(function(exports) {
  "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showStringImpl = function (s) {
    var l = s.length;
    return "\"" + s.replace(
      /[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
      function (c, i) {
        switch (c) {
          case "\"":
          case "\\":
            return "\\" + c;
          case "\x07": return "\\a";
          case "\b": return "\\b";
          case "\f": return "\\f";
          case "\n": return "\\n";
          case "\r": return "\\r";
          case "\t": return "\\t";
          case "\v": return "\\v";
        }
        var k = i + 1;
        var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty;
      }
    ) + "\"";
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function($PS) {
  "use strict";
  $PS["Data.Show"] = $PS["Data.Show"] || {};
  var exports = $PS["Data.Show"];
  var $foreign = $PS["Data.Show"];
  var Show = function (show) {
      this.show = show;
  };
  var showString = new Show($foreign.showStringImpl);
  var showInt = new Show($foreign.showIntImpl);
  var show = function (dict) {
      return dict.show;
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["showInt"] = showInt;
  exports["showString"] = showString;
})(PS);
(function($PS) {
  "use strict";
  $PS["Data.HTTP.Method"] = $PS["Data.HTTP.Method"] || {};
  var exports = $PS["Data.HTTP.Method"];
  var Data_Either = $PS["Data.Either"];
  var Data_Show = $PS["Data.Show"];                                  
  var OPTIONS = (function () {
      function OPTIONS() {

      };
      OPTIONS.value = new OPTIONS();
      return OPTIONS;
  })();
  var GET = (function () {
      function GET() {

      };
      GET.value = new GET();
      return GET;
  })();
  var HEAD = (function () {
      function HEAD() {

      };
      HEAD.value = new HEAD();
      return HEAD;
  })();
  var POST = (function () {
      function POST() {

      };
      POST.value = new POST();
      return POST;
  })();
  var PUT = (function () {
      function PUT() {

      };
      PUT.value = new PUT();
      return PUT;
  })();
  var DELETE = (function () {
      function DELETE() {

      };
      DELETE.value = new DELETE();
      return DELETE;
  })();
  var TRACE = (function () {
      function TRACE() {

      };
      TRACE.value = new TRACE();
      return TRACE;
  })();
  var CONNECT = (function () {
      function CONNECT() {

      };
      CONNECT.value = new CONNECT();
      return CONNECT;
  })();
  var PROPFIND = (function () {
      function PROPFIND() {

      };
      PROPFIND.value = new PROPFIND();
      return PROPFIND;
  })();
  var PROPPATCH = (function () {
      function PROPPATCH() {

      };
      PROPPATCH.value = new PROPPATCH();
      return PROPPATCH;
  })();
  var MKCOL = (function () {
      function MKCOL() {

      };
      MKCOL.value = new MKCOL();
      return MKCOL;
  })();
  var COPY = (function () {
      function COPY() {

      };
      COPY.value = new COPY();
      return COPY;
  })();
  var MOVE = (function () {
      function MOVE() {

      };
      MOVE.value = new MOVE();
      return MOVE;
  })();
  var LOCK = (function () {
      function LOCK() {

      };
      LOCK.value = new LOCK();
      return LOCK;
  })();
  var UNLOCK = (function () {
      function UNLOCK() {

      };
      UNLOCK.value = new UNLOCK();
      return UNLOCK;
  })();
  var PATCH = (function () {
      function PATCH() {

      };
      PATCH.value = new PATCH();
      return PATCH;
  })();
  var unCustomMethod = function (v) {
      return v;
  };
  var showMethod = new Data_Show.Show(function (v) {
      if (v instanceof OPTIONS) {
          return "OPTIONS";
      };
      if (v instanceof GET) {
          return "GET";
      };
      if (v instanceof HEAD) {
          return "HEAD";
      };
      if (v instanceof POST) {
          return "POST";
      };
      if (v instanceof PUT) {
          return "PUT";
      };
      if (v instanceof DELETE) {
          return "DELETE";
      };
      if (v instanceof TRACE) {
          return "TRACE";
      };
      if (v instanceof CONNECT) {
          return "CONNECT";
      };
      if (v instanceof PROPFIND) {
          return "PROPFIND";
      };
      if (v instanceof PROPPATCH) {
          return "PROPPATCH";
      };
      if (v instanceof MKCOL) {
          return "MKCOL";
      };
      if (v instanceof COPY) {
          return "COPY";
      };
      if (v instanceof MOVE) {
          return "MOVE";
      };
      if (v instanceof LOCK) {
          return "LOCK";
      };
      if (v instanceof UNLOCK) {
          return "UNLOCK";
      };
      if (v instanceof PATCH) {
          return "PATCH";
      };
      throw new Error("Failed pattern match at Data.HTTP.Method (line 40, column 1 - line 56, column 23): " + [ v.constructor.name ]);
  });
  var print = Data_Either.either(Data_Show.show(showMethod))(unCustomMethod);
  exports["GET"] = GET;
  exports["POST"] = POST;
  exports["print"] = print;
})(PS);
(function($PS) {
  "use strict";
  $PS["Control.Plus"] = $PS["Control.Plus"] || {};
  var exports = $PS["Control.Plus"];                   
  var Plus = function (Alt0, empty) {
      this.Alt0 = Alt0;
      this.empty = empty;
  };       
  var empty = function (dict) {
      return dict.empty;
  };
  exports["Plus"] = Plus;
  exports["empty"] = empty;
})(PS);
(function($PS) {
  "use strict";
  $PS["Data.NonEmpty"] = $PS["Data.NonEmpty"] || {};
  var exports = $PS["Data.NonEmpty"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Show = $PS["Data.Show"];                              
  var NonEmpty = (function () {
      function NonEmpty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NonEmpty.create = function (value0) {
          return function (value1) {
              return new NonEmpty(value0, value1);
          };
      };
      return NonEmpty;
  })();
  var singleton = function (dictPlus) {
      return function (a) {
          return new NonEmpty(a, Control_Plus.empty(dictPlus));
      };
  };
  var showNonEmpty = function (dictShow) {
      return function (dictShow1) {
          return new Data_Show.Show(function (v) {
              return "(NonEmpty " + (Data_Show.show(dictShow)(v.value0) + (" " + (Data_Show.show(dictShow1)(v.value1) + ")")));
          });
      };
  };
  exports["singleton"] = singleton;
  exports["showNonEmpty"] = showNonEmpty;
})(PS);
(function($PS) {
  "use strict";
  $PS["Data.List.Types"] = $PS["Data.List.Types"] || {};
  var exports = $PS["Data.List.Types"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];                              
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var NonEmptyList = function (x) {
      return x;
  };
  var listMap = function (f) {
      var chunkedRevMap = function ($copy_chunksAcc) {
          return function ($copy_v) {
              var $tco_var_chunksAcc = $copy_chunksAcc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(chunksAcc, v) {
                  if (v instanceof Cons && (v.value1 instanceof Cons && v.value1.value1 instanceof Cons)) {
                      $tco_var_chunksAcc = new Cons(v, chunksAcc);
                      $copy_v = v.value1.value1.value1;
                      return;
                  };
                  var unrolledMap = function (v1) {
                      if (v1 instanceof Cons && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Nil)) {
                          return new Cons(f(v1.value0), new Cons(f(v1.value1.value0), Nil.value));
                      };
                      if (v1 instanceof Cons && v1.value1 instanceof Nil) {
                          return new Cons(f(v1.value0), Nil.value);
                      };
                      return Nil.value;
                  };
                  var reverseUnrolledMap = function ($copy_v1) {
                      return function ($copy_acc) {
                          var $tco_var_v1 = $copy_v1;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(v1, acc) {
                              if (v1 instanceof Cons && (v1.value0 instanceof Cons && (v1.value0.value1 instanceof Cons && v1.value0.value1.value1 instanceof Cons))) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_acc = new Cons(f(v1.value0.value0), new Cons(f(v1.value0.value1.value0), new Cons(f(v1.value0.value1.value1.value0), acc)));
                                  return;
                              };
                              $tco_done = true;
                              return acc;
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_v1, $copy_acc);
                          };
                          return $tco_result;
                      };
                  };
                  $tco_done = true;
                  return reverseUnrolledMap(chunksAcc)(unrolledMap(v));
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_chunksAcc, $copy_v);
              };
              return $tco_result;
          };
      };
      return chunkedRevMap(Nil.value);
  };
  var functorList = new Data_Functor.Functor(listMap);                 
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              var $202 = Data_Semigroup.append(dictMonoid.Semigroup0())(acc);
              return function ($203) {
                  return $202(f($203));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, function (f) {
      var go = function ($copy_b) {
          return function ($copy_v) {
              var $tco_var_b = $copy_b;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(b, v) {
                  if (v instanceof Nil) {
                      $tco_done = true;
                      return b;
                  };
                  if (v instanceof Cons) {
                      $tco_var_b = f(b)(v.value0);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List.Types (line 109, column 12 - line 111, column 30): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_b, $copy_v);
              };
              return $tco_result;
          };
      };
      return go;
  }, function (f) {
      return function (b) {
          var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
          var $204 = Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b);
          return function ($205) {
              return $204(rev($205));
          };
      };
  });
  var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
      return function (ys) {
          return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
      };
  });
  var showList = function (dictShow) {
      return new Data_Show.Show(function (v) {
          if (v instanceof Nil) {
              return "Nil";
          };
          return "(" + (Data_Foldable.intercalate(foldableList)(Data_Monoid.monoidString)(" : ")(Data_Functor.map(functorList)(Data_Show.show(dictShow))(v)) + " : Nil)");
      });
  };
  var showNonEmptyList = function (dictShow) {
      return new Data_Show.Show(function (v) {
          return "(NonEmptyList " + (Data_Show.show(Data_NonEmpty.showNonEmpty(dictShow)(showList(dictShow)))(v) + ")");
      });
  };                                               
  var altList = new Control_Alt.Alt(function () {
      return functorList;
  }, Data_Semigroup.append(semigroupList));
  var plusList = new Control_Plus.Plus(function () {
      return altList;
  }, Nil.value);
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["NonEmptyList"] = NonEmptyList;
  exports["foldableList"] = foldableList;
  exports["plusList"] = plusList;
  exports["showNonEmptyList"] = showNonEmptyList;
})(PS);
(function($PS) {
  "use strict";
  $PS["Data.List.NonEmpty"] = $PS["Data.List.NonEmpty"] || {};
  var exports = $PS["Data.List.NonEmpty"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var toList = function (v) {
      return new Data_List_Types.Cons(v.value0, v.value1);
  };
  var singleton = (function () {
      var $168 = Data_NonEmpty.singleton(Data_List_Types.plusList);
      return function ($169) {
          return Data_List_Types.NonEmptyList($168($169));
      };
  })();
  var head = function (v) {
      return v.value0;
  };
  exports["toList"] = toList;
  exports["singleton"] = singleton;
  exports["head"] = head;
})(PS);
(function(exports) {
  "use strict";

  exports["null"] = null;

  exports.nullable = function (a, r, f) {
    return a == null ? r : f(a);
  };

  exports.notNull = function (x) {
    return x;
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function($PS) {
  "use strict";
  $PS["Data.Nullable"] = $PS["Data.Nullable"] || {};
  var exports = $PS["Data.Nullable"];
  var $foreign = $PS["Data.Nullable"];
  var Data_Maybe = $PS["Data.Maybe"];              
  var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toMaybe"] = toMaybe;
  exports["toNullable"] = toNullable;
})(PS);
(function(exports) {
  /* globals setImmediate, clearImmediate, setTimeout, clearTimeout */
  /* jshint -W083, -W098, -W003 */
  "use strict";

  var Aff = function () {
    // A unique value for empty.
    var EMPTY = {};

    /*

  An awkward approximation. We elide evidence we would otherwise need in PS for
  efficiency sake.

  data Aff eff a
    = Pure a
    | Throw Error
    | Catch (Aff eff a) (Error -> Aff eff a)
    | Sync (Eff eff a)
    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))
    | forall b. Bind (Aff eff b) (b -> Aff eff a)
    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)
    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)
    | Sequential (ParAff aff a)

  */  
    var PURE    = "Pure";
    var THROW   = "Throw";
    var CATCH   = "Catch";
    var SYNC    = "Sync";
    var ASYNC   = "Async";
    var BIND    = "Bind";
    var BRACKET = "Bracket";
    var FORK    = "Fork";
    var SEQ     = "Sequential";

    /*

  data ParAff eff a
    = forall b. Map (b -> a) (ParAff eff b)
    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)
    | Alt (ParAff eff a) (ParAff eff a)
    | ?Par (Aff eff a)

  */  
    var MAP   = "Map";
    var APPLY = "Apply";
    var ALT   = "Alt";

    // Various constructors used in interpretation
    var CONS      = "Cons";      // Cons-list, for stacks
    var RESUME    = "Resume";    // Continue indiscriminately
    var RELEASE   = "Release";   // Continue with bracket finalizers
    var FINALIZER = "Finalizer"; // A non-interruptible effect
    var FINALIZED = "Finalized"; // Marker for finalization
    var FORKED    = "Forked";    // Reference to a forked fiber, with resumption stack
    var FIBER     = "Fiber";     // Actual fiber reference
    var THUNK     = "Thunk";     // Primed effect, ready to invoke

    function Aff(tag, _1, _2, _3) {
      this.tag = tag;
      this._1  = _1;
      this._2  = _2;
      this._3  = _3;
    }

    function AffCtr(tag) {
      var fn = function (_1, _2, _3) {
        return new Aff(tag, _1, _2, _3);
      };
      fn.tag = tag;
      return fn;
    }

    function nonCanceler(error) {
      return new Aff(PURE, void 0);
    }

    function runEff(eff) {
      try {
        eff();
      } catch (error) {
        setTimeout(function () {
          throw error;
        }, 0);
      }
    }

    function runSync(left, right, eff) {
      try {
        return right(eff());
      } catch (error) {
        return left(error);
      }
    }

    function runAsync(left, eff, k) {
      try {
        return eff(k)();
      } catch (error) {
        k(left(error))();
        return nonCanceler;
      }
    }

    var Scheduler = function () {
      var limit    = 1024;
      var size     = 0;
      var ix       = 0;
      var queue    = new Array(limit);
      var draining = false;

      function drain() {
        var thunk;
        draining = true;
        while (size !== 0) {
          size--;
          thunk     = queue[ix];
          queue[ix] = void 0;
          ix        = (ix + 1) % limit;
          thunk();
        }
        draining = false;
      }

      return {
        isDraining: function () {
          return draining;
        },
        enqueue: function (cb) {
          var i, tmp;
          if (size === limit) {
            tmp = draining;
            drain();
            draining = tmp;
          }

          queue[(ix + size) % limit] = cb;
          size++;

          if (!draining) {
            drain();
          }
        }
      };
    }();

    function Supervisor(util) {
      var fibers  = {};
      var fiberId = 0;
      var count   = 0;

      return {
        register: function (fiber) {
          var fid = fiberId++;
          fiber.onComplete({
            rethrow: true,
            handler: function (result) {
              return function () {
                count--;
                delete fibers[fid];
              };
            }
          })();
          fibers[fid] = fiber;
          count++;
        },
        isEmpty: function () {
          return count === 0;
        },
        killAll: function (killError, cb) {
          return function () {
            if (count === 0) {
              return cb();
            }

            var killCount = 0;
            var kills     = {};

            function kill(fid) {
              kills[fid] = fibers[fid].kill(killError, function (result) {
                return function () {
                  delete kills[fid];
                  killCount--;
                  if (util.isLeft(result) && util.fromLeft(result)) {
                    setTimeout(function () {
                      throw util.fromLeft(result);
                    }, 0);
                  }
                  if (killCount === 0) {
                    cb();
                  }
                };
              })();
            }

            for (var k in fibers) {
              if (fibers.hasOwnProperty(k)) {
                killCount++;
                kill(k);
              }
            }

            fibers  = {};
            fiberId = 0;
            count   = 0;

            return function (error) {
              return new Aff(SYNC, function () {
                for (var k in kills) {
                  if (kills.hasOwnProperty(k)) {
                    kills[k]();
                  }
                }
              });
            };
          };
        }
      };
    }

    // Fiber state machine
    var SUSPENDED   = 0; // Suspended, pending a join.
    var CONTINUE    = 1; // Interpret the next instruction.
    var STEP_BIND   = 2; // Apply the next bind.
    var STEP_RESULT = 3; // Handle potential failure from a result.
    var PENDING     = 4; // An async effect is running.
    var RETURN      = 5; // The current stack has returned.
    var COMPLETED   = 6; // The entire fiber has completed.

    function Fiber(util, supervisor, aff) {
      // Monotonically increasing tick, increased on each asynchronous turn.
      var runTick = 0;

      // The current branch of the state machine.
      var status = SUSPENDED;

      // The current point of interest for the state machine branch.
      var step      = aff;  // Successful step
      var fail      = null; // Failure step
      var interrupt = null; // Asynchronous interrupt

      // Stack of continuations for the current fiber.
      var bhead = null;
      var btail = null;

      // Stack of attempts and finalizers for error recovery. Every `Cons` is also
      // tagged with current `interrupt` state. We use this to track which items
      // should be ignored or evaluated as a result of a kill.
      var attempts = null;

      // A special state is needed for Bracket, because it cannot be killed. When
      // we enter a bracket acquisition or finalizer, we increment the counter,
      // and then decrement once complete.
      var bracketCount = 0;

      // Each join gets a new id so they can be revoked.
      var joinId  = 0;
      var joins   = null;
      var rethrow = true;

      // Each invocation of `run` requires a tick. When an asynchronous effect is
      // resolved, we must check that the local tick coincides with the fiber
      // tick before resuming. This prevents multiple async continuations from
      // accidentally resuming the same fiber. A common example may be invoking
      // the provided callback in `makeAff` more than once, but it may also be an
      // async effect resuming after the fiber was already cancelled.
      function run(localRunTick) {
        var tmp, result, attempt;
        while (true) {
          tmp       = null;
          result    = null;
          attempt   = null;

          switch (status) {
          case STEP_BIND:
            status = CONTINUE;
            try {
              step   = bhead(step);
              if (btail === null) {
                bhead = null;
              } else {
                bhead = btail._1;
                btail = btail._2;
              }
            } catch (e) {
              status = RETURN;
              fail   = util.left(e);
              step   = null;
            }
            break;

          case STEP_RESULT:
            if (util.isLeft(step)) {
              status = RETURN;
              fail   = step;
              step   = null;
            } else if (bhead === null) {
              status = RETURN;
            } else {
              status = STEP_BIND;
              step   = util.fromRight(step);
            }
            break;

          case CONTINUE:
            switch (step.tag) {
            case BIND:
              if (bhead) {
                btail = new Aff(CONS, bhead, btail);
              }
              bhead  = step._2;
              status = CONTINUE;
              step   = step._1;
              break;

            case PURE:
              if (bhead === null) {
                status = RETURN;
                step   = util.right(step._1);
              } else {
                status = STEP_BIND;
                step   = step._1;
              }
              break;

            case SYNC:
              status = STEP_RESULT;
              step   = runSync(util.left, util.right, step._1);
              break;

            case ASYNC:
              status = PENDING;
              step   = runAsync(util.left, step._1, function (result) {
                return function () {
                  if (runTick !== localRunTick) {
                    return;
                  }
                  runTick++;
                  Scheduler.enqueue(function () {
                    // It's possible to interrupt the fiber between enqueuing and
                    // resuming, so we need to check that the runTick is still
                    // valid.
                    if (runTick !== localRunTick + 1) {
                      return;
                    }
                    status = STEP_RESULT;
                    step   = result;
                    run(runTick);
                  });
                };
              });
              return;

            case THROW:
              status = RETURN;
              fail   = util.left(step._1);
              step   = null;
              break;

            // Enqueue the Catch so that we can call the error handler later on
            // in case of an exception.
            case CATCH:
              if (bhead === null) {
                attempts = new Aff(CONS, step, attempts, interrupt);
              } else {
                attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
              }
              bhead    = null;
              btail    = null;
              status   = CONTINUE;
              step     = step._1;
              break;

            // Enqueue the Bracket so that we can call the appropriate handlers
            // after resource acquisition.
            case BRACKET:
              bracketCount++;
              if (bhead === null) {
                attempts = new Aff(CONS, step, attempts, interrupt);
              } else {
                attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
              }
              bhead  = null;
              btail  = null;
              status = CONTINUE;
              step   = step._1;
              break;

            case FORK:
              status = STEP_RESULT;
              tmp    = Fiber(util, supervisor, step._2);
              if (supervisor) {
                supervisor.register(tmp);
              }
              if (step._1) {
                tmp.run();
              }
              step = util.right(tmp);
              break;

            case SEQ:
              status = CONTINUE;
              step   = sequential(util, supervisor, step._1);
              break;
            }
            break;

          case RETURN:
            bhead = null;
            btail = null;
            // If the current stack has returned, and we have no other stacks to
            // resume or finalizers to run, the fiber has halted and we can
            // invoke all join callbacks. Otherwise we need to resume.
            if (attempts === null) {
              status = COMPLETED;
              step   = interrupt || fail || step;
            } else {
              // The interrupt status for the enqueued item.
              tmp      = attempts._3;
              attempt  = attempts._1;
              attempts = attempts._2;

              switch (attempt.tag) {
              // We cannot recover from an unmasked interrupt. Otherwise we should
              // continue stepping, or run the exception handler if an exception
              // was raised.
              case CATCH:
                // We should compare the interrupt status as well because we
                // only want it to apply if there has been an interrupt since
                // enqueuing the catch.
                if (interrupt && interrupt !== tmp && bracketCount === 0) {
                  status = RETURN;
                } else if (fail) {
                  status = CONTINUE;
                  step   = attempt._2(util.fromLeft(fail));
                  fail   = null;
                }
                break;

              // We cannot resume from an unmasked interrupt or exception.
              case RESUME:
                // As with Catch, we only want to ignore in the case of an
                // interrupt since enqueing the item.
                if (interrupt && interrupt !== tmp && bracketCount === 0 || fail) {
                  status = RETURN;
                } else {
                  bhead  = attempt._1;
                  btail  = attempt._2;
                  status = STEP_BIND;
                  step   = util.fromRight(step);
                }
                break;

              // If we have a bracket, we should enqueue the handlers,
              // and continue with the success branch only if the fiber has
              // not been interrupted. If the bracket acquisition failed, we
              // should not run either.
              case BRACKET:
                bracketCount--;
                if (fail === null) {
                  result   = util.fromRight(step);
                  // We need to enqueue the Release with the same interrupt
                  // status as the Bracket that is initiating it.
                  attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result), attempts, tmp);
                  // We should only coninue as long as the interrupt status has not changed or
                  // we are currently within a non-interruptable finalizer.
                  if (interrupt === tmp || bracketCount > 0) {
                    status = CONTINUE;
                    step   = attempt._3(result);
                  }
                }
                break;

              // Enqueue the appropriate handler. We increase the bracket count
              // because it should not be cancelled.
              case RELEASE:
                attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                status   = CONTINUE;
                // It has only been killed if the interrupt status has changed
                // since we enqueued the item, and the bracket count is 0. If the
                // bracket count is non-zero then we are in a masked state so it's
                // impossible to be killed.
                if (interrupt && interrupt !== tmp && bracketCount === 0) {
                  step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
                } else if (fail) {
                  step = attempt._1.failed(util.fromLeft(fail))(attempt._2);
                } else {
                  step = attempt._1.completed(util.fromRight(step))(attempt._2);
                }
                fail = null;
                bracketCount++;
                break;

              case FINALIZER:
                bracketCount++;
                attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                status   = CONTINUE;
                step     = attempt._1;
                break;

              case FINALIZED:
                bracketCount--;
                status = RETURN;
                step   = attempt._1;
                fail   = attempt._2;
                break;
              }
            }
            break;

          case COMPLETED:
            for (var k in joins) {
              if (joins.hasOwnProperty(k)) {
                rethrow = rethrow && joins[k].rethrow;
                runEff(joins[k].handler(step));
              }
            }
            joins = null;
            // If we have an interrupt and a fail, then the thread threw while
            // running finalizers. This should always rethrow in a fresh stack.
            if (interrupt && fail) {
              setTimeout(function () {
                throw util.fromLeft(fail);
              }, 0);
            // If we have an unhandled exception, and no other fiber has joined
            // then we need to throw the exception in a fresh stack.
            } else if (util.isLeft(step) && rethrow) {
              setTimeout(function () {
                // Guard on reathrow because a completely synchronous fiber can
                // still have an observer which was added after-the-fact.
                if (rethrow) {
                  throw util.fromLeft(step);
                }
              }, 0);
            }
            return;
          case SUSPENDED:
            status = CONTINUE;
            break;
          case PENDING: return;
          }
        }
      }

      function onComplete(join) {
        return function () {
          if (status === COMPLETED) {
            rethrow = rethrow && join.rethrow;
            join.handler(step)();
            return function () {};
          }

          var jid    = joinId++;
          joins      = joins || {};
          joins[jid] = join;

          return function() {
            if (joins !== null) {
              delete joins[jid];
            }
          };
        };
      }

      function kill(error, cb) {
        return function () {
          if (status === COMPLETED) {
            cb(util.right(void 0))();
            return function () {};
          }

          var canceler = onComplete({
            rethrow: false,
            handler: function (/* unused */) {
              return cb(util.right(void 0));
            }
          })();

          switch (status) {
          case SUSPENDED:
            interrupt = util.left(error);
            status    = COMPLETED;
            step      = interrupt;
            run(runTick);
            break;
          case PENDING:
            if (interrupt === null) {
              interrupt = util.left(error);
            }
            if (bracketCount === 0) {
              if (status === PENDING) {
                attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);
              }
              status   = RETURN;
              step     = null;
              fail     = null;
              run(++runTick);
            }
            break;
          default:
            if (interrupt === null) {
              interrupt = util.left(error);
            }
            if (bracketCount === 0) {
              status = RETURN;
              step   = null;
              fail   = null;
            }
          }

          return canceler;
        };
      }

      function join(cb) {
        return function () {
          var canceler = onComplete({
            rethrow: false,
            handler: cb
          })();
          if (status === SUSPENDED) {
            run(runTick);
          }
          return canceler;
        };
      }

      return {
        kill: kill,
        join: join,
        onComplete: onComplete,
        isSuspended: function () {
          return status === SUSPENDED;
        },
        run: function () {
          if (status === SUSPENDED) {
            if (!Scheduler.isDraining()) {
              Scheduler.enqueue(function () {
                run(runTick);
              });
            } else {
              run(runTick);
            }
          }
        }
      };
    }

    function runPar(util, supervisor, par, cb) {
      // Table of all forked fibers.
      var fiberId   = 0;
      var fibers    = {};

      // Table of currently running cancelers, as a product of `Alt` behavior.
      var killId    = 0;
      var kills     = {};

      // Error used for early cancelation on Alt branches.
      var early     = new Error("[ParAff] Early exit");

      // Error used to kill the entire tree.
      var interrupt = null;

      // The root pointer of the tree.
      var root      = EMPTY;

      // Walks a tree, invoking all the cancelers. Returns the table of pending
      // cancellation fibers.
      function kill(error, par, cb) {
        var step  = par;
        var head  = null;
        var tail  = null;
        var count = 0;
        var kills = {};
        var tmp, kid;

        loop: while (true) {
          tmp = null;

          switch (step.tag) {
          case FORKED:
            if (step._3 === EMPTY) {
              tmp = fibers[step._1];
              kills[count++] = tmp.kill(error, function (result) {
                return function () {
                  count--;
                  if (count === 0) {
                    cb(result)();
                  }
                };
              });
            }
            // Terminal case.
            if (head === null) {
              break loop;
            }
            // Go down the right side of the tree.
            step = head._2;
            if (tail === null) {
              head = null;
            } else {
              head = tail._1;
              tail = tail._2;
            }
            break;
          case MAP:
            step = step._2;
            break;
          case APPLY:
          case ALT:
            if (head) {
              tail = new Aff(CONS, head, tail);
            }
            head = step;
            step = step._1;
            break;
          }
        }

        if (count === 0) {
          cb(util.right(void 0))();
        } else {
          // Run the cancelation effects. We alias `count` because it's mutable.
          kid = 0;
          tmp = count;
          for (; kid < tmp; kid++) {
            kills[kid] = kills[kid]();
          }
        }

        return kills;
      }

      // When a fiber resolves, we need to bubble back up the tree with the
      // result, computing the applicative nodes.
      function join(result, head, tail) {
        var fail, step, lhs, rhs, tmp, kid;

        if (util.isLeft(result)) {
          fail = result;
          step = null;
        } else {
          step = result;
          fail = null;
        }

        loop: while (true) {
          lhs = null;
          rhs = null;
          tmp = null;
          kid = null;

          // We should never continue if the entire tree has been interrupted.
          if (interrupt !== null) {
            return;
          }

          // We've made it all the way to the root of the tree, which means
          // the tree has fully evaluated.
          if (head === null) {
            cb(fail || step)();
            return;
          }

          // The tree has already been computed, so we shouldn't try to do it
          // again. This should never happen.
          // TODO: Remove this?
          if (head._3 !== EMPTY) {
            return;
          }

          switch (head.tag) {
          case MAP:
            if (fail === null) {
              head._3 = util.right(head._1(util.fromRight(step)));
              step    = head._3;
            } else {
              head._3 = fail;
            }
            break;
          case APPLY:
            lhs = head._1._3;
            rhs = head._2._3;
            // If we have a failure we should kill the other side because we
            // can't possible yield a result anymore.
            if (fail) {
              head._3 = fail;
              tmp     = true;
              kid     = killId++;

              kills[kid] = kill(early, fail === lhs ? head._2 : head._1, function (/* unused */) {
                return function () {
                  delete kills[kid];
                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(fail, null, null);
                  } else {
                    join(fail, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            } else if (lhs === EMPTY || rhs === EMPTY) {
              // We can only proceed if both sides have resolved.
              return;
            } else {
              step    = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
              head._3 = step;
            }
            break;
          case ALT:
            lhs = head._1._3;
            rhs = head._2._3;
            // We can only proceed if both have resolved or we have a success
            if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
              return;
            }
            // If both sides resolve with an error, we should continue with the
            // first error
            if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
              fail    = step === lhs ? rhs : lhs;
              step    = null;
              head._3 = fail;
            } else {
              head._3 = step;
              tmp     = true;
              kid     = killId++;
              // Once a side has resolved, we need to cancel the side that is still
              // pending before we can continue.
              kills[kid] = kill(early, step === lhs ? head._2 : head._1, function (/* unused */) {
                return function () {
                  delete kills[kid];
                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(step, null, null);
                  } else {
                    join(step, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            }
            break;
          }

          if (tail === null) {
            head = null;
          } else {
            head = tail._1;
            tail = tail._2;
          }
        }
      }

      function resolve(fiber) {
        return function (result) {
          return function () {
            delete fibers[fiber._1];
            fiber._3 = result;
            join(result, fiber._2._1, fiber._2._2);
          };
        };
      }

      // Walks the applicative tree, substituting non-applicative nodes with
      // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot
      // as a mutable slot for memoization. In an unresolved state, the `_3`
      // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk
      // the left side first, because both operations are left-associative. As
      // we `RETURN` from those branches, we then walk the right side.
      function run() {
        var status = CONTINUE;
        var step   = par;
        var head   = null;
        var tail   = null;
        var tmp, fid;

        loop: while (true) {
          tmp = null;
          fid = null;

          switch (status) {
          case CONTINUE:
            switch (step.tag) {
            case MAP:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(MAP, step._1, EMPTY, EMPTY);
              step = step._2;
              break;
            case APPLY:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(APPLY, EMPTY, step._2, EMPTY);
              step = step._1;
              break;
            case ALT:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(ALT, EMPTY, step._2, EMPTY);
              step = step._1;
              break;
            default:
              // When we hit a leaf value, we suspend the stack in the `FORKED`.
              // When the fiber resolves, it can bubble back up the tree.
              fid    = fiberId++;
              status = RETURN;
              tmp    = step;
              step   = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);
              tmp    = Fiber(util, supervisor, tmp);
              tmp.onComplete({
                rethrow: false,
                handler: resolve(step)
              })();
              fibers[fid] = tmp;
              if (supervisor) {
                supervisor.register(tmp);
              }
            }
            break;
          case RETURN:
            // Terminal case, we are back at the root.
            if (head === null) {
              break loop;
            }
            // If we are done with the right side, we need to continue down the
            // left. Otherwise we should continue up the stack.
            if (head._1 === EMPTY) {
              head._1 = step;
              status  = CONTINUE;
              step    = head._2;
              head._2 = EMPTY;
            } else {
              head._2 = step;
              step    = head;
              if (tail === null) {
                head  = null;
              } else {
                head  = tail._1;
                tail  = tail._2;
              }
            }
          }
        }

        // Keep a reference to the tree root so it can be cancelled.
        root = step;

        for (fid = 0; fid < fiberId; fid++) {
          fibers[fid].run();
        }
      }

      // Cancels the entire tree. If there are already subtrees being canceled,
      // we need to first cancel those joins. We will then add fresh joins for
      // all pending branches including those that were in the process of being
      // canceled.
      function cancel(error, cb) {
        interrupt = util.left(error);
        var innerKills;
        for (var kid in kills) {
          if (kills.hasOwnProperty(kid)) {
            innerKills = kills[kid];
            for (kid in innerKills) {
              if (innerKills.hasOwnProperty(kid)) {
                innerKills[kid]();
              }
            }
          }
        }

        kills = null;
        var newKills = kill(error, root, cb);

        return function (killError) {
          return new Aff(ASYNC, function (killCb) {
            return function () {
              for (var kid in newKills) {
                if (newKills.hasOwnProperty(kid)) {
                  newKills[kid]();
                }
              }
              return nonCanceler;
            };
          });
        };
      }

      run();

      return function (killError) {
        return new Aff(ASYNC, function (killCb) {
          return function () {
            return cancel(killError, killCb);
          };
        });
      };
    }

    function sequential(util, supervisor, par) {
      return new Aff(ASYNC, function (cb) {
        return function () {
          return runPar(util, supervisor, par, cb);
        };
      });
    }

    Aff.EMPTY       = EMPTY;
    Aff.Pure        = AffCtr(PURE);
    Aff.Throw       = AffCtr(THROW);
    Aff.Catch       = AffCtr(CATCH);
    Aff.Sync        = AffCtr(SYNC);
    Aff.Async       = AffCtr(ASYNC);
    Aff.Bind        = AffCtr(BIND);
    Aff.Bracket     = AffCtr(BRACKET);
    Aff.Fork        = AffCtr(FORK);
    Aff.Seq         = AffCtr(SEQ);
    Aff.ParMap      = AffCtr(MAP);
    Aff.ParApply    = AffCtr(APPLY);
    Aff.ParAlt      = AffCtr(ALT);
    Aff.Fiber       = Fiber;
    Aff.Supervisor  = Supervisor;
    Aff.Scheduler   = Scheduler;
    Aff.nonCanceler = nonCanceler;

    return Aff;
  }();

  exports._pure = Aff.Pure;

  exports._throwError = Aff.Throw;

  exports._catchError = function (aff) {
    return function (k) {
      return Aff.Catch(aff, k);
    };
  };

  exports._map = function (f) {
    return function (aff) {
      if (aff.tag === Aff.Pure.tag) {
        return Aff.Pure(f(aff._1));
      } else {
        return Aff.Bind(aff, function (value) {
          return Aff.Pure(f(value));
        });
      }
    };
  };

  exports._bind = function (aff) {
    return function (k) {
      return Aff.Bind(aff, k);
    };
  };

  exports._liftEffect = Aff.Sync;

  exports.makeAff = Aff.Async;

  exports._makeFiber = function (util, aff) {
    return function () {
      return Aff.Fiber(util, null, aff);
    };
  };
})(PS["Effect.Aff"] = PS["Effect.Aff"] || {});
(function(exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function($PS) {
  "use strict";
  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];                    
  var monadEffect = new Control_Monad.Monad(function () {
      return applicativeEffect;
  }, function () {
      return bindEffect;
  });
  var bindEffect = new Control_Bind.Bind(function () {
      return applyEffect;
  }, $foreign.bindE);
  var applyEffect = new Control_Apply.Apply(function () {
      return functorEffect;
  }, Control_Monad.ap(monadEffect));
  var applicativeEffect = new Control_Applicative.Applicative(function () {
      return applyEffect;
  }, $foreign.pureE);
  var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
  exports["functorEffect"] = functorEffect;
  exports["applicativeEffect"] = applicativeEffect;
  exports["bindEffect"] = bindEffect;
})(PS);
(function($PS) {
  "use strict";
  $PS["Effect.Class"] = $PS["Effect.Class"] || {};
  var exports = $PS["Effect.Class"];         
  var MonadEffect = function (Monad0, liftEffect) {
      this.Monad0 = Monad0;
      this.liftEffect = liftEffect;
  };                                                         
  var liftEffect = function (dict) {
      return dict.liftEffect;
  };
  exports["liftEffect"] = liftEffect;
  exports["MonadEffect"] = MonadEffect;
})(PS);
(function(exports) {
  "use strict";

  // module Partial.Unsafe

  exports.unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  "use strict";

  // module Partial

  exports.crashWith = function () {
    return function (msg) {
      throw new Error(msg);
    };
  };
})(PS["Partial"] = PS["Partial"] || {});
(function($PS) {
  "use strict";
  $PS["Partial"] = $PS["Partial"] || {};
  var exports = $PS["Partial"];
  var $foreign = $PS["Partial"];
  exports["crashWith"] = $foreign.crashWith;
})(PS);
(function($PS) {
  "use strict";
  $PS["Partial.Unsafe"] = $PS["Partial.Unsafe"] || {};
  var exports = $PS["Partial.Unsafe"];
  var $foreign = $PS["Partial.Unsafe"];
  var Partial = $PS["Partial"];
  var unsafeCrashWith = function (msg) {
      return $foreign.unsafePartial(function (dictPartial) {
          return Partial.crashWith()(msg);
      });
  };
  exports["unsafeCrashWith"] = unsafeCrashWith;
})(PS);
(function($PS) {
  "use strict";
  $PS["Effect.Aff"] = $PS["Effect.Aff"] || {};
  var exports = $PS["Effect.Aff"];
  var $foreign = $PS["Effect.Aff"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Class = $PS["Effect.Class"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];                          
  var functorAff = new Data_Functor.Functor($foreign["_map"]);
  var ffiUtil = (function () {
      var unsafeFromRight = function (v) {
          if (v instanceof Data_Either.Right) {
              return v.value0;
          };
          if (v instanceof Data_Either.Left) {
              return Partial_Unsafe.unsafeCrashWith("unsafeFromRight: Left");
          };
          throw new Error("Failed pattern match at Effect.Aff (line 400, column 21 - line 402, column 54): " + [ v.constructor.name ]);
      };
      var unsafeFromLeft = function (v) {
          if (v instanceof Data_Either.Left) {
              return v.value0;
          };
          if (v instanceof Data_Either.Right) {
              return Partial_Unsafe.unsafeCrashWith("unsafeFromLeft: Right");
          };
          throw new Error("Failed pattern match at Effect.Aff (line 395, column 20 - line 397, column 54): " + [ v.constructor.name ]);
      };
      var isLeft = function (v) {
          if (v instanceof Data_Either.Left) {
              return true;
          };
          if (v instanceof Data_Either.Right) {
              return false;
          };
          throw new Error("Failed pattern match at Effect.Aff (line 390, column 12 - line 392, column 20): " + [ v.constructor.name ]);
      };
      return {
          isLeft: isLeft,
          fromLeft: unsafeFromLeft,
          fromRight: unsafeFromRight,
          left: Data_Either.Left.create,
          right: Data_Either.Right.create
      };
  })();
  var makeFiber = function (aff) {
      return $foreign["_makeFiber"](ffiUtil, aff);
  };
  var launchAff = function (aff) {
      return function __do() {
          var fiber = makeFiber(aff)();
          fiber.run();
          return fiber;
      };
  };
  var monadAff = new Control_Monad.Monad(function () {
      return applicativeAff;
  }, function () {
      return bindAff;
  });
  var bindAff = new Control_Bind.Bind(function () {
      return applyAff;
  }, $foreign["_bind"]);
  var applyAff = new Control_Apply.Apply(function () {
      return functorAff;
  }, Control_Monad.ap(monadAff));
  var applicativeAff = new Control_Applicative.Applicative(function () {
      return applyAff;
  }, $foreign["_pure"]);
  var monadEffectAff = new Effect_Class.MonadEffect(function () {
      return monadAff;
  }, $foreign["_liftEffect"]);
  var monadThrowAff = new Control_Monad_Error_Class.MonadThrow(function () {
      return monadAff;
  }, $foreign["_throwError"]);
  var monadErrorAff = new Control_Monad_Error_Class.MonadError(function () {
      return monadThrowAff;
  }, $foreign["_catchError"]);                                  
  var runAff = function (k) {
      return function (aff) {
          return launchAff(Control_Bind.bindFlipped(bindAff)((function () {
              var $49 = Effect_Class.liftEffect(monadEffectAff);
              return function ($50) {
                  return $49(k($50));
              };
          })())(Control_Monad_Error_Class["try"](monadErrorAff)(aff)));
      };
  };
  var runAff_ = function (k) {
      return function (aff) {
          return Data_Functor["void"](Effect.functorEffect)(runAff(k)(aff));
      };
  };
  var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit));
  exports["runAff_"] = runAff_;
  exports["nonCanceler"] = nonCanceler;
  exports["functorAff"] = functorAff;
  exports["applicativeAff"] = applicativeAff;
  exports["bindAff"] = bindAff;
  exports["monadErrorAff"] = monadErrorAff;
  exports["makeAff"] = $foreign.makeAff;
})(PS);
(function($PS) {
  "use strict";
  $PS["Effect.Aff.Compat"] = $PS["Effect.Aff.Compat"] || {};
  var exports = $PS["Effect.Aff.Compat"];
  var Data_Either = $PS["Data.Either"];
  var Effect_Aff = $PS["Effect.Aff"];
  var fromEffectFnAff = function (v) {
      return Effect_Aff.makeAff(function (k) {
          return function __do() {
              var v1 = v(function ($4) {
                  return k(Data_Either.Left.create($4))();
              }, function ($5) {
                  return k(Data_Either.Right.create($5))();
              });
              return function (e) {
                  return Effect_Aff.makeAff(function (k2) {
                      return function __do() {
                          v1(e, function ($6) {
                              return k2(Data_Either.Left.create($6))();
                          }, function ($7) {
                              return k2(Data_Either.Right.create($7))();
                          });
                          return Effect_Aff.nonCanceler;
                      };
                  });
              };
          };
      });
  };
  exports["fromEffectFnAff"] = fromEffectFnAff;
})(PS);
(function(exports) {
  "use strict";

  exports.showErrorImpl = function (err) {
    return err.stack || err.toString();
  };

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.message = function (e) {
    return e.message;
  };

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };
})(PS["Effect.Exception"] = PS["Effect.Exception"] || {});
(function($PS) {
  "use strict";
  $PS["Effect.Exception"] = $PS["Effect.Exception"] || {};
  var exports = $PS["Effect.Exception"];
  var $foreign = $PS["Effect.Exception"];
  var Data_Show = $PS["Data.Show"];
  var $$throw = function ($2) {
      return $foreign.throwException($foreign.error($2));
  };                                                                               
  var showError = new Data_Show.Show($foreign.showErrorImpl);
  exports["throw"] = $$throw;
  exports["showError"] = showError;
  exports["message"] = $foreign.message;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeToForeign = function (value) {
    return value;
  };

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.typeOf = function (value) {
    return typeof value;
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };

  exports.isNull = function (value) {
    return value === null;
  };

  exports.isUndefined = function (value) {
    return value === undefined;
  };
})(PS["Foreign"] = PS["Foreign"] || {});
(function($PS) {
  "use strict";
  $PS["Data.Boolean"] = $PS["Data.Boolean"] || {};
  var exports = $PS["Data.Boolean"];
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS);
(function($PS) {
  "use strict";
  $PS["Foreign"] = $PS["Foreign"] || {};
  var exports = $PS["Foreign"];
  var $foreign = $PS["Foreign"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var Data_Show = $PS["Data.Show"];                                        
  var ForeignError = (function () {
      function ForeignError(value0) {
          this.value0 = value0;
      };
      ForeignError.create = function (value0) {
          return new ForeignError(value0);
      };
      return ForeignError;
  })();
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var ErrorAtIndex = (function () {
      function ErrorAtIndex(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtIndex.create = function (value0) {
          return function (value1) {
              return new ErrorAtIndex(value0, value1);
          };
      };
      return ErrorAtIndex;
  })();
  var ErrorAtProperty = (function () {
      function ErrorAtProperty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtProperty.create = function (value0) {
          return function (value1) {
              return new ErrorAtProperty(value0, value1);
          };
      };
      return ErrorAtProperty;
  })();
  var showForeignError = new Data_Show.Show(function (v) {
      if (v instanceof ForeignError) {
          return "(ForeignError " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
      };
      if (v instanceof ErrorAtIndex) {
          return "(ErrorAtIndex " + (Data_Show.show(Data_Show.showInt)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
      };
      if (v instanceof ErrorAtProperty) {
          return "(ErrorAtProperty " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(showForeignError)(v.value1) + ")")));
      };
      if (v instanceof TypeMismatch) {
          return "(TypeMismatch " + (Data_Show.show(Data_Show.showString)(v.value0) + (" " + (Data_Show.show(Data_Show.showString)(v.value1) + ")")));
      };
      throw new Error("Failed pattern match at Foreign (line 63, column 1 - line 67, column 89): " + [ v.constructor.name ]);
  });
  var renderForeignError = function (v) {
      if (v instanceof ForeignError) {
          return v.value0;
      };
      if (v instanceof ErrorAtIndex) {
          return "Error at array index " + (Data_Show.show(Data_Show.showInt)(v.value0) + (": " + renderForeignError(v.value1)));
      };
      if (v instanceof ErrorAtProperty) {
          return "Error at property " + (Data_Show.show(Data_Show.showString)(v.value0) + (": " + renderForeignError(v.value1)));
      };
      if (v instanceof TypeMismatch) {
          return "Type mismatch: expected " + (v.value0 + (", found " + v.value1));
      };
      throw new Error("Failed pattern match at Foreign (line 72, column 1 - line 72, column 45): " + [ v.constructor.name ]);
  };
  var fail = (function () {
      var $107 = Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity));
      return function ($108) {
          return $107(Data_List_NonEmpty.singleton($108));
      };
  })();
  var unsafeReadTagged = function (tag) {
      return function (value) {
          if ($foreign.tagOf(value) === tag) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
          };
          if (Data_Boolean.otherwise) {
              return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
          };
          throw new Error("Failed pattern match at Foreign (line 106, column 1 - line 106, column 55): " + [ tag.constructor.name, value.constructor.name ]);
      };
  };                                            
  var readNumber = unsafeReadTagged("Number");
  var readString = unsafeReadTagged("String");
  exports["ForeignError"] = ForeignError;
  exports["TypeMismatch"] = TypeMismatch;
  exports["ErrorAtProperty"] = ErrorAtProperty;
  exports["renderForeignError"] = renderForeignError;
  exports["unsafeReadTagged"] = unsafeReadTagged;
  exports["readString"] = readString;
  exports["readNumber"] = readNumber;
  exports["fail"] = fail;
  exports["showForeignError"] = showForeignError;
  exports["unsafeToForeign"] = $foreign.unsafeToForeign;
  exports["typeOf"] = $foreign.typeOf;
  exports["isNull"] = $foreign.isNull;
  exports["isUndefined"] = $foreign.isUndefined;
})(PS);
(function($PS) {
  "use strict";
  $PS["Affjax"] = $PS["Affjax"] || {};
  var exports = $PS["Affjax"];
  var $foreign = $PS["Affjax"];
  var Affjax_RequestBody = $PS["Affjax.RequestBody"];
  var Affjax_RequestHeader = $PS["Affjax.RequestHeader"];
  var Affjax_ResponseFormat = $PS["Affjax.ResponseFormat"];
  var Affjax_ResponseHeader = $PS["Affjax.ResponseHeader"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Argonaut_Core = $PS["Data.Argonaut.Core"];
  var Data_Argonaut_Parser = $PS["Data.Argonaut.Parser"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_FormURLEncoded = $PS["Data.FormURLEncoded"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HTTP_Method = $PS["Data.HTTP.Method"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Compat = $PS["Effect.Aff.Compat"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Foreign = $PS["Foreign"];                
  var RequestContentError = (function () {
      function RequestContentError(value0) {
          this.value0 = value0;
      };
      RequestContentError.create = function (value0) {
          return new RequestContentError(value0);
      };
      return RequestContentError;
  })();
  var ResponseBodyError = (function () {
      function ResponseBodyError(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ResponseBodyError.create = function (value0) {
          return function (value1) {
              return new ResponseBodyError(value0, value1);
          };
      };
      return ResponseBodyError;
  })();
  var XHRError = (function () {
      function XHRError(value0) {
          this.value0 = value0;
      };
      XHRError.create = function (value0) {
          return new XHRError(value0);
      };
      return XHRError;
  })();
  var request = function (req) {
      var parseJSON = function (v) {
          if (v === "") {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Argonaut_Core.jsonEmptyObject);
          };
          return Data_Either.either(function ($47) {
              return Foreign.fail(Foreign.ForeignError.create($47));
          })(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)))(Data_Argonaut_Parser.jsonParser(v));
      };
      var fromResponse = (function () {
          if (req.responseFormat instanceof Affjax_ResponseFormat["ArrayBuffer"]) {
              return Foreign.unsafeReadTagged("ArrayBuffer");
          };
          if (req.responseFormat instanceof Affjax_ResponseFormat.Blob) {
              return Foreign.unsafeReadTagged("Blob");
          };
          if (req.responseFormat instanceof Affjax_ResponseFormat.Document) {
              return Foreign.unsafeReadTagged("Document");
          };
          if (req.responseFormat instanceof Affjax_ResponseFormat.Json) {
              return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(function ($48) {
                  return req.responseFormat.value0(parseJSON($48));
              })(Foreign.unsafeReadTagged("String"));
          };
          if (req.responseFormat instanceof Affjax_ResponseFormat["String"]) {
              return Foreign.unsafeReadTagged("String");
          };
          if (req.responseFormat instanceof Affjax_ResponseFormat.Ignore) {
              return Data_Function["const"](req.responseFormat.value0(Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Unit.unit)));
          };
          throw new Error("Failed pattern match at Affjax (line 237, column 18 - line 243, column 57): " + [ req.responseFormat.constructor.name ]);
      })();
      var extractContent = function (v) {
          if (v instanceof Affjax_RequestBody.ArrayView) {
              return Data_Either.Right.create(v.value0(Foreign.unsafeToForeign));
          };
          if (v instanceof Affjax_RequestBody.Blob) {
              return Data_Either.Right.create(Foreign.unsafeToForeign(v.value0));
          };
          if (v instanceof Affjax_RequestBody.Document) {
              return Data_Either.Right.create(Foreign.unsafeToForeign(v.value0));
          };
          if (v instanceof Affjax_RequestBody["String"]) {
              return Data_Either.Right.create(Foreign.unsafeToForeign(v.value0));
          };
          if (v instanceof Affjax_RequestBody.FormData) {
              return Data_Either.Right.create(Foreign.unsafeToForeign(v.value0));
          };
          if (v instanceof Affjax_RequestBody.FormURLEncoded) {
              return Data_Either.note("Body contains values that cannot be encoded as application/x-www-form-urlencoded")(Data_Functor.map(Data_Maybe.functorMaybe)(Foreign.unsafeToForeign)(Data_FormURLEncoded.encode(v.value0)));
          };
          if (v instanceof Affjax_RequestBody.Json) {
              return Data_Either.Right.create(Foreign.unsafeToForeign(Data_Argonaut_Core.stringify(v.value0)));
          };
          throw new Error("Failed pattern match at Affjax (line 203, column 20 - line 218, column 69): " + [ v.constructor.name ]);
      };
      var addHeader = function (mh) {
          return function (hs) {
              if (mh instanceof Data_Maybe.Just && !Data_Foldable.any(Data_Foldable.foldableArray)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Function.on(Data_Eq.eq(Data_Eq.eqString))(Affjax_RequestHeader.name)(mh.value0))(hs)) {
                  return Data_Array.snoc(hs)(mh.value0);
              };
              return hs;
          };
      };
      var headers = function (reqContent) {
          return addHeader(Data_Functor.map(Data_Maybe.functorMaybe)(Affjax_RequestHeader.ContentType.create)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Affjax_RequestBody.toMediaType)(reqContent)))(addHeader(Data_Functor.map(Data_Maybe.functorMaybe)(Affjax_RequestHeader.Accept.create)(Affjax_ResponseFormat.toMediaType(req.responseFormat)))(req.headers));
      };
      var ajaxRequest = function (v) {
          return {
              method: Data_HTTP_Method.print(req.method),
              url: req.url,
              headers: Data_Functor.map(Data_Functor.functorArray)(function (h) {
                  return {
                      field: Affjax_RequestHeader.name(h),
                      value: Affjax_RequestHeader.value(h)
                  };
              })(headers(req.content)),
              content: v,
              responseType: Affjax_ResponseFormat.toResponseType(req.responseFormat),
              username: Data_Nullable.toNullable(req.username),
              password: Data_Nullable.toNullable(req.password),
              withCredentials: req.withCredentials
          };
      };
      var send = function (content) {
          return Data_Functor.mapFlipped(Effect_Aff.functorAff)(Control_Monad_Error_Class["try"](Effect_Aff.monadErrorAff)(Effect_Aff_Compat.fromEffectFnAff($foreign["_ajax"](Affjax_ResponseHeader.ResponseHeader.create, ajaxRequest(content)))))(function (v) {
              if (v instanceof Data_Either.Right) {
                  var v1 = Control_Monad_Except.runExcept(fromResponse(v.value0.body));
                  if (v1 instanceof Data_Either.Left) {
                      return new Data_Either.Left(new ResponseBodyError(Data_List_NonEmpty.head(v1.value0), v.value0));
                  };
                  if (v1 instanceof Data_Either.Right) {
                      return new Data_Either.Right({
                          body: v1.value0,
                          headers: v.value0.headers,
                          status: v.value0.status,
                          statusText: v.value0.statusText
                      });
                  };
                  throw new Error("Failed pattern match at Affjax (line 184, column 9 - line 186, column 52): " + [ v1.constructor.name ]);
              };
              if (v instanceof Data_Either.Left) {
                  return new Data_Either.Left(new XHRError(v.value0));
              };
              throw new Error("Failed pattern match at Affjax (line 182, column 86 - line 188, column 28): " + [ v.constructor.name ]);
          });
      };
      if (req.content instanceof Data_Maybe.Nothing) {
          return send(Data_Nullable.toNullable(Data_Maybe.Nothing.value));
      };
      if (req.content instanceof Data_Maybe.Just) {
          var v = extractContent(req.content.value0);
          if (v instanceof Data_Either.Right) {
              return send(Data_Nullable.toNullable(new Data_Maybe.Just(v.value0)));
          };
          if (v instanceof Data_Either.Left) {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)(new Data_Either.Left(new RequestContentError(v.value0)));
          };
          throw new Error("Failed pattern match at Affjax (line 173, column 7 - line 177, column 48): " + [ v.constructor.name ]);
      };
      throw new Error("Failed pattern match at Affjax (line 169, column 3 - line 177, column 48): " + [ req.content.constructor.name ]);
  };
  var printError = function (v) {
      if (v instanceof RequestContentError) {
          return "There was a problem with the request content: " + v.value0;
      };
      if (v instanceof ResponseBodyError) {
          return "There was a problem with the response body: " + Foreign.renderForeignError(v.value0);
      };
      if (v instanceof XHRError) {
          return "There was a problem making the request: " + Effect_Exception.message(v.value0);
      };
      throw new Error("Failed pattern match at Affjax (line 91, column 14 - line 97, column 66): " + [ v.constructor.name ]);
  };
  var defaultRequest = {
      method: new Data_Either.Left(Data_HTTP_Method.GET.value),
      url: "/",
      headers: [  ],
      content: Data_Maybe.Nothing.value,
      username: Data_Maybe.Nothing.value,
      password: Data_Maybe.Nothing.value,
      withCredentials: false,
      responseFormat: Affjax_ResponseFormat.ignore
  };
  exports["defaultRequest"] = defaultRequest;
  exports["printError"] = printError;
  exports["request"] = request;
})(PS);
(function(exports) {
  "use strict";

  exports.uint8Array = function(arrayBuffer) {
    return new Uint8Array(arrayBuffer)
  }
})(PS["Ajax"] = PS["Ajax"] || {});
(function($PS) {
  "use strict";
  $PS["Ajax"] = $PS["Ajax"] || {};
  var exports = $PS["Ajax"];
  var $foreign = $PS["Ajax"];
  var Affjax = $PS["Affjax"];
  var Affjax_RequestBody = $PS["Affjax.RequestBody"];
  var Affjax_ResponseFormat = $PS["Affjax.ResponseFormat"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HTTP_Method = $PS["Data.HTTP.Method"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Show = $PS["Data.Show"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Exception = $PS["Effect.Exception"];                
  var post = function (url) {
      return function (d) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Affjax.request({
              method: new Data_Either.Left(Data_HTTP_Method.POST.value),
              url: url,
              headers: Affjax.defaultRequest.headers,
              content: Data_Maybe.Just.create(Affjax_RequestBody.arrayView(d)),
              username: Affjax.defaultRequest.username,
              password: Affjax.defaultRequest.password,
              withCredentials: Affjax.defaultRequest.withCredentials,
              responseFormat: Affjax_ResponseFormat.arrayBuffer
          }))(function (resp) {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)((function () {
                  if (resp instanceof Data_Either.Left) {
                      return Data_Either.Left.create("Request failed: " + Affjax.printError(resp.value0));
                  };
                  if (resp instanceof Data_Either.Right) {
                      return Data_Either.Right.create($foreign.uint8Array(resp.value0.body));
                  };
                  throw new Error("Failed pattern match at Ajax (line 31, column 10 - line 33, column 77): " + [ resp.constructor.name ]);
              })());
          });
      };
  };
  var postEff = function (url) {
      return function (d) {
          return function (failure) {
              return function (success) {
                  var f = function (v) {
                      if (v instanceof Data_Either.Left) {
                          return Data_Functor["void"](Effect.functorEffect)(failure(Data_Show.show(Effect_Exception.showError)(v.value0)));
                      };
                      if (v instanceof Data_Either.Right && v.value0 instanceof Data_Either.Left) {
                          return Data_Functor["void"](Effect.functorEffect)(failure(Data_Show.show(Data_Show.showString)(v.value0.value0)));
                      };
                      if (v instanceof Data_Either.Right && v.value0 instanceof Data_Either.Right) {
                          return Data_Functor["void"](Effect.functorEffect)(success(v.value0.value0));
                      };
                      throw new Error("Failed pattern match at Ajax (line 38, column 5 - line 38, column 64): " + [ v.constructor.name ]);
                  };
                  return Effect_Aff.runAff_(f)(post(url)(d));
              };
          };
      };
  };
  var get = function (url) {
      return Control_Bind.bind(Effect_Aff.bindAff)(Affjax.request({
          method: Affjax.defaultRequest.method,
          url: url,
          headers: Affjax.defaultRequest.headers,
          content: Affjax.defaultRequest.content,
          username: Affjax.defaultRequest.username,
          password: Affjax.defaultRequest.password,
          withCredentials: Affjax.defaultRequest.withCredentials,
          responseFormat: Affjax_ResponseFormat.string
      }))(function (resp) {
          return Control_Applicative.pure(Effect_Aff.applicativeAff)((function () {
              if (resp instanceof Data_Either.Left) {
                  return Data_Either.Left.create("Request failed: " + Affjax.printError(resp.value0));
              };
              if (resp instanceof Data_Either.Right && resp.value0.status === 200) {
                  return new Data_Either.Right(resp.value0.body);
              };
              if (resp instanceof Data_Either.Right) {
                  return Data_Either.Left.create("Request failed: " + (Data_Show.show(Data_Show.showInt)(resp.value0.status) + (", b:" + resp.value0.body)));
              };
              throw new Error("Failed pattern match at Ajax (line 46, column 10 - line 49, column 106): " + [ resp.constructor.name ]);
          })());
      });
  };
  var getEff = function (url) {
      return function (failure) {
          return function (success) {
              var f = function (v) {
                  if (v instanceof Data_Either.Left) {
                      return Data_Functor["void"](Effect.functorEffect)(failure(Data_Show.show(Effect_Exception.showError)(v.value0)));
                  };
                  if (v instanceof Data_Either.Right && v.value0 instanceof Data_Either.Left) {
                      return Data_Functor["void"](Effect.functorEffect)(failure(Data_Show.show(Data_Show.showString)(v.value0.value0)));
                  };
                  if (v instanceof Data_Either.Right && v.value0 instanceof Data_Either.Right) {
                      return Data_Functor["void"](Effect.functorEffect)(success(v.value0.value0));
                  };
                  throw new Error("Failed pattern match at Ajax (line 54, column 5 - line 54, column 60): " + [ v.constructor.name ]);
              };
              return Effect_Aff.runAff_(f)(get(url));
          };
      };
  };
  exports["getEff"] = getEff;
  exports["postEff"] = postEff;
})(PS);
(function($PS) {
  "use strict";
  $PS["Api"] = $PS["Api"] || {};
  var exports = $PS["Api"];
  var Data_Eq = $PS["Data.Eq"];                
  var Medical = (function () {
      function Medical() {

      };
      Medical.value = new Medical();
      return Medical;
  })();
  var Police = (function () {
      function Police() {

      };
      Police.value = new Police();
      return Police;
  })();
  var Firefighter = (function () {
      function Firefighter() {

      };
      Firefighter.value = new Firefighter();
      return Firefighter;
  })();
  var Army = (function () {
      function Army() {

      };
      Army.value = new Army();
      return Army;
  })();
  var Farmacy = (function () {
      function Farmacy() {

      };
      Farmacy.value = new Farmacy();
      return Farmacy;
  })();
  var Cashier = (function () {
      function Cashier() {

      };
      Cashier.value = new Cashier();
      return Cashier;
  })();
  var Regular = (function () {
      function Regular() {

      };
      Regular.value = new Regular();
      return Regular;
  })();
  var eqPassengerType = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Medical && y instanceof Medical) {
              return true;
          };
          if (x instanceof Police && y instanceof Police) {
              return true;
          };
          if (x instanceof Firefighter && y instanceof Firefighter) {
              return true;
          };
          if (x instanceof Army && y instanceof Army) {
              return true;
          };
          if (x instanceof Farmacy && y instanceof Farmacy) {
              return true;
          };
          if (x instanceof Cashier && y instanceof Cashier) {
              return true;
          };
          if (x instanceof Regular && y instanceof Regular) {
              return true;
          };
          return false;
      };
  });
  exports["Medical"] = Medical;
  exports["Police"] = Police;
  exports["Firefighter"] = Firefighter;
  exports["Army"] = Army;
  exports["Farmacy"] = Farmacy;
  exports["Cashier"] = Cashier;
  exports["Regular"] = Regular;
  exports["eqPassengerType"] = eqPassengerType;
})(PS);
(function(exports) {
  "use strict"

  var FLOAT64_MAX = 1.7976931348623157e+308
  var FLOAT64_MIN = 2.2250738585072014e-308
  var TWO_TO_20 = 1048576
  var TWO_TO_32 = 4294967296
  var TWO_TO_52 = 4503599627370496

  exports.splitFloat64 = function(value) {
    var sign = (value < 0) ? 1 : 0
    value = sign ? -value : value

    // Handle zeros.
    if (value === 0) {
      if ((1 / value) > 0) {
        // Positive zero.
        return { low: 0x00000000, high: 0x00000000 }
      } else {
        // Negative zero.
        return { low: 0x00000000, high: 0x80000000 }
      }
    }

    // Handle nans.
    if (isNaN(value)) {
      return { low: 0xFFFFFFFF, high: 0x7FFFFFFF }
    }

    // Handle infinities.
    if (value > FLOAT64_MAX) {
      return { low: 0, high: ((sign << 31) | (0x7FF00000)) >>> 0 }
    }

    // Handle denormals.
    if (value < FLOAT64_MIN) {
      // Number is a denormal.
      var mant = value / Math.pow(2, -1074)
      var mantHigh = (mant / TWO_TO_32)
      return { low: (mant >>> 0), high: ((sign << 31) | mantHigh) >>> 0 }
    }

    var exp = Math.floor(Math.log(value) / Math.LN2)
    if (exp == 1024) exp = 1023
    var mant = value * Math.pow(2, -exp)

    var mantHigh = (mant * TWO_TO_20) & 0xFFFFF
    var mantLow = (mant * TWO_TO_52) >>> 0

    return { low: mantLow, high: ((sign << 31) | ((exp + 1023) << 20) | mantHigh) >>> 0 }
  }
})(PS["Proto.Encode"] = PS["Proto.Encode"] || {});
(function(exports) {
  "use strict"

  exports.length = function(xs) {
    return xs.length
  }

  exports.indexUnsafe = function(xs) {
    return function(i) {
      return xs[i]
    }
  }

  exports.slice = function(xs) {
    return function(start) {
      return function(end) {
        return xs.slice(start, end)
      }
    }
  }

  exports.fromArray = function(xs) {
    return new Uint8Array(xs)
  }

  exports.concatAll = function(xs) {
    var zs = new Uint8Array(xs.reduce(function(acc, x) {
      return acc + x.length
    }, 0))
    xs.reduce(function(acc, x) {
      zs.set(x, acc)
      return acc + x.length
    }, 0)
    return zs
  }
})(PS["Proto.Uint8ArrayExt"] = PS["Proto.Uint8ArrayExt"] || {});
(function($PS) {
  "use strict";
  $PS["Proto.Uint8ArrayExt"] = $PS["Proto.Uint8ArrayExt"] || {};
  var exports = $PS["Proto.Uint8ArrayExt"];
  var $foreign = $PS["Proto.Uint8ArrayExt"];
  var Data_Either = $PS["Data.Either"];                
  var index = function (xs) {
      return function (pos) {
          var len = $foreign.length(xs);
          var $0 = 0 <= pos && pos < len;
          if ($0) {
              return new Data_Either.Right($foreign.indexUnsafe(xs)(pos));
          };
          return new Data_Either.Left({
              pos: pos,
              len: len
          });
      };
  };
  exports["index"] = index;
  exports["length"] = $foreign.length;
  exports["slice"] = $foreign.slice;
  exports["concatAll"] = $foreign.concatAll;
  exports["fromArray"] = $foreign.fromArray;
})(PS);
(function(exports) {
  "use strict"

  exports.numOfBytes = function(string) {
    var len = 0,
        c = 0
    for (var i = 0; i < string.length; ++i) {
      c = string.charCodeAt(i)
      if (c < 128)
        len += 1
      else if (c < 2048)
        len += 2
      else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {
        ++i
        len += 4
      } else
        len += 3
    }
    return len
  }

  exports.toString = function(buffer) {
    var start = 0
    var end = buffer.length
    var len = end - start
    if (len < 1)
      return ""
    var parts = null,
      chunk = [],
      i = 0, // char offset
      t     // temporary
    while (start < end) {
      t = buffer[start++]
      if (t < 128)
        chunk[i++] = t
      else if (t > 191 && t < 224)
        chunk[i++] = (t & 31) << 6 | buffer[start++] & 63
      else if (t > 239 && t < 365) {
        t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000
        chunk[i++] = 0xD800 + (t >> 10)
        chunk[i++] = 0xDC00 + (t & 1023)
      } else
        chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63
      if (i > 8191) {
        (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk))
        i = 0
      }
    }
    if (parts) {
      if (i)
        parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)))
      return parts.join("")
    }
    return String.fromCharCode.apply(String, chunk.slice(0, i))
  }

  exports.toUint8Array = function(string) {
    return function(len) {
      var buffer = new Uint8Array(len)
      var offset = 0
      var c1, // character 1
          c2 // character 2
      for (var i = 0; i < string.length; ++i) {
        c1 = string.charCodeAt(i)
        if (c1 < 128) {
          buffer[offset++] = c1
        } else if (c1 < 2048) {
          buffer[offset++] = c1 >> 6       | 192
          buffer[offset++] = c1       & 63 | 128
        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {
          c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF)
          ++i
          buffer[offset++] = c1 >> 18      | 240
          buffer[offset++] = c1 >> 12 & 63 | 128
          buffer[offset++] = c1 >> 6  & 63 | 128
          buffer[offset++] = c1       & 63 | 128
        } else {
          buffer[offset++] = c1 >> 12      | 224
          buffer[offset++] = c1 >> 6  & 63 | 128
          buffer[offset++] = c1       & 63 | 128
        }
      }
      return buffer
    }
  }
})(PS["Proto.Utf8"] = PS["Proto.Utf8"] || {});
(function($PS) {
  "use strict";
  $PS["Proto.Utf8"] = $PS["Proto.Utf8"] || {};
  var exports = $PS["Proto.Utf8"];
  var $foreign = $PS["Proto.Utf8"];
  exports["numOfBytes"] = $foreign.numOfBytes;
  exports["toString"] = $foreign.toString;
  exports["toUint8Array"] = $foreign.toUint8Array;
})(PS);
(function($PS) {
  "use strict";
  $PS["Proto.Encode"] = $PS["Proto.Encode"] || {};
  var exports = $PS["Proto.Encode"];
  var $foreign = $PS["Proto.Encode"];
  var Data_Array = $PS["Data.Array"];
  var Proto_Uint8ArrayExt = $PS["Proto.Uint8ArrayExt"];
  var Proto_Utf8 = $PS["Proto.Utf8"];                
  var uint32 = (function () {
      var loop = function ($copy_acc) {
          return function ($copy_val) {
              var $tco_var_acc = $copy_acc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(acc, val) {
                  var $1 = val > 127;
                  if ($1) {
                      $tco_var_acc = Data_Array.snoc(acc)(val & 127 | 128);
                      $copy_val = val >>> 7;
                      return;
                  };
                  $tco_done = true;
                  return Data_Array.snoc(acc)(val);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_acc, $copy_val);
              };
              return $tco_result;
          };
      };
      var $9 = loop([  ]);
      return function ($10) {
          return Proto_Uint8ArrayExt.fromArray($9($10));
      };
  })();
  var string = function (x) {
      var len = Proto_Utf8.numOfBytes(x);
      var $2 = len === 0;
      if ($2) {
          return uint32(0);
      };
      return Proto_Uint8ArrayExt.concatAll([ uint32(len), Proto_Utf8.toUint8Array(x)(len) ]);
  };
  var $$double = function (y) {
      var fixedUint32 = function (x) {
          return Proto_Uint8ArrayExt.fromArray([ x >>> 0 & 255, x >>> 8 & 255, x >>> 16 & 255, x >>> 24 & 255 ]);
      };
      var x = $foreign.splitFloat64(y);
      return Proto_Uint8ArrayExt.concatAll([ fixedUint32(x.low), fixedUint32(x.high) ]);
  };
  exports["uint32"] = uint32;
  exports["double"] = $$double;
  exports["string"] = string;
})(PS);
(function($PS) {
  "use strict";
  $PS["Api.Pull"] = $PS["Api.Pull"] || {};
  var exports = $PS["Api.Pull"];
  var Api = $PS["Api"];
  var Data_Array = $PS["Data.Array"];
  var Proto_Encode = $PS["Proto.Encode"];
  var Proto_Uint8ArrayExt = $PS["Proto.Uint8ArrayExt"];                
  var TelegramString = (function () {
      function TelegramString(value0) {
          this.value0 = value0;
      };
      TelegramString.create = function (value0) {
          return new TelegramString(value0);
      };
      return TelegramString;
  })();
  var TelegramNum = (function () {
      function TelegramNum(value0) {
          this.value0 = value0;
      };
      TelegramNum.create = function (value0) {
          return new TelegramNum(value0);
      };
      return TelegramNum;
  })();
  var Ping = (function () {
      function Ping() {

      };
      Ping.value = new Ping();
      return Ping;
  })();
  var TelegramLogin = (function () {
      function TelegramLogin(value0) {
          this.value0 = value0;
      };
      TelegramLogin.create = function (value0) {
          return new TelegramLogin(value0);
      };
      return TelegramLogin;
  })();
  var AddDriver = (function () {
      function AddDriver(value0) {
          this.value0 = value0;
      };
      AddDriver.create = function (value0) {
          return new AddDriver(value0);
      };
      return AddDriver;
  })();
  var AddPassenger = (function () {
      function AddPassenger(value0) {
          this.value0 = value0;
      };
      AddPassenger.create = function (value0) {
          return new AddPassenger(value0);
      };
      return AddPassenger;
  })();
  var GetFreeDrivers = (function () {
      function GetFreeDrivers(value0) {
          this.value0 = value0;
      };
      GetFreeDrivers.create = function (value0) {
          return new GetFreeDrivers(value0);
      };
      return GetFreeDrivers;
  })();
  var GetFreePassengers = (function () {
      function GetFreePassengers(value0) {
          this.value0 = value0;
      };
      GetFreePassengers.create = function (value0) {
          return new GetFreePassengers(value0);
      };
      return GetFreePassengers;
  })();
  var GetCitiesList = (function () {
      function GetCitiesList(value0) {
          this.value0 = value0;
      };
      GetCitiesList.create = function (value0) {
          return new GetCitiesList(value0);
      };
      return GetCitiesList;
  })();
  var encodeTelegramString = function (msg) {
      var xs = Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(10), Proto_Encode.string(msg.key), Proto_Encode.uint32(18), Proto_Encode.string(msg.value) ]);
      return Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(Proto_Uint8ArrayExt.length(xs)), xs ]);
  };
  var encodeTelegramNum = function (msg) {
      var xs = Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(10), Proto_Encode.string(msg.key), Proto_Encode.uint32(17), Proto_Encode["double"](msg.value) ]);
      return Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(Proto_Uint8ArrayExt.length(xs)), xs ]);
  };
  var encodeTelegramData = function (v) {
      if (v instanceof TelegramString) {
          var xs = Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(10), encodeTelegramString(v.value0) ]);
          return Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(Proto_Uint8ArrayExt.length(xs)), xs ]);
      };
      if (v instanceof TelegramNum) {
          var xs = Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(18), encodeTelegramNum(v.value0) ]);
          return Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(Proto_Uint8ArrayExt.length(xs)), xs ]);
      };
      throw new Error("Failed pattern match at Api.Pull (line 56, column 1 - line 56, column 49): " + [ v.constructor.name ]);
  };
  var encodeTelegramLogin = function (msg) {
      var xs = Proto_Uint8ArrayExt.concatAll([ Proto_Uint8ArrayExt.concatAll(Data_Array.concatMap(function (x) {
          return [ Proto_Encode.uint32(10), encodeTelegramData(x) ];
      })(msg.d)) ]);
      return Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(Proto_Uint8ArrayExt.length(xs)), xs ]);
  };
  var encodeRegular = Proto_Encode.uint32(0);
  var encodePolice = Proto_Encode.uint32(0);
  var encodePing = Proto_Encode.uint32(0);
  var encodeMedical = Proto_Encode.uint32(0);
  var encodeGetFreePassengers = function (msg) {
      var xs = Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(9), Proto_Encode["double"](msg.date) ]);
      return Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(Proto_Uint8ArrayExt.length(xs)), xs ]);
  };
  var encodeGetFreeDrivers = function (msg) {
      var xs = Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(9), Proto_Encode["double"](msg.date) ]);
      return Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(Proto_Uint8ArrayExt.length(xs)), xs ]);
  };
  var encodeGetCitiesList = function (msg) {
      var xs = Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(10), Proto_Encode.string(msg.country), Proto_Encode.uint32(18), Proto_Encode.string(msg.lang) ]);
      return Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(Proto_Uint8ArrayExt.length(xs)), xs ]);
  };
  var encodeFirefighter = Proto_Encode.uint32(0);
  var encodeFarmacy = Proto_Encode.uint32(0);
  var encodeCashier = Proto_Encode.uint32(0);
  var encodeArmy = Proto_Encode.uint32(0);
  var encodePassengerType = function (v) {
      if (v instanceof Api.Medical) {
          var xs = Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(10), encodeMedical ]);
          return Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(Proto_Uint8ArrayExt.length(xs)), xs ]);
      };
      if (v instanceof Api.Police) {
          var xs = Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(18), encodePolice ]);
          return Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(Proto_Uint8ArrayExt.length(xs)), xs ]);
      };
      if (v instanceof Api.Firefighter) {
          var xs = Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(26), encodeFirefighter ]);
          return Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(Proto_Uint8ArrayExt.length(xs)), xs ]);
      };
      if (v instanceof Api.Army) {
          var xs = Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(34), encodeArmy ]);
          return Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(Proto_Uint8ArrayExt.length(xs)), xs ]);
      };
      if (v instanceof Api.Farmacy) {
          var xs = Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(42), encodeFarmacy ]);
          return Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(Proto_Uint8ArrayExt.length(xs)), xs ]);
      };
      if (v instanceof Api.Cashier) {
          var xs = Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(50), encodeCashier ]);
          return Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(Proto_Uint8ArrayExt.length(xs)), xs ]);
      };
      if (v instanceof Api.Regular) {
          var xs = Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(58), encodeRegular ]);
          return Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(Proto_Uint8ArrayExt.length(xs)), xs ]);
      };
      throw new Error("Failed pattern match at Api.Pull (line 127, column 1 - line 127, column 51): " + [ v.constructor.name ]);
  };
  var encodeAddress = function (msg) {
      var xs = Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(10), Proto_Encode.string(msg.country), Proto_Encode.uint32(18), Proto_Encode.string(msg.city), Proto_Encode.uint32(26), Proto_Encode.string(msg.street), Proto_Encode.uint32(34), Proto_Encode.string(msg.building) ]);
      return Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(Proto_Uint8ArrayExt.length(xs)), xs ]);
  };
  var encodeAddPassenger = function (msg) {
      var xs = Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(10), Proto_Encode.string(msg.firstName), Proto_Encode.uint32(18), Proto_Encode.string(msg.lastName), Proto_Encode.uint32(26), Proto_Encode.string(msg.phone), Proto_Encode.uint32(33), Proto_Encode["double"](msg.date), Proto_Encode.uint32(42), encodePassengerType(msg.tpe), Proto_Encode.uint32(50), encodeAddress(msg.from), Proto_Encode.uint32(58), encodeAddress(msg.to) ]);
      return Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(Proto_Uint8ArrayExt.length(xs)), xs ]);
  };
  var encodeAddDriver = function (msg) {
      var xs = Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(10), Proto_Encode.string(msg.firstName), Proto_Encode.uint32(18), Proto_Encode.string(msg.lastName), Proto_Encode.uint32(26), Proto_Encode.string(msg.phone), Proto_Encode.uint32(34), Proto_Encode.string(msg.carPlate), Proto_Encode.uint32(41), Proto_Encode["double"](msg.date), Proto_Encode.uint32(48), Proto_Encode.uint32(msg.deviationDistance), Proto_Encode.uint32(56), Proto_Encode.uint32(msg.deviationTime), Proto_Encode.uint32(64), Proto_Encode.uint32(msg.seats), Proto_Encode.uint32(74), encodeAddress(msg.from), Proto_Encode.uint32(82), encodeAddress(msg.to), Proto_Uint8ArrayExt.concatAll(Data_Array.concatMap(function (x) {
          return [ Proto_Encode.uint32(90), encodePassengerType(x) ];
      })(msg.types)), Proto_Encode.uint32(98), Proto_Encode.string(msg.lang) ]);
      return Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(Proto_Uint8ArrayExt.length(xs)), xs ]);
  };
  var encodePull = function (v) {
      if (v instanceof Ping) {
          return Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(10), encodePing ]);
      };
      if (v instanceof TelegramLogin) {
          return Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(26), encodeTelegramLogin(v.value0) ]);
      };
      if (v instanceof AddDriver) {
          return Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(82), encodeAddDriver(v.value0) ]);
      };
      if (v instanceof AddPassenger) {
          return Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(162), encodeAddPassenger(v.value0) ]);
      };
      if (v instanceof GetFreeDrivers) {
          return Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(242), encodeGetFreeDrivers(v.value0) ]);
      };
      if (v instanceof GetFreePassengers) {
          return Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(322), encodeGetFreePassengers(v.value0) ]);
      };
      if (v instanceof GetCitiesList) {
          return Proto_Uint8ArrayExt.concatAll([ Proto_Encode.uint32(402), encodeGetCitiesList(v.value0) ]);
      };
      throw new Error("Failed pattern match at Api.Pull (line 37, column 1 - line 37, column 33): " + [ v.constructor.name ]);
  };
  exports["TelegramLogin"] = TelegramLogin;
  exports["AddDriver"] = AddDriver;
  exports["AddPassenger"] = AddPassenger;
  exports["GetFreeDrivers"] = GetFreeDrivers;
  exports["GetFreePassengers"] = GetFreePassengers;
  exports["TelegramString"] = TelegramString;
  exports["TelegramNum"] = TelegramNum;
  exports["encodePull"] = encodePull;
})(PS);
(function($PS) {
  "use strict";
  $PS["Control.Monad.Rec.Class"] = $PS["Control.Monad.Rec.Class"] || {};
  var exports = $PS["Control.Monad.Rec.Class"];
  var Data_Either = $PS["Data.Either"];              
  var Loop = (function () {
      function Loop(value0) {
          this.value0 = value0;
      };
      Loop.create = function (value0) {
          return new Loop(value0);
      };
      return Loop;
  })();
  var Done = (function () {
      function Done(value0) {
          this.value0 = value0;
      };
      Done.create = function (value0) {
          return new Done(value0);
      };
      return Done;
  })();
  var MonadRec = function (Monad0, tailRecM) {
      this.Monad0 = Monad0;
      this.tailRecM = tailRecM;
  };
  var tailRecM = function (dict) {
      return dict.tailRecM;
  };
  var tailRecM3 = function (dictMonadRec) {
      return function (f) {
          return function (a) {
              return function (b) {
                  return function (c) {
                      return tailRecM(dictMonadRec)(function (o) {
                          return f(o.a)(o.b)(o.c);
                      })({
                          a: a,
                          b: b,
                          c: c
                      });
                  };
              };
          };
      };
  };
  var tailRec = function (f) {
      var go = function ($copy_v) {
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(v) {
              if (v instanceof Loop) {
                  $copy_v = f(v.value0);
                  return;
              };
              if (v instanceof Done) {
                  $tco_done = true;
                  return v.value0;
              };
              throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 93, column 3 - line 93, column 25): " + [ v.constructor.name ]);
          };
          while (!$tco_done) {
              $tco_result = $tco_loop($copy_v);
          };
          return $tco_result;
      };
      return function ($58) {
          return go(f($58));
      };
  }; 
  var monadRecEither = new MonadRec(function () {
      return Data_Either.monadEither;
  }, function (f) {
      return function (a0) {
          var g = function (v) {
              if (v instanceof Data_Either.Left) {
                  return new Done(new Data_Either.Left(v.value0));
              };
              if (v instanceof Data_Either.Right && v.value0 instanceof Loop) {
                  return new Loop(f(v.value0.value0));
              };
              if (v instanceof Data_Either.Right && v.value0 instanceof Done) {
                  return new Done(new Data_Either.Right(v.value0.value0));
              };
              throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 121, column 7 - line 121, column 33): " + [ v.constructor.name ]);
          };
          return tailRec(g)(f(a0));
      };
  });
  exports["Loop"] = Loop;
  exports["Done"] = Done;
  exports["tailRecM3"] = tailRecM3;
  exports["monadRecEither"] = monadRecEither;
})(PS);
(function(exports) {
  "use strict"

  var TWO_TO_32 = 4294967296
  var TWO_TO_52 = 4503599627370496

  exports.joinFloat64 = function(bitsLow) {
    return function(bitsHigh) {
      var sign = ((bitsHigh >> 31) * 2 + 1)
      var exp = (bitsHigh >>> 20) & 0x7FF
      var mant = TWO_TO_32 * (bitsHigh & 0xFFFFF) + bitsLow

      if (exp == 0x7FF) {
        if (mant) {
          return NaN
        } else {
          return sign * Infinity
        }
      }

      if (exp == 0) {
        // Denormal.
        return sign * Math.pow(2, -1074) * mant
      } else {
        return sign * Math.pow(2, exp - 1075) *
               (mant + TWO_TO_52)
      }
    }
  }
})(PS["Proto.Decode"] = PS["Proto.Decode"] || {});
(function($PS) {
  "use strict";
  $PS["Proto.Decode"] = $PS["Proto.Decode"] || {};
  var exports = $PS["Proto.Decode"];
  var $foreign = $PS["Proto.Decode"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Show = $PS["Data.Show"];
  var Data_Unit = $PS["Data.Unit"];
  var Proto_Uint8ArrayExt = $PS["Proto.Uint8ArrayExt"];
  var Proto_Utf8 = $PS["Proto.Utf8"];                
  var OutOfBound = (function () {
      function OutOfBound(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      OutOfBound.create = function (value0) {
          return function (value1) {
              return new OutOfBound(value0, value1);
          };
      };
      return OutOfBound;
  })();
  var BadWireType = (function () {
      function BadWireType(value0) {
          this.value0 = value0;
      };
      BadWireType.create = function (value0) {
          return new BadWireType(value0);
      };
      return BadWireType;
  })();
  var BadType = (function () {
      function BadType(value0) {
          this.value0 = value0;
      };
      BadType.create = function (value0) {
          return new BadType(value0);
      };
      return BadType;
  })();
  var UnexpectedCase = (function () {
      function UnexpectedCase(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      UnexpectedCase.create = function (value0) {
          return function (value1) {
              return new UnexpectedCase(value0, value1);
          };
      };
      return UnexpectedCase;
  })();
  var MissingFields = (function () {
      function MissingFields(value0) {
          this.value0 = value0;
      };
      MissingFields.create = function (value0) {
          return new MissingFields(value0);
      };
      return MissingFields;
  })();
  var IntTooLong = (function () {
      function IntTooLong() {

      };
      IntTooLong.value = new IntTooLong();
      return IntTooLong;
  })();
  var skip = function (n) {
      return function (xs) {
          return function (pos0) {
              var len = Proto_Uint8ArrayExt.length(xs);
              var $12 = (pos0 + n | 0) > len;
              if ($12) {
                  return new Data_Either.Left(new OutOfBound(pos0 + n | 0, len));
              };
              return Control_Applicative.pure(Data_Either.applicativeEither)({
                  pos: pos0 + n | 0,
                  val: Data_Unit.unit
              });
          };
      };
  };
  var showError = new Data_Show.Show(function (v) {
      if (v instanceof OutOfBound) {
          return "index=" + (Data_Show.show(Data_Show.showInt)(v.value0) + (" out of bound=" + Data_Show.show(Data_Show.showInt)(v.value1)));
      };
      if (v instanceof BadWireType) {
          return "bad wire type=" + Data_Show.show(Data_Show.showInt)(v.value0);
      };
      if (v instanceof BadType) {
          return "bad type=" + Data_Show.show(Data_Show.showInt)(v.value0);
      };
      if (v instanceof UnexpectedCase) {
          return "unexpected case val=" + (Data_Show.show(Data_Show.showInt)(v.value0) + (" pos=" + Data_Show.show(Data_Show.showInt)(v.value1)));
      };
      if (v instanceof MissingFields) {
          return "missing fields in=" + v.value0;
      };
      if (v instanceof IntTooLong) {
          return "varint32 too long";
      };
      throw new Error("Failed pattern match at Proto.Decode (line 25, column 1 - line 31, column 42): " + [ v.constructor.name ]);
  });
  var index = function (xs) {
      return function (pos) {
          return Data_Bifunctor.lmap(Data_Either.bifunctorEither)(function (x) {
              return new OutOfBound(x.pos, x.len);
          })(Proto_Uint8ArrayExt.index(xs)(pos));
      };
  };
  var skip$prime = function ($copy_xs) {
      return function ($copy_pos) {
          var $tco_var_xs = $copy_xs;
          var $tco_done = false;
          var $tco_result;
          function $tco_loop(xs, pos) {
              var v = index(xs)(pos);
              if (v instanceof Data_Either.Left) {
                  $tco_done = true;
                  return new Data_Either.Left(v.value0);
              };
              if (v instanceof Data_Either.Right && (v.value0 & 128) === 0) {
                  $tco_done = true;
                  return Control_Applicative.pure(Data_Either.applicativeEither)({
                      pos: pos + 1 | 0,
                      val: Data_Unit.unit
                  });
              };
              if (v instanceof Data_Either.Right) {
                  $tco_var_xs = xs;
                  $copy_pos = pos + 1 | 0;
                  return;
              };
              throw new Error("Failed pattern match at Proto.Decode (line 113, column 3 - line 116, column 32): " + [ v.constructor.name ]);
          };
          while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_xs, $copy_pos);
          };
          return $tco_result;
      };
  };
  var uint32 = function (xs) {
      return function (pos) {
          return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos))(function (x) {
              var val = x & 127;
              var $25 = x < 128;
              if ($25) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)({
                      pos: pos + 1 | 0,
                      val: val
                  });
              };
              return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos + 1 | 0))(function (x1) {
                  var val1 = val | (x1 & 127) << 7;
                  var $26 = x1 < 128;
                  if ($26) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          pos: pos + 2 | 0,
                          val: val1
                      });
                  };
                  return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos + 2 | 0))(function (x2) {
                      var val2 = val1 | (x2 & 127) << 14;
                      var $27 = x2 < 128;
                      if ($27) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)({
                              pos: pos + 3 | 0,
                              val: val2
                          });
                      };
                      return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos + 3 | 0))(function (x3) {
                          var val3 = val2 | (x3 & 127) << 21;
                          var $28 = x3 < 128;
                          if ($28) {
                              return Control_Applicative.pure(Data_Either.applicativeEither)({
                                  pos: pos + 4 | 0,
                                  val: val3
                              });
                          };
                          return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos + 4 | 0))(function (x4) {
                              var val4 = val3 | (x4 & 15) << 28;
                              var $29 = x4 < 128;
                              if ($29) {
                                  return Control_Applicative.pure(Data_Either.applicativeEither)({
                                      pos: pos + 5 | 0,
                                      val: val4 >>> 0
                                  });
                              };
                              return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos + 5 | 0))(function (x5) {
                                  var $30 = x5 < 128;
                                  if ($30) {
                                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                                          pos: pos + 6 | 0,
                                          val: val4
                                      });
                                  };
                                  return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos + 6 | 0))(function (x6) {
                                      var $31 = x6 < 128;
                                      if ($31) {
                                          return Control_Applicative.pure(Data_Either.applicativeEither)({
                                              pos: pos + 7 | 0,
                                              val: val4
                                          });
                                      };
                                      return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos + 7 | 0))(function (x7) {
                                          var $32 = x7 < 128;
                                          if ($32) {
                                              return Control_Applicative.pure(Data_Either.applicativeEither)({
                                                  pos: pos + 8 | 0,
                                                  val: val4
                                              });
                                          };
                                          return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos + 8 | 0))(function (x8) {
                                              var $33 = x8 < 128;
                                              if ($33) {
                                                  return Control_Applicative.pure(Data_Either.applicativeEither)({
                                                      pos: pos + 9 | 0,
                                                      val: val4
                                                  });
                                              };
                                              return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos + 9 | 0))(function (x9) {
                                                  var $34 = x9 < 128;
                                                  if ($34) {
                                                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                                                          pos: pos + 10 | 0,
                                                          val: val4
                                                      });
                                                  };
                                                  return Data_Either.Left.create(IntTooLong.value);
                                              });
                                          });
                                      });
                                  });
                              });
                          });
                      });
                  });
              });
          });
      };
  };                 
  var skipType = function (v) {
      return function (v1) {
          return function (v2) {
              var xs = v;
              if (v2 === 0) {
                  return skip$prime(xs)(v1);
              };
              var xs = v;
              if (v2 === 1) {
                  return skip(8)(xs)(v1);
              };
              var xs = v;
              if (v2 === 2) {
                  return Control_Bind.bind(Data_Either.bindEither)(uint32(xs)(v1))(function (v3) {
                      return skip(v3.val)(xs)(v3.pos);
                  });
              };
              if (v2 === 3) {
                  var loop = function (xs) {
                      return function (pos) {
                          return Control_Bind.bind(Data_Either.bindEither)(uint32(xs)(pos))(function (v3) {
                              var wireType = v3.val & 7;
                              var $42 = wireType !== 4;
                              if ($42) {
                                  return Control_Bind.bind(Data_Either.bindEither)(skipType(xs)(v3.pos)(wireType))(function (v4) {
                                      return loop(xs)(v4.pos);
                                  });
                              };
                              return Control_Applicative.pure(Data_Either.applicativeEither)({
                                  pos: v3.pos,
                                  val: Data_Unit.unit
                              });
                          });
                      };
                  };
                  return loop(v)(v1);
              };
              if (v2 === 5) {
                  return skip(4)(v)(v1);
              };
              return Data_Either.Left.create(new BadWireType(v2));
          };
      };
  };
  var $$double = function (xs) {
      return function (pos) {
          var fixedUint32 = function (pos1) {
              return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos1 + 0 | 0))(function (a) {
                  return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos1 + 1 | 0))(function (b) {
                      return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos1 + 2 | 0))(function (c) {
                          return Control_Bind.bind(Data_Either.bindEither)(index(xs)(pos1 + 3 | 0))(function (d) {
                              return Control_Applicative.pure(Data_Either.applicativeEither)({
                                  pos: pos1 + 4 | 0,
                                  val: (a << 0 | b << 8 | c << 16 | d << 24) >>> 0
                              });
                          });
                      });
                  });
              });
          };
          return Control_Bind.bind(Data_Either.bindEither)(fixedUint32(pos))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(fixedUint32(v.pos))(function (v1) {
                  return Control_Applicative.pure(Data_Either.applicativeEither)({
                      pos: v1.pos,
                      val: $foreign.joinFloat64(v.val)(v1.val)
                  });
              });
          });
      };
  };
  var bytes = function (xs) {
      return function (pos0) {
          return Control_Bind.bind(Data_Either.bindEither)(uint32(xs)(pos0))(function (v) {
              var end = v.pos + v.val | 0;
              var len = Proto_Uint8ArrayExt.length(xs);
              var $54 = end > len;
              if ($54) {
                  return new Data_Either.Left(new OutOfBound(end, len));
              };
              return Control_Applicative.pure(Data_Either.applicativeEither)({
                  pos: v.pos + v.val | 0,
                  val: Proto_Uint8ArrayExt.slice(xs)(v.pos)(end)
              });
          });
      };
  };
  var string = function (xs) {
      return function (pos0) {
          return Control_Bind.bind(Data_Either.bindEither)(bytes(xs)(pos0))(function (v) {
              return Control_Applicative.pure(Data_Either.applicativeEither)({
                  pos: v.pos,
                  val: Proto_Utf8.toString(v.val)
              });
          });
      };
  };
  exports["BadType"] = BadType;
  exports["MissingFields"] = MissingFields;
  exports["uint32"] = uint32;
  exports["double"] = $$double;
  exports["string"] = string;
  exports["skipType"] = skipType;
  exports["showError"] = showError;
})(PS);
(function($PS) {
  "use strict";
  $PS["Api.Push"] = $PS["Api.Push"] || {};
  var exports = $PS["Api.Push"];
  var Api = $PS["Api"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Proto_Decode = $PS["Proto.Decode"];                
  var Pong = (function () {
      function Pong() {

      };
      Pong.value = new Pong();
      return Pong;
  })();
  var LoginOk = (function () {
      function LoginOk() {

      };
      LoginOk.value = new LoginOk();
      return LoginOk;
  })();
  var LoginErr = (function () {
      function LoginErr() {

      };
      LoginErr.value = new LoginErr();
      return LoginErr;
  })();
  var SessionData = (function () {
      function SessionData(value0) {
          this.value0 = value0;
      };
      SessionData.create = function (value0) {
          return new SessionData(value0);
      };
      return SessionData;
  })();
  var AddRouteOk = (function () {
      function AddRouteOk(value0) {
          this.value0 = value0;
      };
      AddRouteOk.create = function (value0) {
          return new AddRouteOk(value0);
      };
      return AddRouteOk;
  })();
  var AddRouteErr = (function () {
      function AddRouteErr(value0) {
          this.value0 = value0;
      };
      AddRouteErr.create = function (value0) {
          return new AddRouteErr(value0);
      };
      return AddRouteErr;
  })();
  var FreeDrivers = (function () {
      function FreeDrivers(value0) {
          this.value0 = value0;
      };
      FreeDrivers.create = function (value0) {
          return new FreeDrivers(value0);
      };
      return FreeDrivers;
  })();
  var FreePassengers = (function () {
      function FreePassengers(value0) {
          this.value0 = value0;
      };
      FreePassengers.create = function (value0) {
          return new FreePassengers(value0);
      };
      return FreePassengers;
  })();
  var CitiesList = (function () {
      function CitiesList(value0) {
          this.value0 = value0;
      };
      CitiesList.create = function (value0) {
          return new CitiesList(value0);
      };
      return CitiesList;
  })();
  var decodeRegular = function (_xs_) {
      return function (pos0) {
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos0))(function (v) {
              return Control_Applicative.pure(Data_Either.applicativeEither)({
                  pos: v.pos + v.val | 0,
                  val: Data_Unit.unit
              });
          });
      };
  };
  var decodePong = function (_xs_) {
      return function (pos0) {
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos0))(function (v) {
              return Control_Applicative.pure(Data_Either.applicativeEither)({
                  pos: v.pos + v.val | 0,
                  val: Data_Unit.unit
              });
          });
      };
  };
  var decodePolice = function (_xs_) {
      return function (pos0) {
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos0))(function (v) {
              return Control_Applicative.pure(Data_Either.applicativeEither)({
                  pos: v.pos + v.val | 0,
                  val: Data_Unit.unit
              });
          });
      };
  };
  var decodeMedical = function (_xs_) {
      return function (pos0) {
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos0))(function (v) {
              return Control_Applicative.pure(Data_Either.applicativeEither)({
                  pos: v.pos + v.val | 0,
                  val: Data_Unit.unit
              });
          });
      };
  };
  var decodeLoginOk = function (_xs_) {
      return function (pos0) {
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos0))(function (v) {
              return Control_Applicative.pure(Data_Either.applicativeEither)({
                  pos: v.pos + v.val | 0,
                  val: Data_Unit.unit
              });
          });
      };
  };
  var decodeLoginErr = function (_xs_) {
      return function (pos0) {
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos0))(function (v) {
              return Control_Applicative.pure(Data_Either.applicativeEither)({
                  pos: v.pos + v.val | 0,
                  val: Data_Unit.unit
              });
          });
      };
  };
  var decodeFirefighter = function (_xs_) {
      return function (pos0) {
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos0))(function (v) {
              return Control_Applicative.pure(Data_Either.applicativeEither)({
                  pos: v.pos + v.val | 0,
                  val: Data_Unit.unit
              });
          });
      };
  };
  var decodeFieldLoop = function (end) {
      return function (res) {
          return function (f) {
              return Data_Functor.map(Data_Either.functorEither)(function (v) {
                  return new Control_Monad_Rec_Class.Loop({
                      a: end,
                      b: f(v.val),
                      c: v.pos
                  });
              })(res);
          };
      };
  };
  var decodeLocation = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(Proto_Decode["double"](_xs_)(v.pos))(function (val) {
                                      return {
                                          lat: new Data_Maybe.Just(val),
                                          lng: acc.lng
                                      };
                                  });
                              };
                              if (v1 === 2) {
                                  return decodeFieldLoop(end)(Proto_Decode["double"](_xs_)(v.pos))(function (val) {
                                      return {
                                          lng: new Data_Maybe.Just(val),
                                          lat: acc.lat
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos0))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  lat: Data_Maybe.Nothing.value,
                  lng: Data_Maybe.Nothing.value
              })(v.pos))(function (v1) {
                  if (v1.val.lat instanceof Data_Maybe.Just && v1.val.lng instanceof Data_Maybe.Just) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          pos: v1.pos,
                          val: {
                              lat: v1.val.lat.value0,
                              lng: v1.val.lng.value0
                          }
                      });
                  };
                  return Data_Either.Left.create(new Proto_Decode.MissingFields("Location"));
              });
          });
      };
  };
  var decodeRouteInfo = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          fromAddress: new Data_Maybe.Just(val),
                                          fromLocation: acc.fromLocation,
                                          toAddress: acc.toAddress,
                                          toLocation: acc.toLocation
                                      };
                                  });
                              };
                              if (v1 === 2) {
                                  return decodeFieldLoop(end)(decodeLocation(_xs_)(v.pos))(function (val) {
                                      return {
                                          fromLocation: new Data_Maybe.Just(val),
                                          fromAddress: acc.fromAddress,
                                          toAddress: acc.toAddress,
                                          toLocation: acc.toLocation
                                      };
                                  });
                              };
                              if (v1 === 3) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          toAddress: new Data_Maybe.Just(val),
                                          fromAddress: acc.fromAddress,
                                          fromLocation: acc.fromLocation,
                                          toLocation: acc.toLocation
                                      };
                                  });
                              };
                              if (v1 === 4) {
                                  return decodeFieldLoop(end)(decodeLocation(_xs_)(v.pos))(function (val) {
                                      return {
                                          toLocation: new Data_Maybe.Just(val),
                                          fromAddress: acc.fromAddress,
                                          fromLocation: acc.fromLocation,
                                          toAddress: acc.toAddress
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos0))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  fromAddress: Data_Maybe.Nothing.value,
                  fromLocation: Data_Maybe.Nothing.value,
                  toAddress: Data_Maybe.Nothing.value,
                  toLocation: Data_Maybe.Nothing.value
              })(v.pos))(function (v1) {
                  if (v1.val.fromAddress instanceof Data_Maybe.Just && (v1.val.fromLocation instanceof Data_Maybe.Just && (v1.val.toAddress instanceof Data_Maybe.Just && v1.val.toLocation instanceof Data_Maybe.Just))) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          pos: v1.pos,
                          val: {
                              fromAddress: v1.val.fromAddress.value0,
                              fromLocation: v1.val.fromLocation.value0,
                              toAddress: v1.val.toAddress.value0,
                              toLocation: v1.val.toLocation.value0
                          }
                      });
                  };
                  return Data_Either.Left.create(new Proto_Decode.MissingFields("RouteInfo"));
              });
          });
      };
  };
  var decodeFarmacy = function (_xs_) {
      return function (pos0) {
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos0))(function (v) {
              return Control_Applicative.pure(Data_Either.applicativeEither)({
                  pos: v.pos + v.val | 0,
                  val: Data_Unit.unit
              });
          });
      };
  };
  var decodeCitiesList = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          cities: Data_Array.snoc(acc.cities)(val)
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos0))(function (v) {
              return Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  cities: [  ]
              })(v.pos);
          });
      };
  };
  var decodeCashier = function (_xs_) {
      return function (pos0) {
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos0))(function (v) {
              return Control_Applicative.pure(Data_Either.applicativeEither)({
                  pos: v.pos + v.val | 0,
                  val: Data_Unit.unit
              });
          });
      };
  };
  var decodeArmy = function (_xs_) {
      return function (pos0) {
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos0))(function (v) {
              return Control_Applicative.pure(Data_Either.applicativeEither)({
                  pos: v.pos + v.val | 0,
                  val: Data_Unit.unit
              });
          });
      };
  };
  var decodePassengerType = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (v) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos1))(function (v1) {
                              var v2 = v1.val >>> 3;
                              if (v2 === 1) {
                                  return decodeFieldLoop(end)(decodeMedical(_xs_)(v1.pos))(function (v3) {
                                      return new Data_Maybe.Just(Api.Medical.value);
                                  });
                              };
                              if (v2 === 2) {
                                  return decodeFieldLoop(end)(decodePolice(_xs_)(v1.pos))(function (v3) {
                                      return new Data_Maybe.Just(Api.Police.value);
                                  });
                              };
                              if (v2 === 3) {
                                  return decodeFieldLoop(end)(decodeFirefighter(_xs_)(v1.pos))(function (v3) {
                                      return new Data_Maybe.Just(Api.Firefighter.value);
                                  });
                              };
                              if (v2 === 4) {
                                  return decodeFieldLoop(end)(decodeArmy(_xs_)(v1.pos))(function (v3) {
                                      return new Data_Maybe.Just(Api.Army.value);
                                  });
                              };
                              if (v2 === 5) {
                                  return decodeFieldLoop(end)(decodeFarmacy(_xs_)(v1.pos))(function (v3) {
                                      return new Data_Maybe.Just(Api.Farmacy.value);
                                  });
                              };
                              if (v2 === 6) {
                                  return decodeFieldLoop(end)(decodeCashier(_xs_)(v1.pos))(function (v3) {
                                      return new Data_Maybe.Just(Api.Cashier.value);
                                  });
                              };
                              if (v2 === 7) {
                                  return decodeFieldLoop(end)(decodeRegular(_xs_)(v1.pos))(function (v3) {
                                      return new Data_Maybe.Just(Api.Regular.value);
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v1.pos)(v1.val & 7))(function (v3) {
                                  return v;
                              });
                          });
                      };
                      if (v instanceof Data_Maybe.Just) {
                          return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                              pos: pos1,
                              val: v.value0
                          }));
                      };
                      if (v instanceof Data_Maybe.Nothing) {
                          return Data_Either.Left.create(new Proto_Decode.MissingFields("PassengerType"));
                      };
                      throw new Error("Failed pattern match at Api.Push (line 129, column 5 - line 129, column 159): " + [ end.constructor.name, v.constructor.name, pos1.constructor.name ]);
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos0))(function (v) {
              return Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)(Data_Maybe.Nothing.value)(v.pos);
          });
      };
  };
  var decodeDriverInfo = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          id: new Data_Maybe.Just(val),
                                          date: acc.date,
                                          routes: acc.routes,
                                          types: acc.types
                                      };
                                  });
                              };
                              if (v1 === 6) {
                                  return decodeFieldLoop(end)(Proto_Decode["double"](_xs_)(v.pos))(function (val) {
                                      return {
                                          date: new Data_Maybe.Just(val),
                                          id: acc.id,
                                          routes: acc.routes,
                                          types: acc.types
                                      };
                                  });
                              };
                              if (v1 === 8) {
                                  return decodeFieldLoop(end)(decodeRouteInfo(_xs_)(v.pos))(function (val) {
                                      return {
                                          routes: Data_Array.snoc(acc.routes)(val),
                                          date: acc.date,
                                          id: acc.id,
                                          types: acc.types
                                      };
                                  });
                              };
                              if (v1 === 9) {
                                  return decodeFieldLoop(end)(decodePassengerType(_xs_)(v.pos))(function (val) {
                                      return {
                                          types: Data_Array.snoc(acc.types)(val),
                                          date: acc.date,
                                          id: acc.id,
                                          routes: acc.routes
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos0))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  id: Data_Maybe.Nothing.value,
                  date: Data_Maybe.Nothing.value,
                  routes: [  ],
                  types: [  ]
              })(v.pos))(function (v1) {
                  if (v1.val.id instanceof Data_Maybe.Just && v1.val.date instanceof Data_Maybe.Just) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          pos: v1.pos,
                          val: {
                              id: v1.val.id.value0,
                              date: v1.val.date.value0,
                              routes: v1.val.routes,
                              types: v1.val.types
                          }
                      });
                  };
                  return Data_Either.Left.create(new Proto_Decode.MissingFields("DriverInfo"));
              });
          });
      };
  };
  var decodeFreeDrivers = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(decodeDriverInfo(_xs_)(v.pos))(function (val) {
                                      return {
                                          freeDrivers: Data_Array.snoc(acc.freeDrivers)(val)
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos0))(function (v) {
              return Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  freeDrivers: [  ]
              })(v.pos);
          });
      };
  };
  var decodePassengerInfo = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          id: new Data_Maybe.Just(val),
                                          date: acc.date,
                                          fromAddress: acc.fromAddress,
                                          fromLocation: acc.fromLocation,
                                          toAddress: acc.toAddress,
                                          toLocation: acc.toLocation,
                                          tpe: acc.tpe
                                      };
                                  });
                              };
                              if (v1 === 5) {
                                  return decodeFieldLoop(end)(Proto_Decode["double"](_xs_)(v.pos))(function (val) {
                                      return {
                                          date: new Data_Maybe.Just(val),
                                          fromAddress: acc.fromAddress,
                                          fromLocation: acc.fromLocation,
                                          id: acc.id,
                                          toAddress: acc.toAddress,
                                          toLocation: acc.toLocation,
                                          tpe: acc.tpe
                                      };
                                  });
                              };
                              if (v1 === 6) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          fromAddress: new Data_Maybe.Just(val),
                                          date: acc.date,
                                          fromLocation: acc.fromLocation,
                                          id: acc.id,
                                          toAddress: acc.toAddress,
                                          toLocation: acc.toLocation,
                                          tpe: acc.tpe
                                      };
                                  });
                              };
                              if (v1 === 7) {
                                  return decodeFieldLoop(end)(decodeLocation(_xs_)(v.pos))(function (val) {
                                      return {
                                          fromLocation: new Data_Maybe.Just(val),
                                          date: acc.date,
                                          fromAddress: acc.fromAddress,
                                          id: acc.id,
                                          toAddress: acc.toAddress,
                                          toLocation: acc.toLocation,
                                          tpe: acc.tpe
                                      };
                                  });
                              };
                              if (v1 === 8) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          toAddress: new Data_Maybe.Just(val),
                                          date: acc.date,
                                          fromAddress: acc.fromAddress,
                                          fromLocation: acc.fromLocation,
                                          id: acc.id,
                                          toLocation: acc.toLocation,
                                          tpe: acc.tpe
                                      };
                                  });
                              };
                              if (v1 === 9) {
                                  return decodeFieldLoop(end)(decodeLocation(_xs_)(v.pos))(function (val) {
                                      return {
                                          toLocation: new Data_Maybe.Just(val),
                                          date: acc.date,
                                          fromAddress: acc.fromAddress,
                                          fromLocation: acc.fromLocation,
                                          id: acc.id,
                                          toAddress: acc.toAddress,
                                          tpe: acc.tpe
                                      };
                                  });
                              };
                              if (v1 === 10) {
                                  return decodeFieldLoop(end)(decodePassengerType(_xs_)(v.pos))(function (val) {
                                      return {
                                          tpe: new Data_Maybe.Just(val),
                                          date: acc.date,
                                          fromAddress: acc.fromAddress,
                                          fromLocation: acc.fromLocation,
                                          id: acc.id,
                                          toAddress: acc.toAddress,
                                          toLocation: acc.toLocation
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos0))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  id: Data_Maybe.Nothing.value,
                  date: Data_Maybe.Nothing.value,
                  fromAddress: Data_Maybe.Nothing.value,
                  fromLocation: Data_Maybe.Nothing.value,
                  toAddress: Data_Maybe.Nothing.value,
                  toLocation: Data_Maybe.Nothing.value,
                  tpe: Data_Maybe.Nothing.value
              })(v.pos))(function (v1) {
                  if (v1.val.id instanceof Data_Maybe.Just && (v1.val.date instanceof Data_Maybe.Just && (v1.val.fromAddress instanceof Data_Maybe.Just && (v1.val.fromLocation instanceof Data_Maybe.Just && (v1.val.toAddress instanceof Data_Maybe.Just && (v1.val.toLocation instanceof Data_Maybe.Just && v1.val.tpe instanceof Data_Maybe.Just)))))) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          pos: v1.pos,
                          val: {
                              id: v1.val.id.value0,
                              date: v1.val.date.value0,
                              fromAddress: v1.val.fromAddress.value0,
                              fromLocation: v1.val.fromLocation.value0,
                              toAddress: v1.val.toAddress.value0,
                              toLocation: v1.val.toLocation.value0,
                              tpe: v1.val.tpe.value0
                          }
                      });
                  };
                  return Data_Either.Left.create(new Proto_Decode.MissingFields("PassengerInfo"));
              });
          });
      };
  };
  var decodeFreePassengers = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(decodePassengerInfo(_xs_)(v.pos))(function (val) {
                                      return {
                                          freePassengers: Data_Array.snoc(acc.freePassengers)(val)
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos0))(function (v) {
              return Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  freePassengers: [  ]
              })(v.pos);
          });
      };
  };
  var decodeUserData = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          id: new Data_Maybe.Just(val),
                                          carPlate: acc.carPlate,
                                          created: acc.created,
                                          firstName: acc.firstName,
                                          lastName: acc.lastName,
                                          phone: acc.phone,
                                          photo: acc.photo,
                                          tpe: acc.tpe,
                                          username: acc.username
                                      };
                                  });
                              };
                              if (v1 === 2) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          username: new Data_Maybe.Just(val),
                                          carPlate: acc.carPlate,
                                          created: acc.created,
                                          firstName: acc.firstName,
                                          id: acc.id,
                                          lastName: acc.lastName,
                                          phone: acc.phone,
                                          photo: acc.photo,
                                          tpe: acc.tpe
                                      };
                                  });
                              };
                              if (v1 === 3) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          firstName: new Data_Maybe.Just(val),
                                          carPlate: acc.carPlate,
                                          created: acc.created,
                                          id: acc.id,
                                          lastName: acc.lastName,
                                          phone: acc.phone,
                                          photo: acc.photo,
                                          tpe: acc.tpe,
                                          username: acc.username
                                      };
                                  });
                              };
                              if (v1 === 4) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          lastName: new Data_Maybe.Just(val),
                                          carPlate: acc.carPlate,
                                          created: acc.created,
                                          firstName: acc.firstName,
                                          id: acc.id,
                                          phone: acc.phone,
                                          photo: acc.photo,
                                          tpe: acc.tpe,
                                          username: acc.username
                                      };
                                  });
                              };
                              if (v1 === 5) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          photo: new Data_Maybe.Just(val),
                                          carPlate: acc.carPlate,
                                          created: acc.created,
                                          firstName: acc.firstName,
                                          id: acc.id,
                                          lastName: acc.lastName,
                                          phone: acc.phone,
                                          tpe: acc.tpe,
                                          username: acc.username
                                      };
                                  });
                              };
                              if (v1 === 6) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          phone: new Data_Maybe.Just(val),
                                          carPlate: acc.carPlate,
                                          created: acc.created,
                                          firstName: acc.firstName,
                                          id: acc.id,
                                          lastName: acc.lastName,
                                          photo: acc.photo,
                                          tpe: acc.tpe,
                                          username: acc.username
                                      };
                                  });
                              };
                              if (v1 === 7) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          carPlate: new Data_Maybe.Just(val),
                                          created: acc.created,
                                          firstName: acc.firstName,
                                          id: acc.id,
                                          lastName: acc.lastName,
                                          phone: acc.phone,
                                          photo: acc.photo,
                                          tpe: acc.tpe,
                                          username: acc.username
                                      };
                                  });
                              };
                              if (v1 === 8) {
                                  return decodeFieldLoop(end)(decodePassengerType(_xs_)(v.pos))(function (val) {
                                      return {
                                          tpe: new Data_Maybe.Just(val),
                                          carPlate: acc.carPlate,
                                          created: acc.created,
                                          firstName: acc.firstName,
                                          id: acc.id,
                                          lastName: acc.lastName,
                                          phone: acc.phone,
                                          photo: acc.photo,
                                          username: acc.username
                                      };
                                  });
                              };
                              if (v1 === 9) {
                                  return decodeFieldLoop(end)(Proto_Decode["double"](_xs_)(v.pos))(function (val) {
                                      return {
                                          created: new Data_Maybe.Just(val),
                                          carPlate: acc.carPlate,
                                          firstName: acc.firstName,
                                          id: acc.id,
                                          lastName: acc.lastName,
                                          phone: acc.phone,
                                          photo: acc.photo,
                                          tpe: acc.tpe,
                                          username: acc.username
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos0))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  id: Data_Maybe.Nothing.value,
                  username: Data_Maybe.Nothing.value,
                  firstName: Data_Maybe.Nothing.value,
                  lastName: Data_Maybe.Nothing.value,
                  photo: Data_Maybe.Nothing.value,
                  phone: Data_Maybe.Nothing.value,
                  carPlate: Data_Maybe.Nothing.value,
                  tpe: Data_Maybe.Nothing.value,
                  created: Data_Maybe.Nothing.value
              })(v.pos))(function (v1) {
                  if (v1.val.id instanceof Data_Maybe.Just && (v1.val.username instanceof Data_Maybe.Just && v1.val.created instanceof Data_Maybe.Just)) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          pos: v1.pos,
                          val: {
                              id: v1.val.id.value0,
                              username: v1.val.username.value0,
                              firstName: v1.val.firstName,
                              lastName: v1.val.lastName,
                              photo: v1.val.photo,
                              phone: v1.val.phone,
                              carPlate: v1.val.carPlate,
                              tpe: v1.val.tpe,
                              created: v1.val.created.value0
                          }
                      });
                  };
                  return Data_Either.Left.create(new Proto_Decode.MissingFields("UserData"));
              });
          });
      };
  };
  var decodeSessionData = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(decodeUserData(_xs_)(v.pos))(function (val) {
                                      return {
                                          user: new Data_Maybe.Just(val)
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos0))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  user: Data_Maybe.Nothing.value
              })(v.pos))(function (v1) {
                  if (v1.val.user instanceof Data_Maybe.Just) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          pos: v1.pos,
                          val: {
                              user: v1.val.user.value0
                          }
                      });
                  };
                  return Data_Either.Left.create(new Proto_Decode.MissingFields("SessionData"));
              });
          });
      };
  };
  var decodeAddRouteOk = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          id: new Data_Maybe.Just(val)
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos0))(function (v) {
              return Control_Bind.bind(Data_Either.bindEither)(Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  id: Data_Maybe.Nothing.value
              })(v.pos))(function (v1) {
                  if (v1.val.id instanceof Data_Maybe.Just) {
                      return Control_Applicative.pure(Data_Either.applicativeEither)({
                          pos: v1.pos,
                          val: {
                              id: v1.val.id.value0
                          }
                      });
                  };
                  return Data_Either.Left.create(new Proto_Decode.MissingFields("AddRouteOk"));
              });
          });
      };
  };
  var decodeAddRouteErr = function (_xs_) {
      return function (pos0) {
          var decode = function (end) {
              return function (acc) {
                  return function (pos1) {
                      if (pos1 < end) {
                          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos1))(function (v) {
                              var v1 = v.val >>> 3;
                              if (v1 === 1) {
                                  return decodeFieldLoop(end)(Proto_Decode.string(_xs_)(v.pos))(function (val) {
                                      return {
                                          err: new Data_Maybe.Just(val)
                                      };
                                  });
                              };
                              return decodeFieldLoop(end)(Proto_Decode.skipType(_xs_)(v.pos)(v.val & 7))(function (v2) {
                                  return acc;
                              });
                          });
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(new Control_Monad_Rec_Class.Done({
                          pos: pos1,
                          val: acc
                      }));
                  };
              };
          };
          return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(pos0))(function (v) {
              return Control_Monad_Rec_Class.tailRecM3(Control_Monad_Rec_Class.monadRecEither)(decode)(v.pos + v.val | 0)({
                  err: Data_Maybe.Nothing.value
              })(v.pos);
          });
      };
  };
  var decodePush = function (_xs_) {
      var decode = function (res) {
          return function (f) {
              return Data_Functor.map(Data_Either.functorEither)(function (v) {
                  return {
                      pos: v.pos,
                      val: f(v.val)
                  };
              })(res);
          };
      };
      return Control_Bind.bind(Data_Either.bindEither)(Proto_Decode.uint32(_xs_)(0))(function (v) {
          var v1 = v.val >>> 3;
          if (v1 === 1) {
              return decode(decodePong(_xs_)(v.pos))(function (v2) {
                  return Pong.value;
              });
          };
          if (v1 === 2) {
              return decode(decodeLoginOk(_xs_)(v.pos))(function (v2) {
                  return LoginOk.value;
              });
          };
          if (v1 === 3) {
              return decode(decodeLoginErr(_xs_)(v.pos))(function (v2) {
                  return LoginErr.value;
              });
          };
          if (v1 === 4) {
              return decode(decodeSessionData(_xs_)(v.pos))(SessionData.create);
          };
          if (v1 === 10) {
              return decode(decodeAddRouteOk(_xs_)(v.pos))(AddRouteOk.create);
          };
          if (v1 === 11) {
              return decode(decodeAddRouteErr(_xs_)(v.pos))(AddRouteErr.create);
          };
          if (v1 === 30) {
              return decode(decodeFreeDrivers(_xs_)(v.pos))(FreeDrivers.create);
          };
          if (v1 === 40) {
              return decode(decodeFreePassengers(_xs_)(v.pos))(FreePassengers.create);
          };
          if (v1 === 50) {
              return decode(decodeCitiesList(_xs_)(v.pos))(CitiesList.create);
          };
          return Data_Either.Left.create(new Proto_Decode.BadType(v1));
      });
  };
  exports["LoginOk"] = LoginOk;
  exports["LoginErr"] = LoginErr;
  exports["SessionData"] = SessionData;
  exports["AddRouteOk"] = AddRouteOk;
  exports["AddRouteErr"] = AddRouteErr;
  exports["FreeDrivers"] = FreeDrivers;
  exports["FreePassengers"] = FreePassengers;
  exports["decodePush"] = decodePush;
})(PS);
(function(exports) {
  /* global exports */
  "use strict";

  exports.now = function () {
    return new Date();
  };

  exports.dateMethod = function (method, date) {
    return date[method]();
  };

  exports.dateMethodEff = function (method, date) {
    return function () {
      return date[method]();
    };
  };

  exports.parse = function (dateString) {
    return function () {
      return new Date(dateString);
    };
  };

  exports.fromTime = function (time) {
    return new Date(time);
  };
})(PS["Data.JSDate"] = PS["Data.JSDate"] || {});
(function($PS) {
  "use strict";
  $PS["Data.JSDate"] = $PS["Data.JSDate"] || {};
  var exports = $PS["Data.JSDate"];
  var $foreign = $PS["Data.JSDate"];
  var getTime = function (dt) {
      return $foreign.dateMethod("getTime", dt);
  };
  var getMonth = function (dt) {
      return $foreign.dateMethodEff("getMonth", dt);
  };
  var getMinutes = function (dt) {
      return $foreign.dateMethodEff("getMinutes", dt);
  };
  var getHours = function (dt) {
      return $foreign.dateMethodEff("getHours", dt);
  };
  var getFullYear = function (dt) {
      return $foreign.dateMethodEff("getFullYear", dt);
  };
  var getDate = function (dt) {
      return $foreign.dateMethodEff("getDate", dt);
  };
  exports["getTime"] = getTime;
  exports["getDate"] = getDate;
  exports["getFullYear"] = getFullYear;
  exports["getHours"] = getHours;
  exports["getMinutes"] = getMinutes;
  exports["getMonth"] = getMonth;
  exports["now"] = $foreign.now;
  exports["parse"] = $foreign.parse;
  exports["fromTime"] = $foreign.fromTime;
})(PS);
(function(exports) {
  "use strict";

  exports.toLocaleTimeString = function(date) {
    return function () {
      return date.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});
    };
  };

  var isMobileOrChromeF = function() {
    var isMobile = false;
    //http://detectmobilebrowsers.com/mobile
    (function(a){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4)))isMobile=true})(navigator.userAgent||navigator.vendor||window.opera);
    return isMobile || !!window.chrome;
  };

  exports.isMobileOrChrome = isMobileOrChromeF

  exports.datepickerLoad = function() {
    if (!isMobileOrChromeF() && !window['ext']) {
      var el1 = document.createElement('script');
      el1.setAttribute('async', '');
      el1.setAttribute('src', 'ext.js');
      document.head.appendChild(el1)
      var el2 = document.createElement('link');
      el2.setAttribute('async', '');
      el2.setAttribute('href', 'ext.css');
      el2.setAttribute('rel', 'stylesheet');
      document.head.appendChild(el2)
    }
    return {};
  };

  exports.datepickerExtClass = function() {
    return window['ext']['DatePicker']
  };

  exports.uk = function() {
    return window['ext']['uk']
  };

  exports.ru = function() {
    return window['ext']['ru']
  };
})(PS["Datepicker"] = PS["Datepicker"] || {});
(function(exports) {
  "use strict";

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };

  exports.toNumber = function (n) {
    return n;
  };

  exports.fromStringAsImpl = function (just) {
    return function (nothing) {
      return function (radix) {
        var digits;
        if (radix < 11) {
          digits = "[0-" + (radix - 1).toString() + "]";
        } else if (radix === 11) {
          digits = "[0-9a]";
        } else {
          digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
        }
        var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");

        return function (s) {
          /* jshint bitwise: false */
          if (pattern.test(s)) {
            var i = parseInt(s, radix);
            return (i | 0) === i ? just(i) : nothing;
          } else {
            return nothing;
          }
        };
      };
    };
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  "use strict";

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function(exports) {
  "use strict";

  var unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };                                         
  exports.ordIntImpl = unsafeCompareImpl;   
  exports.ordStringImpl = unsafeCompareImpl;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function($PS) {
  "use strict";
  $PS["Data.Ordering"] = $PS["Data.Ordering"] || {};
  var exports = $PS["Data.Ordering"];              
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
})(PS);
(function($PS) {
  "use strict";
  $PS["Data.Ord"] = $PS["Data.Ord"] || {};
  var exports = $PS["Data.Ord"];
  var $foreign = $PS["Data.Ord"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Ord = function (Eq0, compare) {
      this.Eq0 = Eq0;
      this.compare = compare;
  }; 
  var ordString = new Ord(function () {
      return Data_Eq.eqString;
  }, $foreign.ordStringImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var ordInt = new Ord(function () {
      return Data_Eq.eqInt;
  }, $foreign.ordIntImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var compare = function (dict) {
      return dict.compare;
  };
  exports["Ord"] = Ord;
  exports["compare"] = compare;
  exports["ordInt"] = ordInt;
  exports["ordString"] = ordString;
})(PS);
(function($PS) {
  "use strict";
  $PS["Data.Bounded"] = $PS["Data.Bounded"] || {};
  var exports = $PS["Data.Bounded"];
  var $foreign = $PS["Data.Bounded"];
  var Data_Ord = $PS["Data.Ord"];                  
  var Bounded = function (Ord0, bottom, top) {
      this.Ord0 = Ord0;
      this.bottom = bottom;
      this.top = top;
  };
  var top = function (dict) {
      return dict.top;
  };                                            
  var boundedInt = new Bounded(function () {
      return Data_Ord.ordInt;
  }, $foreign.bottomInt, $foreign.topInt);
  var bottom = function (dict) {
      return dict.bottom;
  };
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["boundedInt"] = boundedInt;
})(PS);
(function(exports) {
  "use strict";          

  exports.floor = Math.floor;
})(PS["Math"] = PS["Math"] || {});
(function($PS) {
  "use strict";
  $PS["Math"] = $PS["Math"] || {};
  var exports = $PS["Math"];
  var $foreign = $PS["Math"];
  exports["floor"] = $foreign.floor;
})(PS);
(function($PS) {
  "use strict";
  $PS["Data.Int"] = $PS["Data.Int"] || {};
  var exports = $PS["Data.Int"];
  var $foreign = $PS["Data.Int"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Global = $PS["Global"];
  var $$Math = $PS["Math"];
  var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var fromString = fromStringAs(10);
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var unsafeClamp = function (x) {
      if (x === Global.infinity) {
          return 0;
      };
      if (x === -Global.infinity) {
          return 0;
      };
      if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
          return Data_Bounded.top(Data_Bounded.boundedInt);
      };
      if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
          return Data_Bounded.bottom(Data_Bounded.boundedInt);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.fromMaybe(0)(fromNumber(x));
      };
      throw new Error("Failed pattern match at Data.Int (line 66, column 1 - line 66, column 29): " + [ x.constructor.name ]);
  };
  var floor = function ($24) {
      return unsafeClamp($$Math.floor($24));
  };
  exports["floor"] = floor;
  exports["fromString"] = fromString;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafePerformEffect = function (f) {
    return f();
  };
})(PS["Effect.Unsafe"] = PS["Effect.Unsafe"] || {});
(function($PS) {
  "use strict";
  $PS["Effect.Unsafe"] = $PS["Effect.Unsafe"] || {};
  var exports = $PS["Effect.Unsafe"];
  var $foreign = $PS["Effect.Unsafe"];
  exports["unsafePerformEffect"] = $foreign.unsafePerformEffect;
})(PS);
(function(exports) {
  /* global exports */
  "use strict";
  var React =require("react"); 

  function unsafeMkProps(key) {
    return function(value){
      var result = {};
      result[key] = value;
      return result;
    };
  }
  exports.unsafeMkProps = unsafeMkProps;

  function unsafeUnfoldProps(key) {
    return function(value){
      var result = {};
      var props = {};
      props[key] = result;

      for (var subprop in value) {
        if (value.hasOwnProperty(subprop)) {
          result[subprop] = value[subprop];
        }
      }

      return props;
    };
  }
  exports.unsafeUnfoldProps = unsafeUnfoldProps;

  function unsafePrefixProps(prefix) {
    return function(value){
      var result = {};

      for (var prop in value) {
        if (value.hasOwnProperty(prop)) {
          result[prefix + prop] = value[prop];
        }
      }

      return result;
    };
  }                                             

  function unsafeFromPropsArray(props) {
    var result = {};

    for (var i = 0, len = props.length; i < len; i++) {
      var prop = props[i];

      for (var key in prop) {
        if (prop.hasOwnProperty(key)) {
          result[key] = prop[key];
        }
      }
    }

    return result;
  };
  exports.unsafeFromPropsArray = unsafeFromPropsArray;
})(PS["React.DOM.Props"] = PS["React.DOM.Props"] || {});
(function(exports) {
  "use strict";

  exports.mkEffectFn1 = function mkEffectFn1(fn) {
    return function(x) {
      return fn(x)();
    };
  };
})(PS["Effect.Uncurried"] = PS["Effect.Uncurried"] || {});
(function($PS) {
  "use strict";
  $PS["Effect.Uncurried"] = $PS["Effect.Uncurried"] || {};
  var exports = $PS["Effect.Uncurried"];
  var $foreign = $PS["Effect.Uncurried"];
  exports["mkEffectFn1"] = $foreign.mkEffectFn1;
})(PS);
(function($PS) {
  "use strict";
  $PS["React.DOM.Props"] = $PS["React.DOM.Props"] || {};
  var exports = $PS["React.DOM.Props"];
  var $foreign = $PS["React.DOM.Props"];
  var Effect_Uncurried = $PS["Effect.Uncurried"];
  var width = $foreign.unsafeMkProps("width");     
  var value = $foreign.unsafeMkProps("value");    
  var style = $foreign.unsafeUnfoldProps("style");
  var src = $foreign.unsafeMkProps("src");    
  var selected = $foreign.unsafeMkProps("selected");
  var required = $foreign.unsafeMkProps("required");
  var onClick = function (f) {
      return $foreign.unsafeMkProps("onClick")(Effect_Uncurried.mkEffectFn1(f));
  };
  var onChange = function (f) {
      return $foreign.unsafeMkProps("onChange")(Effect_Uncurried.mkEffectFn1(f));
  };                                                  
  var min = $foreign.unsafeMkProps("min");            
  var max = $foreign.unsafeMkProps("max");            
  var key = $foreign.unsafeMkProps("key");            
  var htmlFor = $foreign.unsafeMkProps("htmlFor");  
  var href = $foreign.unsafeMkProps("href");    
  var height = $foreign.unsafeMkProps("height");  
  var frameBorder = $foreign.unsafeMkProps("frameBorder");
  var disabled = $foreign.unsafeMkProps("disabled");
  var className = $foreign.unsafeMkProps("className");
  var checked = $foreign.unsafeMkProps("checked");        
  var autoComplete = $foreign.unsafeMkProps("autoComplete");
  var _type = $foreign.unsafeMkProps("type");
  var _id = $foreign.unsafeMkProps("id");
  exports["style"] = style;
  exports["autoComplete"] = autoComplete;
  exports["checked"] = checked;
  exports["className"] = className;
  exports["disabled"] = disabled;
  exports["frameBorder"] = frameBorder;
  exports["height"] = height;
  exports["href"] = href;
  exports["htmlFor"] = htmlFor;
  exports["_id"] = _id;
  exports["key"] = key;
  exports["max"] = max;
  exports["min"] = min;
  exports["required"] = required;
  exports["selected"] = selected;
  exports["src"] = src;
  exports["_type"] = _type;
  exports["value"] = value;
  exports["width"] = width;
  exports["onChange"] = onChange;
  exports["onClick"] = onClick;
  exports["unsafeFromPropsArray"] = $foreign.unsafeFromPropsArray;
})(PS);
(function($PS) {
  "use strict";
  $PS["Lib.React"] = $PS["Lib.React"] || {};
  var exports = $PS["Lib.React"];
  var Data_Int = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var React_DOM_Props = $PS["React.DOM.Props"];                
  var onChangeValueInt = function (f) {
      return React_DOM_Props.onChange(function (e) {
          return f(Data_Maybe.fromMaybe(0)(Data_Int.fromString(e.target.value)));
      });
  };
  var onChangeValue = function (f) {
      return React_DOM_Props.onChange(function (e) {
          return f(e.target.value);
      });
  };
  var cn = React_DOM_Props.className;
  exports["cn"] = cn;
  exports["onChangeValue"] = onChangeValue;
  exports["onChangeValueInt"] = onChangeValueInt;
})(PS);
(function(exports) {
  /* global exports */
  "use strict";
  var React =require("react"); 

  function createClass(baseClass) {
    function bindProperty(instance, prop, value) {
      switch (prop) {
        case 'state':
        case 'render':
        case 'componentDidMount':
        case 'componentWillUnmount':
          instance[prop] = value;
          break;

        case 'componentDidCatch':
        case 'componentWillUpdate':
        case 'shouldComponentUpdate':
        case 'getSnapshotBeforeUpdate':
          instance[prop] = function (a, b) { return value(a)(b)(); };
          break;

        case 'componentDidUpdate':
          instance[prop] = function (a, b, c) { return value(a)(b)(c)(); };
          break;

        case 'unsafeComponentWillMount':
          instance['UNSAFE_componentWillMount'] = value;
          break;

        case 'unsafeComponentWillReceiveProps':
          instance['UNSAFE_componentWillReceiveProps'] = function (a) { return value(a)(); };
          break;

        case 'unsafeComponentWillUpdate':
          instance['UNSAFE_componentWillUpdate'] = function (a, b) { return value(a)(b)(); };
          break;

        default:
          throw new Error('[purescript-react] Not a component property: ' + prop);
      }
    }

    return function (displayName) {
      return function (ctrFn) {
        var Constructor = function (props) {
          baseClass.call(this, props);
          var spec = ctrFn(this)();
          for (var k in spec) {
            bindProperty(this, k, spec[k]);
          }
        };

        Constructor.displayName = displayName;
        Constructor.prototype = Object.create(baseClass.prototype);
        Constructor.prototype.constructor = Constructor;

        return Constructor;
      };
    };
  }

  function createClassWithDerivedState(classCtr) {
    return function(displayName) {
      return function(getDerivedStateFromProps) {
        return function(ctrFn) {
          var Constructor = componentImpl(displayName)(ctrFn);
          Constructor.getDerivedStateFromProps = function(a, b) { return getDerivedStateFromProps(a)(b); };
          return Constructor;
        };
      };
    };
  }

  var componentImpl = createClass(React.Component);
  exports.componentImpl = componentImpl;                 

  exports.fragment = React.Fragment;

  function getProps(this_) {
    return function(){
      return this_.props;
    };
  }
  exports.getProps = getProps;                 

  function setStateImpl(this_) {
    return function(state){
      return function(){
        this_.setState(state);
      };
    };
  }
  exports.setStateImpl = setStateImpl;

  function setStateWithCallbackImpl(this_) {
    return function(state){
      return function(cb){
        return function() {
          this_.setState(state, cb);
        };
      };
    };
  }                                                           

  function getState(this_) {
    return function(){
      if (!this_.state) {
        throw new Error('[purescript-react] Cannot get state within constructor');
      }
      return this_.state;
    };
  }
  exports.getState = getState;

  function forceUpdateWithCallback(this_) {
    return function(cb) {
      return function() {
        this_.forceUpdate(cb);
      };
    };
  }                                                         

  function createElement(class_) {
    return function(props){
      return function(children){
        return React.createElement.apply(React, [class_, props].concat(children));
      };
    };
  }
  exports.createElementImpl = createElement;
  exports.createElementTagName = createElement;

  function createLeafElement(class_) {
    return function(props) {
      return React.createElement(class_, props);
    };
  }
  exports.createLeafElementImpl = createLeafElement;

  function createElementDynamic(class_) {
    return function(props) {
      return function(children){
        return React.createElement(class_, props, children);
      };
    };
  };                                                      
  exports.createElementTagNameDynamic = createElementDynamic;

  function createContext(defaultValue) {
    var context = React.createContext(defaultValue);
    return {
      consumer: context.Consumer,
      provider: context.Provider
    };
  }
})(PS["React"] = PS["React"] || {});
(function($PS) {
  "use strict";
  $PS["React"] = $PS["React"] || {};
  var exports = $PS["React"];
  var $foreign = $PS["React"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var IsReactElement = function (toElement) {
      this.toElement = toElement;
  };                                                   
  var toElement = function (dict) {
      return dict.toElement;
  };                                                              
  var modifyState = $foreign.setStateImpl;
  var createLeafElement = function (dictReactPropFields) {
      return $foreign.createLeafElementImpl;
  };
  var createElement = function (dictReactPropFields) {
      return $foreign.createElementImpl;
  };   
  var isReactElementArray = new IsReactElement(createElement()($foreign.fragment)({}));
  var semigroupReactElement = new Data_Semigroup.Semigroup(function (a) {
      return function (b) {
          return toElement(isReactElementArray)([ a, b ]);
      };
  });
  var monoidReactElement = new Data_Monoid.Monoid(function () {
      return semigroupReactElement;
  }, toElement(isReactElementArray)([  ]));
  var component = function (dictReactComponentSpec) {
      return $foreign.componentImpl;
  };
  exports["component"] = component;
  exports["modifyState"] = modifyState;
  exports["createLeafElement"] = createLeafElement;
  exports["monoidReactElement"] = monoidReactElement;
  exports["getProps"] = $foreign.getProps;
  exports["getState"] = $foreign.getState;
  exports["createElementTagName"] = $foreign.createElementTagName;
  exports["createElementTagNameDynamic"] = $foreign.createElementTagNameDynamic;
})(PS);
(function(exports) {
  "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function($PS) {
  "use strict";
  $PS["Unsafe.Coerce"] = $PS["Unsafe.Coerce"] || {};
  var exports = $PS["Unsafe.Coerce"];
  var $foreign = $PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS);
(function($PS) {
  "use strict";
  $PS["React.DOM"] = $PS["React.DOM"] || {};
  var exports = $PS["React.DOM"];
  var React = $PS["React"];
  var React_DOM_Props = $PS["React.DOM.Props"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var text = Unsafe_Coerce.unsafeCoerce;  
  var mkDOM = function (dynamic) {
      return function (tag) {
          return function (props) {
              var createElement = (function () {
                  if (!dynamic) {
                      return React.createElementTagName;
                  };
                  if (dynamic) {
                      return React.createElementTagNameDynamic;
                  };
                  throw new Error("Failed pattern match at React.DOM (line 15, column 5 - line 17, column 55): " + [ dynamic.constructor.name ]);
              })();
              return createElement(tag)(React_DOM_Props.unsafeFromPropsArray(props));
          };
      };
  };
  var nav = mkDOM(false)("nav");      
  var option = mkDOM(false)("option");
  var select = mkDOM(false)("select");
  var small = mkDOM(false)("small");
  var span = mkDOM(false)("span");
  var ul = mkDOM(false)("ul");
  var li = mkDOM(false)("li");    
  var label = mkDOM(false)("label");
  var input = function (props) {
      return mkDOM(false)("input")(props)([  ]);
  };                            
  var img = function (props) {
      return mkDOM(false)("img")(props)([  ]);
  };                        
  var iframe = mkDOM(false)("iframe");
  var h6 = mkDOM(false)("h6");
  var div = mkDOM(false)("div");  
  var button = mkDOM(false)("button");
  var a = mkDOM(false)("a");
  exports["text"] = text;
  exports["a"] = a;
  exports["button"] = button;
  exports["div"] = div;
  exports["h6"] = h6;
  exports["iframe"] = iframe;
  exports["img"] = img;
  exports["input"] = input;
  exports["label"] = label;
  exports["li"] = li;
  exports["nav"] = nav;
  exports["option"] = option;
  exports["select"] = select;
  exports["small"] = small;
  exports["span"] = span;
  exports["ul"] = ul;
})(PS);
(function($PS) {
  "use strict";
  $PS["Datepicker"] = $PS["Datepicker"] || {};
  var exports = $PS["Datepicker"];
  var $foreign = $PS["Datepicker"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_JSDate = $PS["Data.JSDate"];
  var Data_Show = $PS["Data.Show"];
  var Effect = $PS["Effect"];
  var Effect_Unsafe = $PS["Effect.Unsafe"];
  var Lib_React = $PS["Lib.React"];
  var React = $PS["React"];
  var React_DOM = $PS["React.DOM"];
  var React_DOM_Props = $PS["React.DOM.Props"];                
  var formatNum = function (n) {
      var v = Data_Int.floor(n);
      var $4 = v < 10;
      if ($4) {
          return "0" + Data_Show.show(Data_Show.showInt)(v);
      };
      return Data_Show.show(Data_Show.showInt)(v);
  };
  var formatISO = function (date) {
      return function __do() {
          var yyyy = Data_Functor.map(Effect.functorEffect)(formatNum)(Data_JSDate.getFullYear(date))();
          var mM = Data_Functor.map(Effect.functorEffect)(Data_Functor.map(Data_Functor.functorFn)(formatNum)(function (v) {
              return v + 1.0;
          }))(Data_JSDate.getMonth(date))();
          var dd = Data_Functor.map(Effect.functorEffect)(formatNum)(Data_JSDate.getDate(date))();
          var hh = Data_Functor.map(Effect.functorEffect)(formatNum)(Data_JSDate.getHours(date))();
          var mm = Data_Functor.map(Effect.functorEffect)(formatNum)(Data_JSDate.getMinutes(date))();
          return yyyy + ("-" + (mM + ("-" + (dd + ("T" + (hh + (":" + (mm + ":00"))))))));
      };
  };
  var formatDateISO = function (date) {
      return function __do() {
          var yyyy = Data_Functor.map(Effect.functorEffect)(formatNum)(Data_JSDate.getFullYear(date))();
          var mM = Data_Functor.map(Effect.functorEffect)(Data_Functor.map(Data_Functor.functorFn)(formatNum)(function (v) {
              return v + 1.0;
          }))(Data_JSDate.getMonth(date))();
          var dd = Data_Functor.map(Effect.functorEffect)(formatNum)(Data_JSDate.getDate(date))();
          return yyyy + ("-" + (mM + ("-" + dd)));
      };
  };
  var datepickerClass = React.component()("Datepicker")(function ($$this) {
      return function __do() {
          var today = Data_JSDate.now();
          var $$native = $foreign.isMobileOrChrome();
          return {
              state: {
                  date: today
              },
              render: function __do() {
                  var props = React.getProps($$this)();
                  var state = React.getState($$this)();
                  if ($$native) {
                      var vv = (function () {
                          if (props.showTime) {
                              return formatISO(state.date)();
                          };
                          return formatDateISO(state.date)();
                      })();
                      var t1 = formatISO(today)();
                      var t2 = formatISO(Data_JSDate.fromTime(Data_JSDate.getTime(today) + 4.32e8))();
                      return React_DOM.input([ React_DOM_Props["_type"]((function () {
                          if (props.showTime) {
                              return "datetime-local";
                          };
                          return "date";
                      })()), Lib_React.cn(props.className + (" " + props.wrapperClassName)), React_DOM_Props["_id"](props["_id"]), React_DOM_Props.value(vv), Lib_React.onChangeValue(function (v) {
                          return function __do() {
                              var d = Data_JSDate.parse(v)();
                              React.modifyState($$this)(function (v1) {
                                  var $8 = {};
                                  for (var $9 in v1) {
                                      if ({}.hasOwnProperty.call(v1, $9)) {
                                          $8[$9] = v1[$9];
                                      };
                                  };
                                  $8.date = d;
                                  return $8;
                              })();
                              return props.onChange(d)();
                          };
                      }), React_DOM_Props.min(t1), React_DOM_Props.max(t2) ]);
                  };
                  var dclass = $foreign.datepickerExtClass();
                  var locale = (function () {
                      if (props.lang === "uk") {
                          return $foreign.uk();
                      };
                      if (props.lang === "ru") {
                          return $foreign.ru();
                      };
                      return $foreign.uk();
                  })();
                  var maxD = Data_JSDate.fromTime(Data_JSDate.getTime(today) + 4.32e8);
                  return React.createLeafElement()(dclass)({
                      selected: state.date,
                      onChange: function (d) {
                          return Effect_Unsafe.unsafePerformEffect(function __do() {
                              React.modifyState($$this)(function (v) {
                                  var $12 = {};
                                  for (var $13 in v) {
                                      if ({}.hasOwnProperty.call(v, $13)) {
                                          $12[$13] = v[$13];
                                      };
                                  };
                                  $12.date = d;
                                  return $12;
                              })();
                              return props.onChange(d)();
                          });
                      },
                      showTimeSelect: props.showTime,
                      className: props.className,
                      wrapperClassName: props.wrapperClassName,
                      popperClassName: "react-datepicker-popper-fix",
                      id: props["_id"],
                      locale: locale,
                      timeFormat: (function () {
                          if (props.showTime) {
                              return "p";
                          };
                          return "";
                      })(),
                      dateFormat: (function () {
                          if (props.showTime) {
                              return "Pp";
                          };
                          return "P";
                      })(),
                      minDate: today,
                      maxDate: maxD,
                      timeCaption: props.keyText("key.time")
                  });
              }
          };
      };
  });
  exports["datepickerClass"] = datepickerClass;
  exports["datepickerLoad"] = $foreign.datepickerLoad;
  exports["toLocaleTimeString"] = $foreign.toLocaleTimeString;
})(PS);
(function($PS) {
  "use strict";
  $PS["Keys"] = $PS["Keys"] || {};
  var exports = $PS["Keys"];
  var Api = $PS["Api"];                
  var keyPassengerType = function (v) {
      if (v instanceof Api.Medical) {
          return "key.medical";
      };
      if (v instanceof Api.Police) {
          return "key.police";
      };
      if (v instanceof Api.Firefighter) {
          return "key.firefighter";
      };
      if (v instanceof Api.Army) {
          return "key.army";
      };
      if (v instanceof Api.Farmacy) {
          return "key.farmacy";
      };
      if (v instanceof Api.Cashier) {
          return "key.cashier";
      };
      if (v instanceof Api.Regular) {
          return "key.regular";
      };
      throw new Error("Failed pattern match at Keys (line 7, column 1 - line 7, column 44): " + [ v.constructor.name ]);
  };
  exports["keyPassengerType"] = keyPassengerType;
})(PS);
(function(exports) {
  exports.uint8Array = (arrayBuffer) => new Uint8Array(arrayBuffer)
})(PS["Lib.WebSocket"] = PS["Lib.WebSocket"] || {});
(function($PS) {
  "use strict";
  $PS["Data.Tuple"] = $PS["Data.Tuple"] || {};
  var exports = $PS["Data.Tuple"];                         
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();                                                                                                 
  var fst = function (v) {
      return v.value0;
  };
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
})(PS);
(function(exports) {
  "use strict";

  exports.error = function (s) {
    return function () {
      console.error(s);
      return {};
    };
  };
})(PS["Effect.Console"] = PS["Effect.Console"] || {});
(function($PS) {
  "use strict";
  $PS["Effect.Console"] = $PS["Effect.Console"] || {};
  var exports = $PS["Effect.Console"];
  var $foreign = $PS["Effect.Console"];
  exports["error"] = $foreign.error;
})(PS);
(function(exports) {
  "use strict";

  exports.new = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.read = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports["modify'"] = function (f) {
    return function (ref) {
      return function () {
        var t = f(ref.value);
        ref.value = t.state;
        return t.value;
      };
    };
  };
})(PS["Effect.Ref"] = PS["Effect.Ref"] || {});
(function($PS) {
  "use strict";
  $PS["Effect.Ref"] = $PS["Effect.Ref"] || {};
  var exports = $PS["Effect.Ref"];
  var $foreign = $PS["Effect.Ref"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect = $PS["Effect"];                
  var modify = function (f) {
      return $foreign["modify'"](function (s) {
          var s$prime = f(s);
          return {
              state: s$prime,
              value: s$prime
          };
      });
  };
  var modify_ = function (f) {
      return function (s) {
          return Data_Functor["void"](Effect.functorEffect)(modify(f)(s));
      };
  };
  exports["modify_"] = modify_;
  exports["new"] = $foreign["new"];
  exports["read"] = $foreign.read;
})(PS);
(function(exports) {
  /* global exports */
  "use strict";

  exports.setTimeout = function (ms) {
    return function (fn) {
      return function () {
        return setTimeout(fn, ms);
      };
    };
  };
})(PS["Effect.Timer"] = PS["Effect.Timer"] || {});
(function($PS) {
  "use strict";
  $PS["Effect.Timer"] = $PS["Effect.Timer"] || {};
  var exports = $PS["Effect.Timer"];
  var $foreign = $PS["Effect.Timer"];
  exports["setTimeout"] = $foreign.setTimeout;
})(PS);
(function(exports) {
  "use strict";

  exports.eventListener = function (fn) {
    return function () {
      return function (event) {
        return fn(event)();
      };
    };
  };

  exports.addEventListener = function (type) {
    return function (listener) {
      return function (useCapture) {
        return function (target) {
          return function () {
            return target.addEventListener(type, listener, useCapture);
          };
        };
      };
    };
  };
})(PS["Web.Event.EventTarget"] = PS["Web.Event.EventTarget"] || {});
(function($PS) {
  "use strict";
  $PS["Web.Event.EventTarget"] = $PS["Web.Event.EventTarget"] || {};
  var exports = $PS["Web.Event.EventTarget"];
  var $foreign = $PS["Web.Event.EventTarget"];
  exports["eventListener"] = $foreign.eventListener;
  exports["addEventListener"] = $foreign.addEventListener;
})(PS);
(function(exports) {
  /* global window */
  "use strict";

  exports.window = function () {
    return window;
  };
})(PS["Web.HTML"] = PS["Web.HTML"] || {});
(function($PS) {
  "use strict";
  $PS["Web.HTML"] = $PS["Web.HTML"] || {};
  var exports = $PS["Web.HTML"];
  var $foreign = $PS["Web.HTML"];
  exports["window"] = $foreign.window;
})(PS);
(function(exports) {
  "use strict";

  // ----------------------------------------------------------------------------

  exports.protocol = function (location) {
    return function () {
      return location.protocol;
    };
  };
})(PS["Web.HTML.Location"] = PS["Web.HTML.Location"] || {});
(function($PS) {
  "use strict";
  $PS["Web.HTML.Location"] = $PS["Web.HTML.Location"] || {};
  var exports = $PS["Web.HTML.Location"];
  var $foreign = $PS["Web.HTML.Location"];
  exports["protocol"] = $foreign.protocol;
})(PS);
(function(exports) {
  "use strict";

  exports.document = function (window) {
    return function () {
      return window.document;
    };
  };

  exports.location = function (window) {
    return function () {
      return window.location;
    };
  };
})(PS["Web.HTML.Window"] = PS["Web.HTML.Window"] || {});
(function($PS) {
  "use strict";
  $PS["Web.HTML.Window"] = $PS["Web.HTML.Window"] || {};
  var exports = $PS["Web.HTML.Window"];
  var $foreign = $PS["Web.HTML.Window"];
  exports["document"] = $foreign.document;
  exports["location"] = $foreign.location;
})(PS);
(function($PS) {
  "use strict";
  $PS["Web.Socket.BinaryType"] = $PS["Web.Socket.BinaryType"] || {};
  var exports = $PS["Web.Socket.BinaryType"];      
  var Blob = (function () {
      function Blob() {

      };
      Blob.value = new Blob();
      return Blob;
  })();
  var $$ArrayBuffer = (function () {
      function $$ArrayBuffer() {

      };
      $$ArrayBuffer.value = new $$ArrayBuffer();
      return $$ArrayBuffer;
  })();
  var printBinaryType = function (v) {
      if (v instanceof Blob) {
          return "blob";
      };
      if (v instanceof $$ArrayBuffer) {
          return "arraybuffer";
      };
      throw new Error("Failed pattern match at Web.Socket.BinaryType (line 46, column 3 - line 48, column 33): " + [ v.constructor.name ]);
  };
  exports["ArrayBuffer"] = $$ArrayBuffer;
  exports["printBinaryType"] = printBinaryType;
})(PS);
(function($PS) {
  "use strict";
  $PS["Web.Socket.Event.EventTypes"] = $PS["Web.Socket.Event.EventTypes"] || {};
  var exports = $PS["Web.Socket.Event.EventTypes"];
  var onOpen = "open";
  var onMessage = "message";
  var onError = "error";
  var onClose = "close";
  exports["onOpen"] = onOpen;
  exports["onMessage"] = onMessage;
  exports["onError"] = onError;
  exports["onClose"] = onClose;
})(PS);
(function(exports) {
  "use strict";

  exports.data_ = function (e) {
    return e.data;
  };
})(PS["Web.Socket.Event.MessageEvent"] = PS["Web.Socket.Event.MessageEvent"] || {});
(function(exports) {
  "use strict";

  exports._unsafeReadProtoTagged = function (nothing, just, name, value) {
    if (typeof window !== "undefined") {
      var ty = window[name];
      if (ty != null && value instanceof ty) {
        return just(value);
      }
      return nothing;
    } 
    var obj = value;
    while (obj != null) {
      var proto = Object.getPrototypeOf(obj);
      var constructorName = proto.constructor.name;
      if (constructorName === name) {
        return just(value);
      } else if (constructorName === "Object") {
        return nothing;
      }
      obj = proto;
    }
    return nothing;
  };
})(PS["Web.Internal.FFI"] = PS["Web.Internal.FFI"] || {});
(function($PS) {
  "use strict";
  $PS["Web.Internal.FFI"] = $PS["Web.Internal.FFI"] || {};
  var exports = $PS["Web.Internal.FFI"];
  var $foreign = $PS["Web.Internal.FFI"];
  var Data_Maybe = $PS["Data.Maybe"];                
  var unsafeReadProtoTagged = function (name) {
      return function (value) {
          return $foreign["_unsafeReadProtoTagged"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, name, value);
      };
  };
  exports["unsafeReadProtoTagged"] = unsafeReadProtoTagged;
})(PS);
(function($PS) {
  "use strict";
  $PS["Web.Socket.Event.MessageEvent"] = $PS["Web.Socket.Event.MessageEvent"] || {};
  var exports = $PS["Web.Socket.Event.MessageEvent"];
  var $foreign = $PS["Web.Socket.Event.MessageEvent"];
  var Web_Internal_FFI = $PS["Web.Internal.FFI"];
  var fromEvent = Web_Internal_FFI.unsafeReadProtoTagged("MessageEvent");
  exports["fromEvent"] = fromEvent;
  exports["data_"] = $foreign.data_;
})(PS);
(function($PS) {
  "use strict";
  $PS["Web.Socket.ReadyState"] = $PS["Web.Socket.ReadyState"] || {};
  var exports = $PS["Web.Socket.ReadyState"];
  var Data_Maybe = $PS["Data.Maybe"];              
  var Connecting = (function () {
      function Connecting() {

      };
      Connecting.value = new Connecting();
      return Connecting;
  })();
  var Open = (function () {
      function Open() {

      };
      Open.value = new Open();
      return Open;
  })();
  var Closing = (function () {
      function Closing() {

      };
      Closing.value = new Closing();
      return Closing;
  })();
  var Closed = (function () {
      function Closed() {

      };
      Closed.value = new Closed();
      return Closed;
  })();
  var toEnumReadyState = function (v) {
      if (v === 0) {
          return new Data_Maybe.Just(Connecting.value);
      };
      if (v === 1) {
          return new Data_Maybe.Just(Open.value);
      };
      if (v === 2) {
          return new Data_Maybe.Just(Closing.value);
      };
      if (v === 3) {
          return new Data_Maybe.Just(Closed.value);
      };
      return Data_Maybe.Nothing.value;
  };
  exports["Connecting"] = Connecting;
  exports["Open"] = Open;
  exports["toEnumReadyState"] = toEnumReadyState;
})(PS);
(function(exports) {
  "use strict";

  exports.create = function (url) {
    return function (protocols) {
      return function () {
        return new WebSocket(url, protocols);
      };
    };
  };

  exports.readyStateImpl = function (ws) {
    return function () {
      return ws.readyState;
    };
  };

  exports.setBinaryTypeImpl = function (ws) {
    return function (bt) {
      return function () {
        ws.binaryType = bt;
      };
    };
  };

  exports.sendImpl = function (ws) {
    return function (value) {
      return function () {
        ws.send(value);
      };
    };
  };
})(PS["Web.Socket.WebSocket"] = PS["Web.Socket.WebSocket"] || {});
(function($PS) {
  "use strict";
  $PS["Web.Socket.WebSocket"] = $PS["Web.Socket.WebSocket"] || {};
  var exports = $PS["Web.Socket.WebSocket"];
  var $foreign = $PS["Web.Socket.WebSocket"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Web_Socket_BinaryType = $PS["Web.Socket.BinaryType"];
  var Web_Socket_ReadyState = $PS["Web.Socket.ReadyState"];
  var toEventTarget = Unsafe_Coerce.unsafeCoerce;
  var setBinaryType = function (ws) {
      var $10 = $foreign.setBinaryTypeImpl(ws);
      return function ($11) {
          return $10(Web_Socket_BinaryType.printBinaryType($11));
      };
  };                               
  var sendArrayBufferView = $foreign.sendImpl;
  var readyState = function (ws) {
      return function __do() {
          var rs = $foreign.readyStateImpl(ws)();
          return Data_Maybe.fromJust()(Web_Socket_ReadyState.toEnumReadyState(rs));
      };
  };
  exports["toEventTarget"] = toEventTarget;
  exports["readyState"] = readyState;
  exports["setBinaryType"] = setBinaryType;
  exports["sendArrayBufferView"] = sendArrayBufferView;
  exports["create"] = $foreign.create;
})(PS);
(function($PS) {
  "use strict";
  $PS["Lib.WebSocket"] = $PS["Lib.WebSocket"] || {};
  var exports = $PS["Lib.WebSocket"];
  var $foreign = $PS["Lib.WebSocket"];
  var Api_Pull = $PS["Api.Pull"];
  var Api_Push = $PS["Api.Push"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Show = $PS["Data.Show"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Console = $PS["Effect.Console"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Effect_Timer = $PS["Effect.Timer"];
  var Foreign = $PS["Foreign"];
  var Proto_Decode = $PS["Proto.Decode"];
  var Web_Event_EventTarget = $PS["Web.Event.EventTarget"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_Location = $PS["Web.HTML.Location"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];
  var Web_Socket_BinaryType = $PS["Web.Socket.BinaryType"];
  var Web_Socket_Event_EventTypes = $PS["Web.Socket.Event.EventTypes"];
  var Web_Socket_Event_MessageEvent = $PS["Web.Socket.Event.MessageEvent"];
  var Web_Socket_ReadyState = $PS["Web.Socket.ReadyState"];
  var Web_Socket_WebSocket = $PS["Web.Socket.WebSocket"];                
  var Ws = (function () {
      function Ws(value0) {
          this.value0 = value0;
      };
      Ws.create = function (value0) {
          return new Ws(value0);
      };
      return Ws;
  })();
  var sub = function (v) {
      return function (f) {
          return function __do() {
              var st = Effect_Ref.read(v.value0)();
              var n = 1 + Data_Maybe.fromMaybe(0)(Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(Data_Array.head(st.subs))(Data_Tuple.fst)) | 0;
              Effect_Ref.modify_(function (v1) {
                  return {
                      subs: Data_Array.cons(new Data_Tuple.Tuple(n, f))(st.subs),
                      "await": v1["await"],
                      con: v1.con,
                      q: v1.q,
                      url: v1.url
                  };
              })(v.value0)();
              return Effect_Ref.modify_(function (s) {
                  return {
                      subs: Data_Array.filter(function (v2) {
                          return v2.value0 === n;
                      })(s.subs),
                      "await": s["await"],
                      con: s.con,
                      q: s.q,
                      url: s.url
                  };
              })(v.value0);
          };
      };
  };
  var setBinary = function (ws) {
      return Web_Socket_WebSocket.setBinaryType(ws)(Web_Socket_BinaryType["ArrayBuffer"].value);
  };
  var send = Web_Socket_WebSocket.sendArrayBufferView;
  var readMessageEvent = (function () {
      var $44 = Data_Maybe.maybe(Data_Either.Left.create(Data_Array.singleton("Can't get event")))(Data_Either.Right.create);
      return function ($45) {
          return $44(Web_Socket_Event_MessageEvent.fromEvent($45));
      };
  })();
  var readArrayBuffer = Foreign.unsafeReadTagged("ArrayBuffer");
  var parseMessageEvent = function (f) {
      var $46 = Data_Bifunctor.lmap(Data_Either.bifunctorEither)((function () {
          var $48 = Data_Functor.map(Data_Functor.functorArray)(Foreign.renderForeignError);
          var $49 = Data_Array.fromFoldable(Data_List_Types.foldableList);
          return function ($50) {
              return $48($49(Data_List_NonEmpty.toList($50)));
          };
      })());
      return function ($47) {
          return $46(Control_Monad_Except.runExcept(f(Web_Socket_Event_MessageEvent.data_($47))));
      };
  };
  var onOpen = function (ws) {
      return function (handler) {
          var target = Web_Socket_WebSocket.toEventTarget(ws);
          return function __do() {
              var l = Web_Event_EventTarget.eventListener(handler)();
              return Web_Event_EventTarget.addEventListener(Web_Socket_Event_EventTypes.onOpen)(l)(false)(target)();
          };
      };
  };
  var onMsg$prime = function (f) {
      return function (ws) {
          return function (success) {
              return function (failure) {
                  var parseEvent = function (ev) {
                      return Control_Bind.bind(Data_Either.bindEither)(readMessageEvent(ev))(parseMessageEvent(f));
                  };
                  var target = Web_Socket_WebSocket.toEventTarget(ws);
                  return function __do() {
                      var l = Web_Event_EventTarget.eventListener(function (x) {
                          return Data_Either.either((function () {
                              var $51 = Data_Functor["void"](Effect.functorEffect);
                              return function ($52) {
                                  return $51(failure($52));
                              };
                          })())(success)(parseEvent(x));
                      })();
                      return Web_Event_EventTarget.addEventListener(Web_Socket_Event_EventTypes.onMessage)(l)(false)(target)();
                  };
              };
          };
      };
  };
  var onMsg = function (ws) {
      return function (success) {
          return function (failure) {
              return onMsg$prime(readArrayBuffer)(ws)(function ($53) {
                  return success($foreign.uint8Array($53));
              })(failure);
          };
      };
  };
  var onError = function (ws) {
      return function (handler) {
          var target = Web_Socket_WebSocket.toEventTarget(ws);
          return function __do() {
              var l = Web_Event_EventTarget.eventListener(handler)();
              return Web_Event_EventTarget.addEventListener(Web_Socket_Event_EventTypes.onError)(l)(false)(target)();
          };
      };
  };
  var onClose = function (ws) {
      return function (handler) {
          var target = Web_Socket_WebSocket.toEventTarget(ws);
          return function __do() {
              var l = Web_Event_EventTarget.eventListener(handler)();
              return Web_Event_EventTarget.addEventListener(Web_Socket_Event_EventTypes.onClose)(l)(false)(target)();
          };
      };
  };
  var create = function (path) {
      return function __do() {
          var location = Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)(Web_HTML_Window.location)();
          var protocol = Web_HTML_Location.protocol(location)();
          var protocol$prime = (function () {
              var $24 = protocol === "https:";
              if ($24) {
                  return "wss:";
              };
              return "ws:";
          })();
          var url = protocol$prime + ("//" + path);
          return Web_Socket_WebSocket.create(url)([  ])();
      };
  };
  var reconnect = function (v) {
      return function __do() {
          var st = Effect_Ref.read(v.value0)();
          var con = create(st.url)();
          Effect_Ref.modify_(function (v1) {
              return {
                  con: con,
                  "await": true,
                  q: v1.q,
                  subs: v1.subs,
                  url: v1.url
              };
          })(v.value0)();
          return initWs(new Ws(v.value0))();
      };
  };
  var initWs = function (v) {
      return function __do() {
          var st = Effect_Ref.read(v.value0)();
          onOpen(st.con)(function (v1) {
              return function __do() {
                  var curr = Effect_Ref.read(v.value0)();
                  setBinary(curr.con)();
                  Data_Traversable.sequence(Data_Traversable.traversableArray)(Effect.applicativeEffect)(Data_Functor.mapFlipped(Data_Functor.functorArray)(curr.q)(function (msg) {
                      return send(curr.con)(Api_Pull.encodePull(msg));
                  }))();
                  return Effect_Ref.modify_(function (v2) {
                      return {
                          q: [  ],
                          "await": false,
                          con: v2.con,
                          subs: v2.subs,
                          url: v2.url
                      };
                  })(v.value0)();
              };
          })();
          onError(st.con)(function (e) {
              return function __do() {
                  var curr = Effect_Ref.read(v.value0)();
                  Data_Traversable.sequence(Data_Traversable.traversableArray)(Effect.applicativeEffect)(Data_Functor.mapFlipped(Data_Functor.functorArray)(curr.subs)(function (v1) {
                      return v1.value1(Data_Maybe.Nothing.value);
                  }))();
                  Effect_Ref.modify_(function (v1) {
                      return {
                          "await": true,
                          con: v1.con,
                          q: v1.q,
                          subs: v1.subs,
                          url: v1.url
                      };
                  })(v.value0)();
                  return Effect_Timer.setTimeout(3000)(reconnect(new Ws(v.value0)))();
              };
          })();
          onClose(st.con)(function (v1) {
              return Effect_Ref.modify_(function (v2) {
                  return {
                      "await": false,
                      con: v2.con,
                      q: v2.q,
                      subs: v2.subs,
                      url: v2.url
                  };
              })(v.value0);
          })();
          onMsg(st.con)(function (d) {
              var v1 = Api_Push.decodePush(d);
              if (v1 instanceof Data_Either.Left) {
                  return Effect_Console.error(Data_Show.show(Proto_Decode.showError)(v1.value0));
              };
              if (v1 instanceof Data_Either.Right) {
                  return function __do() {
                      var curr = Effect_Ref.read(v.value0)();
                      return Data_Functor["void"](Effect.functorEffect)(Data_Traversable.sequence(Data_Traversable.traversableArray)(Effect.applicativeEffect)(Data_Functor.mapFlipped(Data_Functor.functorArray)(curr.subs)(function (v2) {
                          return v2.value1(new Data_Maybe.Just(v1.value0.val));
                      })))();
                  };
              };
              throw new Error("Failed pattern match at Lib.WebSocket (line 87, column 29 - line 91, column 73): " + [ v1.constructor.name ]);
          })((function () {
              var $54 = Data_Traversable.sequence(Data_Traversable.traversableArray)(Effect.applicativeEffect);
              var $55 = Data_Functor.map(Data_Functor.functorArray)(Effect_Console.error);
              return function ($56) {
                  return $54($55($56));
              };
          })())();
          return Data_Unit.unit;
      };
  };
  var $$new = function (url) {
      return function __do() {
          var con = create(url)();
          var st = Effect_Ref["new"]({
              con: con,
              subs: [  ],
              q: [  ],
              url: url,
              "await": true
          })();
          var ws = new Ws(st);
          initWs(ws)();
          return ws;
      };
  };
  var snd = function (v) {
      return function (msg) {
          return function __do() {
              var st = Effect_Ref.read(v.value0)();
              var rs = Web_Socket_WebSocket.readyState(st.con)();
              if (rs instanceof Web_Socket_ReadyState.Open) {
                  return send(st.con)(Api_Pull.encodePull(msg))();
              };
              if (rs instanceof Web_Socket_ReadyState.Connecting) {
                  return Effect_Ref.modify_(function (v1) {
                      return {
                          q: Data_Array.cons(msg)(st.q),
                          "await": v1["await"],
                          con: v1.con,
                          subs: v1.subs,
                          url: v1.url
                      };
                  })(v.value0)();
              };
              Effect_Ref.modify_(function (v1) {
                  return {
                      q: Data_Array.cons(msg)(st.q),
                      "await": v1["await"],
                      con: v1.con,
                      subs: v1.subs,
                      url: v1.url
                  };
              })(v.value0)();
              if (st["await"]) {
                  return Data_Unit.unit;
              };
              return reconnect(new Ws(v.value0))();
          };
      };
  };
  exports["new"] = $$new;
  exports["sub"] = sub;
  exports["snd"] = snd;
  exports["reconnect"] = reconnect;
})(PS);
(function($PS) {
  "use strict";
  $PS["App.Driver"] = $PS["App.Driver"] || {};
  var exports = $PS["App.Driver"];
  var Api = $PS["Api"];
  var Api_Pull = $PS["Api.Pull"];
  var Api_Push = $PS["Api.Push"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_JSDate = $PS["Data.JSDate"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Show = $PS["Data.Show"];
  var Data_Unit = $PS["Data.Unit"];
  var Datepicker = $PS["Datepicker"];
  var Effect = $PS["Effect"];
  var Global = $PS["Global"];
  var Keys = $PS["Keys"];
  var Lib_React = $PS["Lib.React"];
  var Lib_WebSocket = $PS["Lib.WebSocket"];
  var React = $PS["React"];
  var React_DOM = $PS["React.DOM"];
  var React_DOM_Props = $PS["React.DOM.Props"];                
  var driverClass = (function () {
      var updateMap = function ($$this) {
          return function __do() {
              var s = React.getState($$this)();
              var origin = Data_Maybe.fromMaybe("")(Global["encodeURI"](s.from.street + ("+" + (s.from.building + ("+" + s.from.city)))));
              var destination = Data_Maybe.fromMaybe("")(Global["encodeURI"](s.to.street + ("+" + (s.to.building + ("+" + s.to.city)))));
              var q = "https://www.google.com/maps/embed/v1/directions" + ("?origin=" + (origin + ("&destination=" + (destination + ("&key=" + "AIzaSyAuq2lMfK8JPYK4-zYYw9Bl8SeTQrKJJeY")))));
              return React.modifyState($$this)(function (state) {
                  return {
                      mapQ: new Data_Maybe.Just(q),
                      routeId: state.routeId,
                      firstName: state.firstName,
                      lastName: state.lastName,
                      phone: state.phone,
                      carPlate: state.carPlate,
                      date: state.date,
                      deviationDistance: state.deviationDistance,
                      deviationTime: state.deviationTime,
                      seats: state.seats,
                      from: state.from,
                      to: state.to,
                      types: state.types,
                      "await": state["await"],
                      error: state.error,
                      unsub: state.unsub
                  };
              })();
          };
      };
      var sendDriver = function ($$this) {
          return function __do() {
              var s = React.getState($$this)();
              var p = React.getProps($$this)();
              React.modifyState($$this)(function (v) {
                  return {
                      mapQ: v.mapQ,
                      routeId: v.routeId,
                      firstName: v.firstName,
                      lastName: v.lastName,
                      phone: v.phone,
                      carPlate: v.carPlate,
                      date: v.date,
                      deviationDistance: v.deviationDistance,
                      deviationTime: v.deviationTime,
                      seats: v.seats,
                      from: v.from,
                      to: v.to,
                      types: v.types,
                      "await": true,
                      error: v.error,
                      unsub: v.unsub
                  };
              })();
              var driver = new Api_Pull.AddDriver({
                  firstName: s.firstName,
                  lastName: s.lastName,
                  phone: s.phone,
                  carPlate: s.carPlate,
                  date: Data_JSDate.getTime(s.date),
                  deviationDistance: s.deviationDistance,
                  deviationTime: s.deviationTime,
                  seats: s.seats,
                  from: s.from,
                  to: s.to,
                  types: s.types,
                  lang: p.lang
              });
              return Lib_WebSocket.snd(p.ws)(driver)();
          };
      };
      var render = function ($$this) {
          return function __do() {
              var props = React.getProps($$this)();
              var state = React.getState($$this)();
              return React_DOM.div([  ])([ React_DOM.h6([ Lib_React.cn("d-flex justify-content-center") ])([ React_DOM.text(props.keyText("key.driver_data")) ]), React_DOM.div([ Lib_React.cn("d-flex justify-content-center form-row") ])([ React_DOM.div([ Lib_React.cn("col-md-5 col-lg-3 mb-3") ])([ React_DOM.label([ React_DOM_Props.htmlFor("firstName") ])([ React_DOM.text(props.keyText("key.first_name")) ]), React_DOM.input([ React_DOM_Props["_type"]("text"), Lib_React.cn("form-control"), React_DOM_Props["_id"]("firstName"), React_DOM_Props.required(true), React_DOM_Props.value(state.firstName), Lib_React.onChangeValue(function (v) {
                  return React.modifyState($$this)(function (v1) {
                      return {
                          firstName: v,
                          lastName: v1.lastName,
                          phone: v1.phone,
                          carPlate: v1.carPlate,
                          date: v1.date,
                          deviationDistance: v1.deviationDistance,
                          deviationTime: v1.deviationTime,
                          seats: v1.seats,
                          types: v1.types,
                          from: v1.from,
                          to: v1.to,
                          "await": v1["await"],
                          error: v1.error,
                          mapQ: v1.mapQ,
                          routeId: v1.routeId,
                          unsub: v1.unsub
                      };
                  });
              }), React_DOM_Props.value(state.firstName) ]) ]), React_DOM.div([ Lib_React.cn("col-md-5 col-lg-3 mb-3") ])([ React_DOM.label([ React_DOM_Props.htmlFor("lastName") ])([ React_DOM.text(props.keyText("key.last_name")) ]), React_DOM.input([ React_DOM_Props["_type"]("text"), Lib_React.cn("form-control"), React_DOM_Props["_id"]("lastName"), React_DOM_Props.required(true), React_DOM_Props.value(state.lastName), Lib_React.onChangeValue(function (v) {
                  return React.modifyState($$this)(function (v1) {
                      return {
                          firstName: v1.firstName,
                          lastName: v,
                          phone: v1.phone,
                          carPlate: v1.carPlate,
                          date: v1.date,
                          deviationDistance: v1.deviationDistance,
                          deviationTime: v1.deviationTime,
                          seats: v1.seats,
                          types: v1.types,
                          from: v1.from,
                          to: v1.to,
                          "await": v1["await"],
                          error: v1.error,
                          mapQ: v1.mapQ,
                          routeId: v1.routeId,
                          unsub: v1.unsub
                      };
                  });
              }), React_DOM_Props.value(state.lastName) ]), React_DOM.small([ Lib_React.cn("form-text text-muted") ])([ React_DOM.text(props.keyText("key.last_name.hint")) ]) ]), React_DOM.div([ Lib_React.cn("col-md-5 col-lg-3 mb-3") ])([ React_DOM.label([ React_DOM_Props.htmlFor("phone") ])([ React_DOM.text(props.keyText("key.phone")) ]), React_DOM.input([ React_DOM_Props["_type"]("text"), Lib_React.cn("form-control"), React_DOM_Props["_id"]("phone"), React_DOM_Props.autoComplete("phone"), React_DOM_Props.required(true), React_DOM_Props.value(state.phone), Lib_React.onChangeValue(function (v) {
                  return React.modifyState($$this)(function (v1) {
                      return {
                          firstName: v1.firstName,
                          lastName: v1.lastName,
                          phone: v,
                          carPlate: v1.carPlate,
                          date: v1.date,
                          deviationDistance: v1.deviationDistance,
                          deviationTime: v1.deviationTime,
                          seats: v1.seats,
                          types: v1.types,
                          from: v1.from,
                          to: v1.to,
                          "await": v1["await"],
                          error: v1.error,
                          mapQ: v1.mapQ,
                          routeId: v1.routeId,
                          unsub: v1.unsub
                      };
                  });
              }) ]), React_DOM.small([ Lib_React.cn("form-text text-muted") ])([ React_DOM.text(props.keyText("key.phone.hint")) ]) ]), React_DOM.div([ Lib_React.cn("col-md-5 col-lg-3 mb-3") ])([ React_DOM.label([ React_DOM_Props.htmlFor("carPlate") ])([ React_DOM.text(props.keyText("key.car_plate")) ]), React_DOM.input([ React_DOM_Props["_type"]("text"), Lib_React.cn("form-control"), React_DOM_Props["_id"]("carPlate"), React_DOM_Props.autoComplete("carPlate"), React_DOM_Props.required(true), React_DOM_Props.value(state.carPlate), Lib_React.onChangeValue(function (v) {
                  return React.modifyState($$this)(function (v1) {
                      return {
                          firstName: v1.firstName,
                          lastName: v1.lastName,
                          phone: v1.phone,
                          carPlate: v,
                          date: v1.date,
                          deviationDistance: v1.deviationDistance,
                          deviationTime: v1.deviationTime,
                          seats: v1.seats,
                          types: v1.types,
                          from: v1.from,
                          to: v1.to,
                          "await": v1["await"],
                          error: v1.error,
                          mapQ: v1.mapQ,
                          routeId: v1.routeId,
                          unsub: v1.unsub
                      };
                  });
              }) ]), React_DOM.small([ Lib_React.cn("form-text text-muted") ])([ React_DOM.text(props.keyText("key.car_plate.hint")) ]) ]) ]), React_DOM.h6([ Lib_React.cn("d-flex justify-content-center") ])([ React_DOM.text(props.keyText("key.route_data")) ]), React_DOM.div([ Lib_React.cn("d-flex justify-content-center form-row") ])([ React_DOM.div([ Lib_React.cn("col-md-1 d-lg-none mb-md-3") ])([  ]), React_DOM.div([ Lib_React.cn("col-md-5 col-lg-3 mb-3") ])([ React_DOM.label([ React_DOM_Props.htmlFor("date") ])([ React_DOM.text(props.keyText("key.date")) ]), React.createLeafElement()(Datepicker.datepickerClass)({
                  onChange: function (d) {
                      return React.modifyState($$this)(function (v) {
                          return {
                              firstName: v.firstName,
                              lastName: v.lastName,
                              phone: v.phone,
                              carPlate: v.carPlate,
                              date: d,
                              deviationDistance: v.deviationDistance,
                              deviationTime: v.deviationTime,
                              seats: v.seats,
                              types: v.types,
                              from: v.from,
                              to: v.to,
                              "await": v["await"],
                              error: v.error,
                              mapQ: v.mapQ,
                              routeId: v.routeId,
                              unsub: v.unsub
                          };
                      });
                  },
                  lang: props.lang,
                  showTime: true,
                  className: "form-control",
                  wrapperClassName: "form-control",
                  "_id": "date",
                  keyText: props.keyText
              }) ]), React_DOM.div([ Lib_React.cn("col-md-2 col-lg-2 mb-3") ])([ React_DOM.label([ React_DOM_Props.htmlFor("deviationDistance") ])([ React_DOM.text(props.keyText("key.deviation_distance")) ]), React_DOM.input([ React_DOM_Props["_type"]("number"), Lib_React.cn("form-control"), React_DOM_Props["_id"]("deviationDistance"), React_DOM_Props.min("2"), React_DOM_Props.max("20"), React_DOM_Props.required(true), React_DOM_Props.value(Data_Show.show(Data_Show.showInt)(state.deviationDistance)), Lib_React.onChangeValueInt(function (v) {
                  return React.modifyState($$this)(function (v1) {
                      return {
                          firstName: v1.firstName,
                          lastName: v1.lastName,
                          phone: v1.phone,
                          carPlate: v1.carPlate,
                          date: v1.date,
                          deviationDistance: v,
                          deviationTime: v1.deviationTime,
                          seats: v1.seats,
                          types: v1.types,
                          from: v1.from,
                          to: v1.to,
                          "await": v1["await"],
                          error: v1.error,
                          mapQ: v1.mapQ,
                          routeId: v1.routeId,
                          unsub: v1.unsub
                      };
                  });
              }) ]), React_DOM.small([ Lib_React.cn("form-text text-muted") ])([ React_DOM.text(props.keyText("key.deviation_distance.hint")) ]) ]), React_DOM.div([ Lib_React.cn("col-md-2 col-lg-2 mb-3") ])([ React_DOM.label([ React_DOM_Props.htmlFor("deviationTime") ])([ React_DOM.text(props.keyText("key.deviation_time")) ]), React_DOM.input([ React_DOM_Props["_type"]("number"), Lib_React.cn("form-control"), React_DOM_Props["_id"]("deviationTime"), React_DOM_Props.min("10"), React_DOM_Props.max("120"), React_DOM_Props.required(true), React_DOM_Props.value(Data_Show.show(Data_Show.showInt)(state.deviationTime)), Lib_React.onChangeValueInt(function (v) {
                  return React.modifyState($$this)(function (v1) {
                      return {
                          firstName: v1.firstName,
                          lastName: v1.lastName,
                          phone: v1.phone,
                          carPlate: v1.carPlate,
                          date: v1.date,
                          deviationDistance: v1.deviationDistance,
                          deviationTime: v,
                          seats: v1.seats,
                          types: v1.types,
                          from: v1.from,
                          to: v1.to,
                          "await": v1["await"],
                          error: v1.error,
                          mapQ: v1.mapQ,
                          routeId: v1.routeId,
                          unsub: v1.unsub
                      };
                  });
              }) ]), React_DOM.small([ Lib_React.cn("form-text text-muted") ])([ React_DOM.text(props.keyText("key.deviation_time.hint")) ]) ]), React_DOM.div([ Lib_React.cn("col-md-1 d-lg-none mb-md-3") ])([  ]), React_DOM.div([ Lib_React.cn("col-md-4 col-lg-1 mb-3") ])([ React_DOM.label([ React_DOM_Props.htmlFor("seats") ])([ React_DOM.text(props.keyText("key.seats")) ]), React_DOM.input([ React_DOM_Props["_type"]("number"), Lib_React.cn("form-control"), React_DOM_Props["_id"]("seats"), React_DOM_Props.min("1"), React_DOM_Props.max("5"), React_DOM_Props.value("1"), React_DOM_Props.disabled(true), React_DOM_Props.required(true), React_DOM_Props.value(Data_Show.show(Data_Show.showInt)(state.seats)), Lib_React.onChangeValueInt(function (v) {
                  return React.modifyState($$this)(function (v1) {
                      return {
                          firstName: v1.firstName,
                          lastName: v1.lastName,
                          phone: v1.phone,
                          carPlate: v1.carPlate,
                          date: v1.date,
                          deviationDistance: v1.deviationDistance,
                          deviationTime: v1.deviationTime,
                          seats: v,
                          types: v1.types,
                          from: v1.from,
                          to: v1.to,
                          "await": v1["await"],
                          error: v1.error,
                          mapQ: v1.mapQ,
                          routeId: v1.routeId,
                          unsub: v1.unsub
                      };
                  });
              }) ]), React_DOM.small([ Lib_React.cn("form-text text-muted") ])([ React_DOM.text(props.keyText("key.seats.hint")) ]) ]), React_DOM.div([ Lib_React.cn("col-md-4 col-lg-4 mb-3 pl-md-2") ])([ React_DOM.div([ Lib_React.cn("pl-md-2") ])([ React_DOM.label([  ])([ React_DOM.text(props.keyText("key.passenger")) ]) ]), React_DOM.div([ Lib_React.cn("pl-md-2") ])(Data_Functor.map(Data_Functor.functorArray)(function (v) {
                  return React_DOM.div([ Lib_React.cn("form-check") ])([ React_DOM.input([ Lib_React.cn("form-check-input"), React_DOM_Props["_type"]("checkbox"), React_DOM_Props.value(""), React_DOM_Props["_id"](Keys.keyPassengerType(v)), React_DOM_Props.checked(Data_Foldable.elem(Data_Foldable.foldableArray)(Api.eqPassengerType)(v)(state.types)), React_DOM_Props.onChange(function (v1) {
                      return React.modifyState($$this)(function (v2) {
                          return {
                              firstName: v2.firstName,
                              lastName: v2.lastName,
                              phone: v2.phone,
                              carPlate: v2.carPlate,
                              date: v2.date,
                              deviationDistance: v2.deviationDistance,
                              deviationTime: v2.deviationTime,
                              seats: v2.seats,
                              types: (function () {
                                  var $39 = Data_Foldable.elem(Data_Foldable.foldableArray)(Api.eqPassengerType)(v)(state.types);
                                  if ($39) {
                                      return Data_Array["delete"](Api.eqPassengerType)(v)(state.types);
                                  };
                                  return Data_Array.cons(v)(state.types);
                              })(),
                              from: v2.from,
                              to: v2.to,
                              "await": v2["await"],
                              error: v2.error,
                              mapQ: v2.mapQ,
                              routeId: v2.routeId,
                              unsub: v2.unsub
                          };
                      });
                  }) ]), React_DOM.label([ Lib_React.cn("form-check-label"), React_DOM_Props.htmlFor(Keys.keyPassengerType(v)) ])([ React_DOM.text(props.keyText(Keys.keyPassengerType(v))) ]) ]);
              })([ Api.Medical.value, Api.Police.value, Api.Firefighter.value, Api.Army.value, Api.Farmacy.value, Api.Cashier.value, Api.Regular.value ])) ]) ]), React_DOM.h6([ Lib_React.cn("d-flex justify-content-center") ])([ React_DOM.text(props.keyText("key.route_start")) ]), React_DOM.div([ Lib_React.cn("d-flex justify-content-center form-row") ])([ React_DOM.div([ Lib_React.cn("col-md-5 col-lg-3 mb-3 mb-3") ])([ React_DOM.label([ React_DOM_Props.htmlFor("countryFrom") ])([ React_DOM.text(props.keyText("key.country")) ]), React_DOM.input([ React_DOM_Props["_type"]("text"), Lib_React.cn("form-control"), React_DOM_Props["_id"]("countryFrom"), React_DOM_Props.required(true), React_DOM_Props.value(state.from.country), Lib_React.onChangeValue(function (v) {
                  return React.modifyState($$this)(function (s) {
                      return {
                          firstName: s.firstName,
                          lastName: s.lastName,
                          phone: s.phone,
                          carPlate: s.carPlate,
                          date: s.date,
                          deviationDistance: s.deviationDistance,
                          deviationTime: s.deviationTime,
                          seats: s.seats,
                          types: s.types,
                          from: {
                              country: v,
                              city: s.from.city,
                              street: s.from.street,
                              building: s.from.building
                          },
                          to: s.to,
                          "await": s["await"],
                          error: s.error,
                          mapQ: s.mapQ,
                          routeId: s.routeId,
                          unsub: s.unsub
                      };
                  });
              }) ]) ]), React_DOM.div([ Lib_React.cn("col-md-5 col-lg-3 mb-3 mb-3") ])([ React_DOM.label([ React_DOM_Props.htmlFor("cityFrom") ])([ React_DOM.text(props.keyText("key.city")) ]), React_DOM.input([ React_DOM_Props["_type"]("text"), Lib_React.cn("form-control"), React_DOM_Props["_id"]("cityFrom"), React_DOM_Props.required(true), React_DOM_Props.value(state.from.city), Lib_React.onChangeValue(function (v) {
                  return React.modifyState($$this)(function (s) {
                      return {
                          firstName: s.firstName,
                          lastName: s.lastName,
                          phone: s.phone,
                          carPlate: s.carPlate,
                          date: s.date,
                          deviationDistance: s.deviationDistance,
                          deviationTime: s.deviationTime,
                          seats: s.seats,
                          types: s.types,
                          from: {
                              country: s.from.country,
                              city: v,
                              street: s.from.street,
                              building: s.from.building
                          },
                          to: s.to,
                          "await": s["await"],
                          error: s.error,
                          mapQ: s.mapQ,
                          routeId: s.routeId,
                          unsub: s.unsub
                      };
                  });
              }) ]) ]), React_DOM.div([ Lib_React.cn("col-md-5 col-lg-3 mb-3 mb-3") ])([ React_DOM.label([ React_DOM_Props.htmlFor("streetFrom") ])([ React_DOM.text(props.keyText("key.street")) ]), React_DOM.input([ React_DOM_Props["_type"]("text"), Lib_React.cn("form-control"), React_DOM_Props["_id"]("streetFrom"), React_DOM_Props.required(true), React_DOM_Props.value(state.from.street), Lib_React.onChangeValue(function (v) {
                  return React.modifyState($$this)(function (s) {
                      return {
                          firstName: s.firstName,
                          lastName: s.lastName,
                          phone: s.phone,
                          carPlate: s.carPlate,
                          date: s.date,
                          deviationDistance: s.deviationDistance,
                          deviationTime: s.deviationTime,
                          seats: s.seats,
                          types: s.types,
                          from: {
                              country: s.from.country,
                              city: s.from.city,
                              street: v,
                              building: s.from.building
                          },
                          to: s.to,
                          "await": s["await"],
                          error: s.error,
                          mapQ: s.mapQ,
                          routeId: s.routeId,
                          unsub: s.unsub
                      };
                  });
              }) ]) ]), React_DOM.div([ Lib_React.cn("col-md-5 col-lg-3 mb-3 mb-3") ])([ React_DOM.label([ React_DOM_Props.htmlFor("buildingFrom") ])([ React_DOM.text(props.keyText("key.building")) ]), React_DOM.input([ React_DOM_Props["_type"]("text"), Lib_React.cn("form-control"), React_DOM_Props["_id"]("buildingFrom"), React_DOM_Props.required(true), React_DOM_Props.value(state.from.building), Lib_React.onChangeValue(function (v) {
                  return React.modifyState($$this)(function (s) {
                      return {
                          firstName: s.firstName,
                          lastName: s.lastName,
                          phone: s.phone,
                          carPlate: s.carPlate,
                          date: s.date,
                          deviationDistance: s.deviationDistance,
                          deviationTime: s.deviationTime,
                          seats: s.seats,
                          types: s.types,
                          from: {
                              country: s.from.country,
                              city: s.from.city,
                              street: s.from.street,
                              building: v
                          },
                          to: s.to,
                          "await": s["await"],
                          error: s.error,
                          mapQ: s.mapQ,
                          routeId: s.routeId,
                          unsub: s.unsub
                      };
                  });
              }) ]) ]) ]), React_DOM.h6([ Lib_React.cn("d-flex justify-content-center") ])([ React_DOM.text(props.keyText("key.route_end")) ]), React_DOM.div([ Lib_React.cn("d-flex justify-content-center form-row") ])([ React_DOM.div([ Lib_React.cn("col-md-5 col-lg-3 mb-3 mb-3") ])([ React_DOM.label([ React_DOM_Props.htmlFor("countryTo") ])([ React_DOM.text(props.keyText("key.country")) ]), React_DOM.input([ React_DOM_Props["_type"]("text"), Lib_React.cn("form-control"), React_DOM_Props["_id"]("countryTo"), React_DOM_Props.required(true), React_DOM_Props.value(state.to.country), Lib_React.onChangeValue(function (v) {
                  return React.modifyState($$this)(function (s) {
                      return {
                          firstName: s.firstName,
                          lastName: s.lastName,
                          phone: s.phone,
                          carPlate: s.carPlate,
                          date: s.date,
                          deviationDistance: s.deviationDistance,
                          deviationTime: s.deviationTime,
                          seats: s.seats,
                          types: s.types,
                          from: s.from,
                          to: {
                              country: v,
                              city: s.to.city,
                              street: s.to.street,
                              building: s.to.building
                          },
                          "await": s["await"],
                          error: s.error,
                          mapQ: s.mapQ,
                          routeId: s.routeId,
                          unsub: s.unsub
                      };
                  });
              }) ]) ]), React_DOM.div([ Lib_React.cn("col-md-5 col-lg-3 mb-3 mb-3") ])([ React_DOM.label([ React_DOM_Props.htmlFor("cityTo") ])([ React_DOM.text(props.keyText("key.city")) ]), React_DOM.input([ React_DOM_Props["_type"]("text"), Lib_React.cn("form-control"), React_DOM_Props["_id"]("cityTo"), React_DOM_Props.required(true), React_DOM_Props.value(state.to.city), Lib_React.onChangeValue(function (v) {
                  return React.modifyState($$this)(function (s) {
                      return {
                          firstName: s.firstName,
                          lastName: s.lastName,
                          phone: s.phone,
                          carPlate: s.carPlate,
                          date: s.date,
                          deviationDistance: s.deviationDistance,
                          deviationTime: s.deviationTime,
                          seats: s.seats,
                          types: s.types,
                          from: s.from,
                          to: {
                              country: s.to.country,
                              city: v,
                              street: s.to.street,
                              building: s.to.building
                          },
                          "await": s["await"],
                          error: s.error,
                          mapQ: s.mapQ,
                          routeId: s.routeId,
                          unsub: s.unsub
                      };
                  });
              }) ]) ]), React_DOM.div([ Lib_React.cn("col-md-5 col-lg-3 mb-3 mb-3") ])([ React_DOM.label([ React_DOM_Props.htmlFor("streetTo") ])([ React_DOM.text(props.keyText("key.street")) ]), React_DOM.input([ React_DOM_Props["_type"]("text"), Lib_React.cn("form-control"), React_DOM_Props["_id"]("streetTo"), React_DOM_Props.required(true), React_DOM_Props.value(state.to.street), Lib_React.onChangeValue(function (v) {
                  return React.modifyState($$this)(function (s) {
                      return {
                          firstName: s.firstName,
                          lastName: s.lastName,
                          phone: s.phone,
                          carPlate: s.carPlate,
                          date: s.date,
                          deviationDistance: s.deviationDistance,
                          deviationTime: s.deviationTime,
                          seats: s.seats,
                          types: s.types,
                          from: s.from,
                          to: {
                              country: s.to.country,
                              city: s.to.city,
                              street: v,
                              building: s.to.building
                          },
                          "await": s["await"],
                          error: s.error,
                          mapQ: s.mapQ,
                          routeId: s.routeId,
                          unsub: s.unsub
                      };
                  });
              }) ]) ]), React_DOM.div([ Lib_React.cn("col-md-5 col-lg-3 mb-3 mb-3") ])([ React_DOM.label([ React_DOM_Props.htmlFor("houseTo") ])([ React_DOM.text(props.keyText("key.building")) ]), React_DOM.input([ React_DOM_Props["_type"]("text"), Lib_React.cn("form-control"), React_DOM_Props["_id"]("houseTo"), React_DOM_Props.required(true), React_DOM_Props.value(state.to.building), Lib_React.onChangeValue(function (v) {
                  return React.modifyState($$this)(function (s) {
                      return {
                          firstName: s.firstName,
                          lastName: s.lastName,
                          phone: s.phone,
                          carPlate: s.carPlate,
                          date: s.date,
                          deviationDistance: s.deviationDistance,
                          deviationTime: s.deviationTime,
                          seats: s.seats,
                          types: s.types,
                          from: s.from,
                          to: {
                              country: s.to.country,
                              city: s.to.city,
                              street: s.to.street,
                              building: v
                          },
                          "await": s["await"],
                          error: s.error,
                          mapQ: s.mapQ,
                          routeId: s.routeId,
                          unsub: s.unsub
                      };
                  });
              }) ]) ]) ]), React_DOM.button([ Lib_React.cn("btn btn-outline-secondary mb-3"), React_DOM_Props["_type"]("button"), React_DOM_Props.onClick(function (v) {
                  return updateMap($$this);
              }) ])([ React_DOM.text(props.keyText("key.overview_route")) ]), (function () {
                  if (state.mapQ instanceof Data_Maybe.Just) {
                      return React_DOM.div([ Lib_React.cn("form-row") ])([ React_DOM.div([ Lib_React.cn("col-md-12 mb-3") ])([ React_DOM.iframe([ React_DOM_Props.width("100%"), React_DOM_Props.height("400"), React_DOM_Props.frameBorder("0"), React_DOM_Props.src(state.mapQ.value0) ])([  ]) ]) ]);
                  };
                  if (state.mapQ instanceof Data_Maybe.Nothing) {
                      return Data_Monoid.mempty(React.monoidReactElement);
                  };
                  throw new Error("Failed pattern match at App.Driver (line 279, column 9 - line 287, column 28): " + [ state.mapQ.constructor.name ]);
              })(), React_DOM.div([ Lib_React.cn("form-group") ])([ React_DOM.div([ Lib_React.cn("form-check") ])([ React_DOM.input([ React_DOM_Props["_type"]("checkbox"), Lib_React.cn("form-check-input"), React_DOM_Props["_id"]("agree_terms") ]), React_DOM.label([ React_DOM_Props.htmlFor("agree_terms"), Lib_React.cn("form-check-label") ])([ React_DOM.text(props.keyText("key.agree_terms")) ]) ]), React_DOM.div([ Lib_React.cn("form-check") ])([ React_DOM.input([ React_DOM_Props["_type"]("checkbox"), Lib_React.cn("form-check-input"), React_DOM_Props["_id"]("agree_rules") ]), React_DOM.label([ React_DOM_Props.htmlFor("agree_rules"), Lib_React.cn("form-check-label") ])([ React_DOM.text(props.keyText("key.agree_rules")) ]) ]) ]), React_DOM.div([ Lib_React.cn("alert alert-info col-md-12") ])([ React_DOM.text(props.keyText("key.add.hint")) ]), (function () {
                  if (state.error instanceof Data_Maybe.Just) {
                      return React_DOM.div([ Lib_React.cn("alert alert-danger") ])([ React_DOM.text(props.keyText("key.err." + state.error.value0)) ]);
                  };
                  if (state.error instanceof Data_Maybe.Nothing) {
                      return Data_Monoid.mempty(React.monoidReactElement);
                  };
                  throw new Error("Failed pattern match at App.Driver (line 299, column 9 - line 301, column 28): " + [ state.error.constructor.name ]);
              })(), (function () {
                  if (state.routeId instanceof Data_Maybe.Just) {
                      return React_DOM.div([ Lib_React.cn("alert alert-success") ])([ React_DOM.text(props.keyText("key.add.success") + (" " + state.routeId.value0)) ]);
                  };
                  if (state.routeId instanceof Data_Maybe.Nothing) {
                      return React_DOM.button([ Lib_React.cn("btn btn-primary mb-3"), React_DOM_Props["_type"]("button"), React_DOM_Props.disabled(state["await"]), React_DOM_Props.onClick(function (v) {
                          return sendDriver($$this);
                      }) ])([ React_DOM.text(props.keyText("key.add")), (function () {
                          if (state["await"]) {
                              return React_DOM.div([ Lib_React.cn("spinner-border text-light spinner-border-sm ml-1") ])([  ]);
                          };
                          return Data_Monoid.mempty(React.monoidReactElement);
                      })() ]);
                  };
                  throw new Error("Failed pattern match at App.Driver (line 302, column 9 - line 312, column 14): " + [ state.routeId.constructor.name ]);
              })() ]);
          };
      };
      var onMsg = function ($$this) {
          return function (v) {
              if (v instanceof Data_Maybe.Just && v.value0 instanceof Api_Push.AddRouteOk) {
                  return React.modifyState($$this)(function (v1) {
                      return {
                          mapQ: v1.mapQ,
                          routeId: new Data_Maybe.Just(v.value0.value0.id),
                          firstName: v1.firstName,
                          lastName: v1.lastName,
                          phone: v1.phone,
                          carPlate: v1.carPlate,
                          date: v1.date,
                          deviationDistance: v1.deviationDistance,
                          deviationTime: v1.deviationTime,
                          seats: v1.seats,
                          from: v1.from,
                          to: v1.to,
                          types: v1.types,
                          "await": v1["await"],
                          error: Data_Maybe.Nothing.value,
                          unsub: v1.unsub
                      };
                  });
              };
              if (v instanceof Data_Maybe.Just && v.value0 instanceof Api_Push.AddRouteErr) {
                  return React.modifyState($$this)(function (v1) {
                      return {
                          mapQ: v1.mapQ,
                          routeId: v1.routeId,
                          firstName: v1.firstName,
                          lastName: v1.lastName,
                          phone: v1.phone,
                          carPlate: v1.carPlate,
                          date: v1.date,
                          deviationDistance: v1.deviationDistance,
                          deviationTime: v1.deviationTime,
                          seats: v1.seats,
                          from: v1.from,
                          to: v1.to,
                          types: v1.types,
                          "await": false,
                          error: Data_Maybe.Just.create(Data_Maybe.fromMaybe("system")(v.value0.value0.err)),
                          unsub: v1.unsub
                      };
                  });
              };
              return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
          };
      };
      return React.component()("Driver")(function ($$this) {
          return function __do() {
              var date = Data_JSDate.now();
              var props = React.getProps($$this)();
              return {
                  state: {
                      mapQ: Data_Maybe.Nothing.value,
                      routeId: Data_Maybe.Nothing.value,
                      firstName: Data_Maybe.fromMaybe("")(Control_Bind.bind(Data_Maybe.bindMaybe)(props.user)(function (v) {
                          return v.firstName;
                      })),
                      lastName: Data_Maybe.fromMaybe("")(Control_Bind.bind(Data_Maybe.bindMaybe)(props.user)(function (v) {
                          return v.lastName;
                      })),
                      phone: Data_Maybe.fromMaybe("")(Control_Bind.bind(Data_Maybe.bindMaybe)(props.user)(function (v) {
                          return v.phone;
                      })),
                      carPlate: Data_Maybe.fromMaybe("")(Control_Bind.bind(Data_Maybe.bindMaybe)(props.user)(function (v) {
                          return v.carPlate;
                      })),
                      date: date,
                      deviationDistance: 2,
                      deviationTime: 30,
                      seats: 1,
                      from: {
                          country: "\u0423\u043a\u0440\u0430\u0438\u043d\u0430",
                          city: "\u041a\u0438\u0435\u0432",
                          street: "\u0421\u043f\u043e\u0440\u0442\u0438\u0432\u043d\u0430\u044f",
                          building: "1"
                      },
                      to: {
                          country: "\u0423\u043a\u0440\u0430\u0438\u043d\u0430",
                          city: "\u041a\u0438\u0435\u0432",
                          street: "\u041b\u044c\u0432\u0430 \u0422\u043e\u043b\u0441\u0442\u043e\u0433\u043e",
                          building: "1"
                      },
                      types: Data_Array.fromFoldable(Data_Foldable.foldableArray)([ Api.Medical.value, Api.Police.value, Api.Firefighter.value, Api.Army.value, Api.Farmacy.value, Api.Cashier.value, Api.Regular.value ]),
                      "await": false,
                      error: Data_Maybe.Nothing.value,
                      unsub: Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit)
                  },
                  render: render($$this),
                  componentDidMount: function __do() {
                      var unsub = Lib_WebSocket.sub(props.ws)(onMsg($$this))();
                      return React.modifyState($$this)(function (v) {
                          return {
                              firstName: v.firstName,
                              lastName: v.lastName,
                              phone: v.phone,
                              carPlate: v.carPlate,
                              date: v.date,
                              deviationDistance: v.deviationDistance,
                              deviationTime: v.deviationTime,
                              seats: v.seats,
                              types: v.types,
                              from: v.from,
                              to: v.to,
                              "await": v["await"],
                              error: v.error,
                              mapQ: v.mapQ,
                              routeId: v.routeId,
                              unsub: unsub
                          };
                      })();
                  },
                  componentWillUnmount: function __do() {
                      var v = React.getState($$this)();
                      return v.unsub();
                  }
              };
          };
      });
  })();
  exports["driverClass"] = driverClass;
})(PS);
(function($PS) {
  "use strict";
  $PS["Data.Map.Internal"] = $PS["Data.Map.Internal"] || {};
  var exports = $PS["Data.Map.Internal"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];                    
  var Leaf = (function () {
      function Leaf() {

      };
      Leaf.value = new Leaf();
      return Leaf;
  })();
  var Two = (function () {
      function Two(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Two.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Two(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Two;
  })();
  var Three = (function () {
      function Three(value0, value1, value2, value3, value4, value5, value6) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
          this.value6 = value6;
      };
      Three.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return function (value6) {
                                  return new Three(value0, value1, value2, value3, value4, value5, value6);
                              };
                          };
                      };
                  };
              };
          };
      };
      return Three;
  })();
  var TwoLeft = (function () {
      function TwoLeft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoLeft(value0, value1, value2);
              };
          };
      };
      return TwoLeft;
  })();
  var TwoRight = (function () {
      function TwoRight(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoRight(value0, value1, value2);
              };
          };
      };
      return TwoRight;
  })();
  var ThreeLeft = (function () {
      function ThreeLeft(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeLeft;
  })();
  var ThreeMiddle = (function () {
      function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeMiddle.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeMiddle;
  })();
  var ThreeRight = (function () {
      function ThreeRight(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeRight(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeRight;
  })();
  var KickUp = (function () {
      function KickUp(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      KickUp.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new KickUp(value0, value1, value2, value3);
                  };
              };
          };
      };
      return KickUp;
  })();
  var lookup = function (dictOrd) {
      return function (k) {
          var comp = Data_Ord.compare(dictOrd);
          var go = function ($copy_v) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v) {
                  if (v instanceof Leaf) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Two) {
                      var v2 = comp(k)(v.value1);
                      if (v2 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      if (v2 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  if (v instanceof Three) {
                      var v3 = comp(k)(v.value1);
                      if (v3 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      var v4 = comp(k)(v.value4);
                      if (v4 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value5);
                      };
                      if (v3 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      if (v4 instanceof Data_Ordering.GT) {
                          $copy_v = v.value6;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 200, column 5 - line 200, column 22): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_v);
              };
              return $tco_result;
          };
          return go;
      };
  }; 
  var fromZipper = function ($copy_dictOrd) {
      return function ($copy_v) {
          return function ($copy_tree) {
              var $tco_var_dictOrd = $copy_dictOrd;
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(dictOrd, v, tree) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return tree;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof TwoLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
                          return;
                      };
                      if (v.value0 instanceof TwoRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
                          return;
                      };
                      if (v.value0 instanceof ThreeLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeMiddle) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 418, column 3 - line 423, column 88): " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 415, column 1 - line 415, column 80): " + [ v.constructor.name, tree.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_tree);
              };
              return $tco_result;
          };
      };
  };
  var insert = function (dictOrd) {
      return function (k) {
          return function (v) {
              var up = function ($copy_v1) {
                  return function ($copy_v2) {
                      var $tco_var_v1 = $copy_v1;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(v1, v2) {
                          if (v1 instanceof Data_List_Types.Nil) {
                              $tco_done = true;
                              return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
                          };
                          if (v1 instanceof Data_List_Types.Cons) {
                              if (v1.value0 instanceof TwoLeft) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
                              };
                              if (v1.value0 instanceof TwoRight) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
                              };
                              if (v1.value0 instanceof ThreeLeft) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeMiddle) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeRight) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.Map.Internal (line 454, column 5 - line 459, column 108): " + [ v1.value0.constructor.name, v2.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 451, column 3 - line 451, column 56): " + [ v1.constructor.name, v2.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_v1, $copy_v2);
                      };
                      return $tco_result;
                  };
              };
              var comp = Data_Ord.compare(dictOrd);
              var down = function ($copy_ctx) {
                  return function ($copy_v1) {
                      var $tco_var_ctx = $copy_ctx;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(ctx, v1) {
                          if (v1 instanceof Leaf) {
                              $tco_done = true;
                              return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                          };
                          if (v1 instanceof Two) {
                              var v2 = comp(k)(v1.value1);
                              if (v2 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                              };
                              if (v2 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                              $copy_v1 = v1.value3;
                              return;
                          };
                          if (v1 instanceof Three) {
                              var v3 = comp(k)(v1.value1);
                              if (v3 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                              };
                              var v4 = comp(k)(v1.value4);
                              if (v4 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                              };
                              if (v3 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              if (v3 instanceof Data_Ordering.GT && v4 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value3;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                              $copy_v1 = v1.value6;
                              return;
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 434, column 3 - line 434, column 55): " + [ ctx.constructor.name, v1.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_ctx, $copy_v1);
                      };
                      return $tco_result;
                  };
              };
              return down(Data_List_Types.Nil.value);
          };
      };
  };
  var empty = Leaf.value;
  var fromFoldable = function (dictOrd) {
      return function (dictFoldable) {
          return Data_Foldable.foldl(dictFoldable)(function (m) {
              return function (v) {
                  return insert(dictOrd)(v.value0)(v.value1)(m);
              };
          })(empty);
      };
  };
  exports["lookup"] = lookup;
  exports["fromFoldable"] = fromFoldable;
})(PS);
(function($PS) {
  "use strict";
  $PS["App.Rider"] = $PS["App.Rider"] || {};
  var exports = $PS["App.Rider"];
  var Api = $PS["Api"];
  var Api_Pull = $PS["Api.Pull"];
  var Api_Push = $PS["Api.Push"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_JSDate = $PS["Data.JSDate"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Datepicker = $PS["Datepicker"];
  var Effect = $PS["Effect"];
  var Global = $PS["Global"];
  var Keys = $PS["Keys"];
  var Lib_React = $PS["Lib.React"];
  var Lib_WebSocket = $PS["Lib.WebSocket"];
  var React = $PS["React"];
  var React_DOM = $PS["React.DOM"];
  var React_DOM_Props = $PS["React.DOM.Props"];                
  var riderClass = (function () {
      var updateMap = function ($$this) {
          return function __do() {
              var s = React.getState($$this)();
              var origin = Data_Maybe.fromMaybe("")(Global["encodeURI"](s.from.street + ("+" + (s.from.building + ("+" + s.from.city)))));
              var destination = Data_Maybe.fromMaybe("")(Global["encodeURI"](s.to.street + ("+" + (s.to.building + ("+" + s.to.city)))));
              var q = "https://www.google.com/maps/embed/v1/directions" + ("?origin=" + (origin + ("&destination=" + (destination + ("&key=" + "AIzaSyAuq2lMfK8JPYK4-zYYw9Bl8SeTQrKJJeY")))));
              return React.modifyState($$this)(function (state) {
                  return {
                      mapQ: new Data_Maybe.Just(q),
                      routeId: state.routeId,
                      firstName: state.firstName,
                      lastName: state.lastName,
                      phone: state.phone,
                      date: state.date,
                      tpe: state.tpe,
                      from: state.from,
                      to: state.to,
                      "await": state["await"],
                      unsub: state.unsub
                  };
              })();
          };
      };
      var types = [ Api.Medical.value, Api.Police.value, Api.Firefighter.value, Api.Army.value, Api.Farmacy.value, Api.Cashier.value, Api.Regular.value ];
      var typesMap = Data_Map_Internal.fromFoldable(Data_Ord.ordString)(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(function (v) {
          return new Data_Tuple.Tuple(Keys.keyPassengerType(v), v);
      })(types));
      var sendPassenger = function ($$this) {
          return function __do() {
              var s = React.getState($$this)();
              var p = React.getProps($$this)();
              React.modifyState($$this)(function (v) {
                  return {
                      mapQ: v.mapQ,
                      routeId: v.routeId,
                      firstName: v.firstName,
                      lastName: v.lastName,
                      phone: v.phone,
                      date: v.date,
                      tpe: v.tpe,
                      from: v.from,
                      to: v.to,
                      "await": true,
                      unsub: v.unsub
                  };
              })();
              var driver = new Api_Pull.AddPassenger({
                  firstName: s.firstName,
                  lastName: s.lastName,
                  phone: s.phone,
                  date: Data_JSDate.getTime(s.date),
                  tpe: s.tpe,
                  from: s.from,
                  to: s.to
              });
              return Lib_WebSocket.snd(p.ws)(driver)();
          };
      };
      var render = function ($$this) {
          return function __do() {
              var props = React.getProps($$this)();
              var state = React.getState($$this)();
              return React_DOM.div([  ])([ React_DOM.h6([ Lib_React.cn("d-flex justify-content-center") ])([ React_DOM.text(props.keyText("key.passenger_data")) ]), React_DOM.div([ Lib_React.cn("d-flex justify-content-center form-row") ])([ React_DOM.div([ Lib_React.cn("col-md-5 col-lg-3 mb-3") ])([ React_DOM.label([ React_DOM_Props.htmlFor("firstName") ])([ React_DOM.text(props.keyText("key.first_name")) ]), React_DOM.input([ React_DOM_Props["_type"]("text"), Lib_React.cn("form-control"), React_DOM_Props["_id"]("firstName"), React_DOM_Props.required(true), React_DOM_Props.value(state.firstName), Lib_React.onChangeValue(function (v) {
                  return React.modifyState($$this)(function (v1) {
                      return {
                          firstName: v,
                          lastName: v1.lastName,
                          phone: v1.phone,
                          tpe: v1.tpe,
                          date: v1.date,
                          from: v1.from,
                          to: v1.to,
                          "await": v1["await"],
                          mapQ: v1.mapQ,
                          routeId: v1.routeId,
                          unsub: v1.unsub
                      };
                  });
              }), React_DOM_Props.value(state.firstName) ]) ]), React_DOM.div([ Lib_React.cn("col-md-5 col-lg-3 mb-3") ])([ React_DOM.label([ React_DOM_Props.htmlFor("lastName") ])([ React_DOM.text(props.keyText("key.last_name")) ]), React_DOM.input([ React_DOM_Props["_type"]("text"), Lib_React.cn("form-control"), React_DOM_Props["_id"]("lastName"), React_DOM_Props.required(true), React_DOM_Props.value(state.lastName), Lib_React.onChangeValue(function (v) {
                  return React.modifyState($$this)(function (v1) {
                      return {
                          firstName: v1.firstName,
                          lastName: v,
                          phone: v1.phone,
                          tpe: v1.tpe,
                          date: v1.date,
                          from: v1.from,
                          to: v1.to,
                          "await": v1["await"],
                          mapQ: v1.mapQ,
                          routeId: v1.routeId,
                          unsub: v1.unsub
                      };
                  });
              }), React_DOM_Props.value(state.lastName) ]), React_DOM.small([ Lib_React.cn("form-text text-muted") ])([ React_DOM.text(props.keyText("key.last_name.hint")) ]) ]), React_DOM.div([ Lib_React.cn("col-md-5 col-lg-3 mb-3") ])([ React_DOM.label([ React_DOM_Props.htmlFor("phone") ])([ React_DOM.text(props.keyText("key.phone")) ]), React_DOM.input([ React_DOM_Props["_type"]("text"), Lib_React.cn("form-control"), React_DOM_Props["_id"]("phone"), React_DOM_Props.autoComplete("phone"), React_DOM_Props.required(true), React_DOM_Props.value(state.phone), Lib_React.onChangeValue(function (v) {
                  return React.modifyState($$this)(function (v1) {
                      return {
                          firstName: v1.firstName,
                          lastName: v1.lastName,
                          phone: v,
                          tpe: v1.tpe,
                          date: v1.date,
                          from: v1.from,
                          to: v1.to,
                          "await": v1["await"],
                          mapQ: v1.mapQ,
                          routeId: v1.routeId,
                          unsub: v1.unsub
                      };
                  });
              }) ]), React_DOM.small([ Lib_React.cn("form-text text-muted") ])([ React_DOM.text(props.keyText("key.phone.hint")) ]) ]), React_DOM.div([ Lib_React.cn("col-md-5 col-lg-3 mb-3") ])([ React_DOM.label([ React_DOM_Props.htmlFor("specialization") ])([ React_DOM.text(props.keyText("key.specialization")) ]), React_DOM.select([ Lib_React.cn("custom-select"), React_DOM_Props["_id"]("type"), React_DOM_Props.value(Keys.keyPassengerType(state.tpe)), Lib_React.onChangeValue(function (v) {
                  return React.modifyState($$this)(function (v1) {
                      return {
                          firstName: v1.firstName,
                          lastName: v1.lastName,
                          phone: v1.phone,
                          tpe: Data_Maybe.fromMaybe(Api.Regular.value)(Data_Map_Internal.lookup(Data_Ord.ordString)(v)(typesMap)),
                          date: v1.date,
                          from: v1.from,
                          to: v1.to,
                          "await": v1["await"],
                          mapQ: v1.mapQ,
                          routeId: v1.routeId,
                          unsub: v1.unsub
                      };
                  });
              }) ])(Data_Functor.map(Data_Functor.functorArray)(function (v) {
                  return React_DOM.option([ React_DOM_Props.value(Keys.keyPassengerType(v)) ])([ React_DOM.text(props.keyText(Keys.keyPassengerType(v))) ]);
              })(types)) ]) ]), React_DOM.h6([ Lib_React.cn("d-flex justify-content-center") ])([ React_DOM.text(props.keyText("key.route_data")) ]), React_DOM.div([ Lib_React.cn("d-flex justify-content-center form-row") ])([ React_DOM.div([ Lib_React.cn("col-md-5 col-lg-3 mb-3") ])([ React_DOM.label([ React_DOM_Props.htmlFor("date") ])([ React_DOM.text(props.keyText("key.date")) ]), React.createLeafElement()(Datepicker.datepickerClass)({
                  onChange: function (d) {
                      return React.modifyState($$this)(function (v) {
                          return {
                              firstName: v.firstName,
                              lastName: v.lastName,
                              phone: v.phone,
                              tpe: v.tpe,
                              date: d,
                              from: v.from,
                              to: v.to,
                              "await": v["await"],
                              mapQ: v.mapQ,
                              routeId: v.routeId,
                              unsub: v.unsub
                          };
                      });
                  },
                  lang: props.lang,
                  showTime: true,
                  className: "form-control",
                  wrapperClassName: "form-control",
                  "_id": "date",
                  keyText: props.keyText
              }) ]) ]), React_DOM.h6([ Lib_React.cn("d-flex justify-content-center") ])([ React_DOM.text(props.keyText("key.route_start")) ]), React_DOM.div([ Lib_React.cn("d-flex justify-content-center form-row") ])([ React_DOM.div([ Lib_React.cn("col-md-5 col-lg-3 mb-3") ])([ React_DOM.label([ React_DOM_Props.htmlFor("countryFrom") ])([ React_DOM.text(props.keyText("key.country")) ]), React_DOM.input([ React_DOM_Props["_type"]("text"), Lib_React.cn("form-control"), React_DOM_Props["_id"]("countryFrom"), React_DOM_Props.required(true), React_DOM_Props.value(state.from.country), Lib_React.onChangeValue(function (v) {
                  return React.modifyState($$this)(function (s) {
                      return {
                          firstName: s.firstName,
                          lastName: s.lastName,
                          phone: s.phone,
                          tpe: s.tpe,
                          date: s.date,
                          from: {
                              country: v,
                              city: s.from.city,
                              street: s.from.street,
                              building: s.from.building
                          },
                          to: s.to,
                          "await": s["await"],
                          mapQ: s.mapQ,
                          routeId: s.routeId,
                          unsub: s.unsub
                      };
                  });
              }) ]) ]), React_DOM.div([ Lib_React.cn("col-md-5 col-lg-3 mb-3") ])([ React_DOM.label([ React_DOM_Props.htmlFor("cityFrom") ])([ React_DOM.text(props.keyText("key.city")) ]), React_DOM.input([ React_DOM_Props["_type"]("text"), Lib_React.cn("form-control"), React_DOM_Props["_id"]("cityFrom"), React_DOM_Props.required(true), React_DOM_Props.value(state.from.city), Lib_React.onChangeValue(function (v) {
                  return React.modifyState($$this)(function (s) {
                      return {
                          firstName: s.firstName,
                          lastName: s.lastName,
                          phone: s.phone,
                          tpe: s.tpe,
                          date: s.date,
                          from: {
                              country: s.from.country,
                              city: v,
                              street: s.from.street,
                              building: s.from.building
                          },
                          to: s.to,
                          "await": s["await"],
                          mapQ: s.mapQ,
                          routeId: s.routeId,
                          unsub: s.unsub
                      };
                  });
              }) ]) ]), React_DOM.div([ Lib_React.cn("col-md-5 col-lg-3 mb-3") ])([ React_DOM.label([ React_DOM_Props.htmlFor("streetFrom") ])([ React_DOM.text(props.keyText("key.street")) ]), React_DOM.input([ React_DOM_Props["_type"]("text"), Lib_React.cn("form-control"), React_DOM_Props["_id"]("streetFrom"), React_DOM_Props.required(true), React_DOM_Props.value(state.from.street), Lib_React.onChangeValue(function (v) {
                  return React.modifyState($$this)(function (s) {
                      return {
                          firstName: s.firstName,
                          lastName: s.lastName,
                          phone: s.phone,
                          tpe: s.tpe,
                          date: s.date,
                          from: {
                              country: s.from.country,
                              city: s.from.city,
                              street: v,
                              building: s.from.building
                          },
                          to: s.to,
                          "await": s["await"],
                          mapQ: s.mapQ,
                          routeId: s.routeId,
                          unsub: s.unsub
                      };
                  });
              }) ]) ]), React_DOM.div([ Lib_React.cn("col-md-5 col-lg-3 mb-3") ])([ React_DOM.label([ React_DOM_Props.htmlFor("buildingFrom") ])([ React_DOM.text(props.keyText("key.building")) ]), React_DOM.input([ React_DOM_Props["_type"]("text"), Lib_React.cn("form-control"), React_DOM_Props["_id"]("buildingFrom"), React_DOM_Props.required(true), React_DOM_Props.value(state.from.building), Lib_React.onChangeValue(function (v) {
                  return React.modifyState($$this)(function (s) {
                      return {
                          firstName: s.firstName,
                          lastName: s.lastName,
                          phone: s.phone,
                          tpe: s.tpe,
                          date: s.date,
                          from: {
                              country: s.from.country,
                              city: s.from.city,
                              street: s.from.street,
                              building: v
                          },
                          to: s.to,
                          "await": s["await"],
                          mapQ: s.mapQ,
                          routeId: s.routeId,
                          unsub: s.unsub
                      };
                  });
              }) ]) ]) ]), React_DOM.h6([ Lib_React.cn("d-flex justify-content-center") ])([ React_DOM.text(props.keyText("key.route_end")) ]), React_DOM.div([ Lib_React.cn("d-flex justify-content-center form-row") ])([ React_DOM.div([ Lib_React.cn("col-md-5 col-lg-3 mb-3") ])([ React_DOM.label([ React_DOM_Props.htmlFor("countryTo") ])([ React_DOM.text(props.keyText("key.country")) ]), React_DOM.input([ React_DOM_Props["_type"]("text"), Lib_React.cn("form-control"), React_DOM_Props["_id"]("countryTo"), React_DOM_Props.required(true), React_DOM_Props.value(state.to.country), Lib_React.onChangeValue(function (v) {
                  return React.modifyState($$this)(function (s) {
                      return {
                          firstName: s.firstName,
                          lastName: s.lastName,
                          phone: s.phone,
                          tpe: s.tpe,
                          date: s.date,
                          from: s.from,
                          to: {
                              country: v,
                              city: s.to.city,
                              street: s.to.street,
                              building: s.to.building
                          },
                          "await": s["await"],
                          mapQ: s.mapQ,
                          routeId: s.routeId,
                          unsub: s.unsub
                      };
                  });
              }) ]) ]), React_DOM.div([ Lib_React.cn("col-md-5 col-lg-3 mb-3") ])([ React_DOM.label([ React_DOM_Props.htmlFor("cityTo") ])([ React_DOM.text(props.keyText("key.city")) ]), React_DOM.input([ React_DOM_Props["_type"]("text"), Lib_React.cn("form-control"), React_DOM_Props["_id"]("cityTo"), React_DOM_Props.required(true), React_DOM_Props.value(state.to.city), Lib_React.onChangeValue(function (v) {
                  return React.modifyState($$this)(function (s) {
                      return {
                          firstName: s.firstName,
                          lastName: s.lastName,
                          phone: s.phone,
                          tpe: s.tpe,
                          date: s.date,
                          from: s.from,
                          to: {
                              country: s.to.country,
                              city: v,
                              street: s.to.street,
                              building: s.to.building
                          },
                          "await": s["await"],
                          mapQ: s.mapQ,
                          routeId: s.routeId,
                          unsub: s.unsub
                      };
                  });
              }) ]) ]), React_DOM.div([ Lib_React.cn("col-md-5 col-lg-3 mb-3") ])([ React_DOM.label([ React_DOM_Props.htmlFor("streetTo") ])([ React_DOM.text(props.keyText("key.street")) ]), React_DOM.input([ React_DOM_Props["_type"]("text"), Lib_React.cn("form-control"), React_DOM_Props["_id"]("streetTo"), React_DOM_Props.required(true), React_DOM_Props.value(state.to.street), Lib_React.onChangeValue(function (v) {
                  return React.modifyState($$this)(function (s) {
                      return {
                          firstName: s.firstName,
                          lastName: s.lastName,
                          phone: s.phone,
                          tpe: s.tpe,
                          date: s.date,
                          from: s.from,
                          to: {
                              country: s.to.country,
                              city: s.to.city,
                              street: v,
                              building: s.to.building
                          },
                          "await": s["await"],
                          mapQ: s.mapQ,
                          routeId: s.routeId,
                          unsub: s.unsub
                      };
                  });
              }) ]) ]), React_DOM.div([ Lib_React.cn("col-md-5 col-lg-3 mb-3") ])([ React_DOM.label([ React_DOM_Props.htmlFor("houseTo") ])([ React_DOM.text(props.keyText("key.building")) ]), React_DOM.input([ React_DOM_Props["_type"]("text"), Lib_React.cn("form-control"), React_DOM_Props["_id"]("houseTo"), React_DOM_Props.required(true), React_DOM_Props.value(state.to.building), Lib_React.onChangeValue(function (v) {
                  return React.modifyState($$this)(function (s) {
                      return {
                          firstName: s.firstName,
                          lastName: s.lastName,
                          phone: s.phone,
                          tpe: s.tpe,
                          date: s.date,
                          from: s.from,
                          to: {
                              country: s.to.country,
                              city: s.to.city,
                              street: s.to.street,
                              building: v
                          },
                          "await": s["await"],
                          mapQ: s.mapQ,
                          routeId: s.routeId,
                          unsub: s.unsub
                      };
                  });
              }) ]) ]) ]), React_DOM.button([ Lib_React.cn("btn btn-outline-secondary mb-3"), React_DOM_Props["_type"]("button"), React_DOM_Props.onClick(function (v) {
                  return updateMap($$this);
              }) ])([ React_DOM.text(props.keyText("key.overview_route")) ]), (function () {
                  if (state.mapQ instanceof Data_Maybe.Just) {
                      return React_DOM.div([ Lib_React.cn("form-row") ])([ React_DOM.div([ Lib_React.cn("col-md-12 mb-3") ])([ React_DOM.iframe([ React_DOM_Props.width("100%"), React_DOM_Props.height("400"), React_DOM_Props.frameBorder("0"), React_DOM_Props.src(state.mapQ.value0) ])([  ]) ]) ]);
                  };
                  if (state.mapQ instanceof Data_Maybe.Nothing) {
                      return Data_Monoid.mempty(React.monoidReactElement);
                  };
                  throw new Error("Failed pattern match at App.Rider (line 232, column 9 - line 240, column 28): " + [ state.mapQ.constructor.name ]);
              })(), React_DOM.div([ Lib_React.cn("form-group") ])([ React_DOM.div([ Lib_React.cn("form-check") ])([ React_DOM.input([ React_DOM_Props["_type"]("checkbox"), Lib_React.cn("form-check-input"), React_DOM_Props["_id"]("agree_terms") ]), React_DOM.label([ React_DOM_Props.htmlFor("agree_terms"), Lib_React.cn("form-check-label") ])([ React_DOM.text(props.keyText("key.agree_terms")) ]) ]), React_DOM.div([ Lib_React.cn("form-check") ])([ React_DOM.input([ React_DOM_Props["_type"]("checkbox"), Lib_React.cn("form-check-input"), React_DOM_Props["_id"]("agree_rules") ]), React_DOM.label([ React_DOM_Props.htmlFor("agree_rules"), Lib_React.cn("form-check-label") ])([ React_DOM.text(props.keyText("key.agree_rules")) ]) ]) ]), React_DOM.div([ Lib_React.cn("alert alert-info col-md-12") ])([ React_DOM.text(props.keyText("key.add.hint")) ]), (function () {
                  if (state.routeId instanceof Data_Maybe.Just) {
                      return React_DOM.div([ Lib_React.cn("alert alert-success") ])([ React_DOM.text(props.keyText("key.add.success") + (" " + state.routeId.value0)) ]);
                  };
                  if (state.routeId instanceof Data_Maybe.Nothing) {
                      return React_DOM.button([ Lib_React.cn("btn btn-primary mb-3"), React_DOM_Props["_type"]("button"), React_DOM_Props.disabled(state["await"]), React_DOM_Props.onClick(function (v) {
                          return sendPassenger($$this);
                      }) ])([ React_DOM.text(props.keyText("key.add")), (function () {
                          if (state["await"]) {
                              return React_DOM.div([ Lib_React.cn("spinner-border text-light spinner-border-sm ml-1") ])([  ]);
                          };
                          return Data_Monoid.mempty(React.monoidReactElement);
                      })() ]);
                  };
                  throw new Error("Failed pattern match at App.Rider (line 252, column 9 - line 262, column 14): " + [ state.routeId.constructor.name ]);
              })() ]);
          };
      };
      var onMsg = function ($$this) {
          return function (v) {
              if (v instanceof Data_Maybe.Just && v.value0 instanceof Api_Push.AddRouteOk) {
                  return React.modifyState($$this)(function (v1) {
                      return {
                          mapQ: v1.mapQ,
                          routeId: new Data_Maybe.Just(v.value0.value0.id),
                          firstName: v1.firstName,
                          lastName: v1.lastName,
                          phone: v1.phone,
                          date: v1.date,
                          tpe: v1.tpe,
                          from: v1.from,
                          to: v1.to,
                          "await": v1["await"],
                          unsub: v1.unsub
                      };
                  });
              };
              return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
          };
      };
      return React.component()("Rider")(function ($$this) {
          return function __do() {
              var date = Data_JSDate.now();
              var props = React.getProps($$this)();
              return {
                  state: {
                      mapQ: Data_Maybe.Nothing.value,
                      routeId: Data_Maybe.Nothing.value,
                      firstName: Data_Maybe.fromMaybe("")(Control_Bind.bind(Data_Maybe.bindMaybe)(props.user)(function (v) {
                          return v.firstName;
                      })),
                      lastName: Data_Maybe.fromMaybe("")(Control_Bind.bind(Data_Maybe.bindMaybe)(props.user)(function (v) {
                          return v.lastName;
                      })),
                      phone: Data_Maybe.fromMaybe("")(Control_Bind.bind(Data_Maybe.bindMaybe)(props.user)(function (v) {
                          return v.phone;
                      })),
                      date: date,
                      tpe: Data_Maybe.fromMaybe(Api.Medical.value)(Control_Bind.bind(Data_Maybe.bindMaybe)(props.user)(function (v) {
                          return v.tpe;
                      })),
                      from: {
                          country: "\u0423\u043a\u0440\u0430\u0438\u043d\u0430",
                          city: "\u041a\u0438\u0435\u0432",
                          street: "\u0421\u043f\u043e\u0440\u0442\u0438\u0432\u043d\u0430\u044f",
                          building: "1"
                      },
                      to: {
                          country: "\u0423\u043a\u0440\u0430\u0438\u043d\u0430",
                          city: "\u041a\u0438\u0435\u0432",
                          street: "\u041b\u044c\u0432\u0430 \u0422\u043e\u043b\u0441\u0442\u043e\u0433\u043e",
                          building: "1"
                      },
                      "await": false,
                      unsub: Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit)
                  },
                  render: render($$this),
                  componentDidMount: function __do() {
                      var unsub = Lib_WebSocket.sub(props.ws)(onMsg($$this))();
                      return React.modifyState($$this)(function (v) {
                          return {
                              firstName: v.firstName,
                              lastName: v.lastName,
                              phone: v.phone,
                              tpe: v.tpe,
                              date: v.date,
                              from: v.from,
                              to: v.to,
                              "await": v["await"],
                              mapQ: v.mapQ,
                              routeId: v.routeId,
                              unsub: unsub
                          };
                      })();
                  },
                  componentWillUnmount: function __do() {
                      var v = React.getState($$this)();
                      return v.unsub();
                  }
              };
          };
      });
  })();
  exports["riderClass"] = riderClass;
})(PS);
(function(exports) {
  'use strict';

  exports.preventDefault = function preventDefault(event) {
    return function() {
      return event.preventDefault();
    };
  };
})(PS["React.SyntheticEvent"] = PS["React.SyntheticEvent"] || {});
(function($PS) {
  "use strict";
  $PS["React.SyntheticEvent"] = $PS["React.SyntheticEvent"] || {};
  var exports = $PS["React.SyntheticEvent"];
  var $foreign = $PS["React.SyntheticEvent"];
  exports["preventDefault"] = $foreign.preventDefault;
})(PS);
(function($PS) {
  "use strict";
  $PS["App.Add"] = $PS["App.Add"] || {};
  var exports = $PS["App.Add"];
  var App_Driver = $PS["App.Driver"];
  var App_Rider = $PS["App.Rider"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Lib_React = $PS["Lib.React"];
  var React = $PS["React"];
  var React_DOM = $PS["React.DOM"];
  var React_DOM_Props = $PS["React.DOM.Props"];
  var React_SyntheticEvent = $PS["React.SyntheticEvent"];                
  var AddD = (function () {
      function AddD() {

      };
      AddD.value = new AddD();
      return AddD;
  })();
  var AddR = (function () {
      function AddR() {

      };
      AddR.value = new AddR();
      return AddR;
  })();
  var tabKey = function (v) {
      if (v instanceof AddD) {
          return "key.driver";
      };
      if (v instanceof AddR) {
          return "key.passenger";
      };
      throw new Error("Failed pattern match at App.Add (line 34, column 1 - line 34, column 24): " + [ v.constructor.name ]);
  };
  var eqTab = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof AddD && y instanceof AddD) {
              return true;
          };
          if (x instanceof AddR && y instanceof AddR) {
              return true;
          };
          return false;
      };
  });
  var addClass = (function () {
      var render = function ($$this) {
          return function __do() {
              var props = React.getProps($$this)();
              var state = React.getState($$this)();
              return React_DOM.div([  ])([ React_DOM.ul([ Lib_React.cn("nav nav-pills nav-pills-primary justify-content-center mb-3") ])(Data_Functor.map(Data_Functor.functorArray)(function (t) {
                  return React_DOM.li([  ])([ React_DOM.a([ Lib_React.cn("nav-link" + (function () {
                      var $8 = Data_Eq.eq(eqTab)(t)(state.tab);
                      if ($8) {
                          return " active";
                      };
                      return "";
                  })()), React_DOM_Props.href("#"), React_DOM_Props.onClick(function (e) {
                      return function __do() {
                          var v = React_SyntheticEvent.preventDefault(e)();
                          return React.modifyState($$this)(function (v1) {
                              var $9 = {};
                              for (var $10 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $10)) {
                                      $9[$10] = v1[$10];
                                  };
                              };
                              $9.tab = t;
                              return $9;
                          })();
                      };
                  }) ])([ React_DOM.text(props.keyText(tabKey(t))) ]) ]);
              })([ AddD.value, AddR.value ])), (function () {
                  if (state.tab instanceof AddD) {
                      return React.createLeafElement()(App_Driver.driverClass)(props);
                  };
                  if (state.tab instanceof AddR) {
                      return React.createLeafElement()(App_Rider.riderClass)(props);
                  };
                  throw new Error("Failed pattern match at App.Add (line 62, column 9 - line 64, column 53): " + [ state.tab.constructor.name ]);
              })() ]);
          };
      };
      return React.component()("Add")(function ($$this) {
          return function __do() {
              var props = React.getProps($$this)();
              return {
                  state: {
                      tab: AddD.value
                  },
                  render: render($$this)
              };
          };
      });
  })();
  exports["addClass"] = addClass;
})(PS);
(function(exports) {
  "use strict";

  exports.telegramLoginWidget = function(id) {
    return function(f) {
      return function() {
        window["telegramLoginF"] = f
        var element = document.createElement('script');
        element.setAttribute('async', '');
        element.setAttribute('src', 'https://telegram.org/js/telegram-widget.js?8');
        element.setAttribute('data-telegram-login', 'CryptoCalcBitBot');
        element.setAttribute('data-size', 'large');
        element.setAttribute('data-onauth', 'telegramLoginF(user)()');
        element.setAttribute('data-request-access', 'write');

        var el = document.getElementById(id)
        if (el) {
          el.appendChild(element);
        }
        return{}
      }
    }
  }
})(PS["App.Home"] = PS["App.Home"] || {});
(function(exports) {
  "use strict";

  exports.unsafeReadPropImpl = function (f, s, key, value) {
    return value == null ? f : s(value[key]);
  };

  exports.unsafeHasOwnProperty = function (prop, value) {
    return Object.prototype.hasOwnProperty.call(value, prop);
  };

  exports.unsafeHasProperty = function (prop, value) {
    return prop in value;
  };
})(PS["Foreign.Index"] = PS["Foreign.Index"] || {});
(function($PS) {
  "use strict";
  $PS["Foreign.Index"] = $PS["Foreign.Index"] || {};
  var exports = $PS["Foreign.Index"];
  var $foreign = $PS["Foreign.Index"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Function = $PS["Data.Function"];
  var Data_Identity = $PS["Data.Identity"];
  var Foreign = $PS["Foreign"];                
  var Indexable = function (ix) {
      this.ix = ix;
  };
  var Index = function (errorAt, hasOwnProperty, hasProperty, index) {
      this.errorAt = errorAt;
      this.hasOwnProperty = hasOwnProperty;
      this.hasProperty = hasProperty;
      this.index = index;
  };
  var unsafeReadProp = function (k) {
      return function (value) {
          return $foreign.unsafeReadPropImpl(Foreign.fail(new Foreign.TypeMismatch("object", Foreign.typeOf(value))), Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)), k, value);
      };
  };
  var readProp = unsafeReadProp; 
  var ix = function (dict) {
      return dict.ix;
  };
  var index = function (dict) {
      return dict.index;
  }; 
  var indexableForeign = new Indexable(function (dictIndex) {
      return index(dictIndex);
  });
  var hasPropertyImpl = function (v) {
      return function (value) {
          if (Foreign.isNull(value)) {
              return false;
          };
          if (Foreign.isUndefined(value)) {
              return false;
          };
          if (Foreign.typeOf(value) === "object" || Foreign.typeOf(value) === "function") {
              return $foreign.unsafeHasProperty(v, value);
          };
          return false;
      };
  };
  var hasOwnPropertyImpl = function (v) {
      return function (value) {
          if (Foreign.isNull(value)) {
              return false;
          };
          if (Foreign.isUndefined(value)) {
              return false;
          };
          if (Foreign.typeOf(value) === "object" || Foreign.typeOf(value) === "function") {
              return $foreign.unsafeHasOwnProperty(v, value);
          };
          return false;
      };
  };                                                                                                                        
  var indexString = new Index(Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl, Data_Function.flip(readProp));
  exports["ix"] = ix;
  exports["indexString"] = indexString;
  exports["indexableForeign"] = indexableForeign;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeKeys = Object.keys || function (value) {
    var keys = [];
    for (var prop in value) {
      if (Object.prototype.hasOwnProperty.call(value, prop)) {
        keys.push(prop);
      }
    }
    return keys;
  };
})(PS["Foreign.Keys"] = PS["Foreign.Keys"] || {});
(function($PS) {
  "use strict";
  $PS["Foreign.Keys"] = $PS["Foreign.Keys"] || {};
  var exports = $PS["Foreign.Keys"];
  var $foreign = $PS["Foreign.Keys"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Identity = $PS["Data.Identity"];
  var Foreign = $PS["Foreign"];                
  var keys = function (value) {
      if (Foreign.isNull(value)) {
          return Foreign.fail(new Foreign.TypeMismatch("object", "null"));
      };
      if (Foreign.isUndefined(value)) {
          return Foreign.fail(new Foreign.TypeMismatch("object", "undefined"));
      };
      if (Foreign.typeOf(value) === "object") {
          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeKeys(value));
      };
      if (Data_Boolean.otherwise) {
          return Foreign.fail(new Foreign.TypeMismatch("object", Foreign.typeOf(value)));
      };
      throw new Error("Failed pattern match at Foreign.Keys (line 15, column 1 - line 15, column 36): " + [ value.constructor.name ]);
  };
  exports["keys"] = keys;
})(PS);
(function($PS) {
  "use strict";
  $PS["App.Home"] = $PS["App.Home"] || {};
  var exports = $PS["App.Home"];
  var $foreign = $PS["App.Home"];
  var Ajax = $PS["Ajax"];
  var Api_Pull = $PS["Api.Pull"];
  var Api_Push = $PS["Api.Push"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Show = $PS["Data.Show"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Console = $PS["Effect.Console"];
  var Foreign = $PS["Foreign"];
  var Foreign_Index = $PS["Foreign.Index"];
  var Foreign_Keys = $PS["Foreign.Keys"];
  var Lib_React = $PS["Lib.React"];
  var Proto_Decode = $PS["Proto.Decode"];
  var React = $PS["React"];
  var React_DOM = $PS["React.DOM"];
  var React_DOM_Props = $PS["React.DOM.Props"];                
  var login = function ($$await) {
      return function (err) {
          return function (ok) {
              return function (user) {
                  var f = function (x) {
                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Foreign_Keys.keys(x))(function (keys$prime) {
                          return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Functor.map(Data_Functor.functorArray)(function (k) {
                              return Data_Functor.mapFlipped(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Foreign_Index.ix(Foreign_Index.indexableForeign)(Foreign_Index.indexString)(x)(k))(function (v) {
                                  return new Data_Tuple.Tuple(k, v);
                              });
                          })(keys$prime)))(function (xs) {
                              return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(Data_Array.mapMaybe(function (v) {
                                  var v2 = Foreign.typeOf(v.value1);
                                  if (v2 === "string") {
                                      return Data_Maybe.Just.create(Data_Functor.mapFlipped(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Foreign.readString(v.value1))(function (s) {
                                          return new Api_Pull.TelegramString({
                                              key: v.value0,
                                              value: s
                                          });
                                      }));
                                  };
                                  if (v2 === "number") {
                                      return Data_Maybe.Just.create(Data_Functor.mapFlipped(Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity))(Foreign.readNumber(v.value1))(function (n) {
                                          return new Api_Pull.TelegramNum({
                                              key: v.value0,
                                              value: n
                                          });
                                      }));
                                  };
                                  return Data_Maybe.Nothing.value;
                              })(xs)))(function (tds) {
                                  return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))(new Api_Pull.TelegramLogin({
                                      d: tds
                                  }));
                              });
                          });
                      });
                  };
                  return function __do() {
                      $$await();
                      var v = Control_Monad_Except.runExcept(f(user));
                      if (v instanceof Data_Either.Left) {
                          var v1 = Effect_Console.error(Data_Show.show(Data_List_Types.showNonEmptyList(Foreign.showForeignError))(v.value0))();
                          return err();
                      };
                      if (v instanceof Data_Either.Right) {
                          return Ajax.postEff("/login")(Api_Pull.encodePull(v.value0))(function (v1) {
                              return err;
                          })(function (x) {
                              var v1 = Api_Push.decodePush(x);
                              if (v1 instanceof Data_Either.Left) {
                                  return function __do() {
                                      var v2 = Effect_Console.error(Data_Show.show(Proto_Decode.showError)(v1.value0))();
                                      return err();
                                  };
                              };
                              if (v1 instanceof Data_Either.Right && v1.value0.val instanceof Api_Push.LoginOk) {
                                  return ok;
                              };
                              if (v1 instanceof Data_Either.Right && v1.value0.val instanceof Api_Push.LoginErr) {
                                  return err;
                              };
                              if (v1 instanceof Data_Either.Right) {
                                  return err;
                              };
                              throw new Error("Failed pattern match at App.Home (line 97, column 15 - line 101, column 25): " + [ v1.constructor.name ]);
                          })();
                      };
                      throw new Error("Failed pattern match at App.Home (line 91, column 3 - line 102, column 8): " + [ v.constructor.name ]);
                  };
              };
          };
      };
  };
  var homeClass = (function () {
      var render = function ($$this) {
          return function __do() {
              var props = React.getProps($$this)();
              var state = React.getState($$this)();
              return React_DOM.div([  ])([ React_DOM.div([ Lib_React.cn("d-flex justify-content-center mb-3") ])([ React_DOM.h6([  ])([ React_DOM.text(props.keyText("key.home.head")) ]) ]), React_DOM.div([ Lib_React.cn("d-flex justify-content-center mb-3") ])([ React_DOM.span([  ])([ React_DOM.text(props.keyText("key.home.text")) ]) ]), React_DOM.div([ Lib_React.cn((function () {
                  var $27 = Data_Maybe.isJust(props.user);
                  if ($27) {
                      return "d-none";
                  };
                  return "";
              })()) ])([ (function () {
                  if (state.err) {
                      return React_DOM.div([ Lib_React.cn("d-flex justify-content-center") ])([ React_DOM.div([ Lib_React.cn("alert alert-danger d-inline-block") ])([ React_DOM.text(props.keyText("key.err")) ]) ]);
                  };
                  return Data_Monoid.mempty(React.monoidReactElement);
              })(), React_DOM.div([ Lib_React.cn("d-flex justify-content-center mb-3"), React_DOM_Props["_id"]("login-widget") ])([  ]), React_DOM.div([ Lib_React.cn("d-flex justify-content-center mb-3") ])([ React_DOM.div([ Lib_React.cn("alert alert-info") ])([ React_DOM.text(props.keyText("key.home.login.hint")) ]) ]) ]) ]);
          };
      };
      return React.component()("Home")(function ($$this) {
          return function __do() {
              var props = React.getProps($$this)();
              return {
                  state: {
                      err: false
                  },
                  render: render($$this),
                  componentDidMount: function __do() {
                      var p = React.getProps($$this)();
                      if (p.user instanceof Data_Maybe.Nothing) {
                          return $foreign.telegramLoginWidget("login-widget")(login(function __do() {
                              var v = React.modifyState($$this)(function (v) {
                                  var $30 = {};
                                  for (var $31 in v) {
                                      if ({}.hasOwnProperty.call(v, $31)) {
                                          $30[$31] = v[$31];
                                      };
                                  };
                                  $30.err = false;
                                  return $30;
                              })();
                              return p["await"]();
                          })(function __do() {
                              var v = React.modifyState($$this)(function (v) {
                                  var $33 = {};
                                  for (var $34 in v) {
                                      if ({}.hasOwnProperty.call(v, $34)) {
                                          $33[$34] = v[$34];
                                      };
                                  };
                                  $33.err = true;
                                  return $33;
                              })();
                              return p.err();
                          })(function __do() {
                              var v = React.modifyState($$this)(function (v) {
                                  var $36 = {};
                                  for (var $37 in v) {
                                      if ({}.hasOwnProperty.call(v, $37)) {
                                          $36[$37] = v[$37];
                                      };
                                  };
                                  $36.err = false;
                                  return $36;
                              })();
                              return p.ok();
                          }))();
                      };
                      if (p.user instanceof Data_Maybe.Just) {
                          return Data_Unit.unit;
                      };
                      throw new Error("Failed pattern match at App.Home (line 50, column 9 - line 56, column 30): " + [ p.user.constructor.name ]);
                  }
              };
          };
      });
  })();
  exports["homeClass"] = homeClass;
})(PS);
(function($PS) {
  "use strict";
  $PS["App.View.Drivers"] = $PS["App.View.Drivers"] || {};
  var exports = $PS["App.View.Drivers"];
  var Api_Pull = $PS["Api.Pull"];
  var Api_Push = $PS["Api.Push"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Array = $PS["Data.Array"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_JSDate = $PS["Data.JSDate"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Unit = $PS["Data.Unit"];
  var Datepicker = $PS["Datepicker"];
  var Effect = $PS["Effect"];
  var Lib_React = $PS["Lib.React"];
  var Lib_WebSocket = $PS["Lib.WebSocket"];
  var React = $PS["React"];
  var React_DOM = $PS["React.DOM"];
  var React_DOM_Props = $PS["React.DOM.Props"];                
  var driversClass = (function () {
      var onMsg = function ($$this) {
          return function (v) {
              if (v instanceof Data_Maybe.Just && v.value0 instanceof Api_Push.FreeDrivers) {
                  return React.modifyState($$this)(function (v1) {
                      return {
                          date: v1.date,
                          drivers: v.value0.value0.freeDrivers,
                          showItem: v1.showItem,
                          unsub: v1.unsub
                      };
                  });
              };
              return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
          };
      };
      var fetchDrivers = function ($$this) {
          return function __do() {
              var p = React.getProps($$this)();
              var s = React.getState($$this)();
              return Lib_WebSocket.snd(p.ws)(new Api_Pull.GetFreeDrivers({
                  date: Data_JSDate.getTime(s.date)
              }))();
          };
      };
      var driversList = function ($$this) {
          return function __do() {
              var state = React.getState($$this)();
              var props = React.getProps($$this)();
              return Data_Functor.map(Effect.functorEffect)(React_DOM.div([ Lib_React.cn("list-group d-flex flex-column justify-content-center") ]))(Data_Functor.map(Effect.functorEffect)(Data_Array.catMaybes)(Data_Traversable.sequence(Data_Traversable.traversableArray)(Effect.applicativeEffect)(Data_Functor.map(Data_Functor.functorArray)(function (di) {
                  return function __do() {
                      var t = Datepicker.toLocaleTimeString(Data_JSDate.fromTime(di.date))();
                      return Data_Functor.mapFlipped(Data_Maybe.functorMaybe)(Data_Array.head(di.routes))(function (route) {
                          return React_DOM.div([ Lib_React.cn("list-group-item"), React_DOM_Props.key(di.id) ])([ React_DOM.div([ Lib_React.cn("d-flex flex-row") ])([ React_DOM.div([ Lib_React.cn("mr-3") ])([ React_DOM.small([ Lib_React.cn("d-block") ])([ React_DOM.text(route.fromAddress) ]), React_DOM.small([ Lib_React.cn("d-block") ])([ React_DOM.text(route.toAddress) ]) ]), React_DOM.div([  ])([ React_DOM.small([ Lib_React.cn("d-block") ])([ React_DOM.text(t) ]), React_DOM.small([ Lib_React.cn("d-block") ])([ React_DOM.a([ React_DOM_Props.href("#"), React_DOM_Props.onClick(function (v) {
                              return React.modifyState($$this)(function (v1) {
                                  return {
                                      date: v1.date,
                                      drivers: v1.drivers,
                                      showItem: di.id,
                                      unsub: v1.unsub
                                  };
                              });
                          }) ])([ React_DOM.text(props.keyText("key.show_map")) ]) ]) ]) ]), (function () {
                              var $12 = state.showItem === di.id;
                              if ($12) {
                                  var q = "https://www.google.com/maps/embed/v1/directions" + ("?origin=" + (route.fromAddress + ("&destination=" + (route.toAddress + ("&key=" + "AIzaSyAuq2lMfK8JPYK4-zYYw9Bl8SeTQrKJJeY")))));
                                  return React_DOM.iframe([ React_DOM_Props.width("100%"), React_DOM_Props.height("400"), React_DOM_Props.frameBorder("0"), React_DOM_Props.src(q) ])([  ]);
                              };
                              return Data_Monoid.mempty(React.monoidReactElement);
                          })() ]);
                      });
                  };
              })(state.drivers))))();
          };
      };
      var render = function ($$this) {
          return function __do() {
              var props = React.getProps($$this)();
              var state = React.getState($$this)();
              var dl = driversList($$this)();
              return React_DOM.div([  ])([ React_DOM.div([ Lib_React.cn("d-flex justify-content-center row mb-3") ])([ React.createLeafElement()(Datepicker.datepickerClass)({
                  onChange: function (d) {
                      return React.modifyState($$this)(function (v) {
                          return {
                              date: d,
                              drivers: v.drivers,
                              showItem: v.showItem,
                              unsub: v.unsub
                          };
                      });
                  },
                  lang: props.lang,
                  showTime: false,
                  className: "form-control",
                  wrapperClassName: "form-control col-6 col-sm-5 col-md-4 col-lg-3 mr-2",
                  "_id": "date",
                  keyText: props.keyText
              }), React_DOM.button([ Lib_React.cn("btn btn-outline-secondary"), React_DOM_Props["_type"]("button"), React_DOM_Props.onClick(function (v) {
                  return fetchDrivers($$this);
              }) ])([ React_DOM.text(props.keyText("key.search")) ]) ]), dl ]);
          };
      };
      return React.component()("View.Drivers")(function ($$this) {
          return function __do() {
              var date = Data_JSDate.now();
              var props = React.getProps($$this)();
              return {
                  state: {
                      date: date,
                      drivers: [  ],
                      showItem: "",
                      unsub: Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit)
                  },
                  render: render($$this),
                  componentDidMount: function __do() {
                      fetchDrivers($$this)();
                      var unsub = Lib_WebSocket.sub(props.ws)(onMsg($$this))();
                      return React.modifyState($$this)(function (v) {
                          return {
                              date: v.date,
                              drivers: v.drivers,
                              showItem: v.showItem,
                              unsub: unsub
                          };
                      })();
                  },
                  componentWillUnmount: function __do() {
                      var v = React.getState($$this)();
                      return v.unsub();
                  }
              };
          };
      });
  })();
  exports["driversClass"] = driversClass;
})(PS);
(function($PS) {
  "use strict";
  $PS["App.View.Riders"] = $PS["App.View.Riders"] || {};
  var exports = $PS["App.View.Riders"];
  var Api_Pull = $PS["Api.Pull"];
  var Api_Push = $PS["Api.Push"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_JSDate = $PS["Data.JSDate"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Unit = $PS["Data.Unit"];
  var Datepicker = $PS["Datepicker"];
  var Effect = $PS["Effect"];
  var Lib_React = $PS["Lib.React"];
  var Lib_WebSocket = $PS["Lib.WebSocket"];
  var React = $PS["React"];
  var React_DOM = $PS["React.DOM"];
  var React_DOM_Props = $PS["React.DOM.Props"];                
  var ridersClass = (function () {
      var passengersList = function ($$this) {
          return function __do() {
              var state = React.getState($$this)();
              var props = React.getProps($$this)();
              return Data_Functor.map(Effect.functorEffect)(React_DOM.div([ Lib_React.cn("list-group d-flex flex-column justify-content-center") ]))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Effect.applicativeEffect)(Data_Functor.map(Data_Functor.functorArray)(function (pi) {
                  return function __do() {
                      var t = Datepicker.toLocaleTimeString(Data_JSDate.fromTime(pi.date))();
                      return React_DOM.div([ Lib_React.cn("list-group-item"), React_DOM_Props.key(pi.id) ])([ React_DOM.div([ Lib_React.cn("d-flex flex-row") ])([ React_DOM.div([ Lib_React.cn("mr-3") ])([ React_DOM.small([ Lib_React.cn("d-block") ])([ React_DOM.text(pi.fromAddress) ]), React_DOM.small([ Lib_React.cn("d-block") ])([ React_DOM.text(pi.toAddress) ]) ]), React_DOM.div([  ])([ React_DOM.small([ Lib_React.cn("d-block") ])([ React_DOM.text(t) ]), React_DOM.small([ Lib_React.cn("d-block") ])([ React_DOM.a([ React_DOM_Props.href("#"), React_DOM_Props.onClick(function (v) {
                          return React.modifyState($$this)(function (v1) {
                              return {
                                  date: v1.date,
                                  passengers: v1.passengers,
                                  showItem: pi.id,
                                  unsub: v1.unsub
                              };
                          });
                      }) ])([ React_DOM.text(props.keyText("key.show_map")) ]) ]) ]) ]), (function () {
                          var $8 = state.showItem === pi.id;
                          if ($8) {
                              var q = "https://www.google.com/maps/embed/v1/directions" + ("?origin=" + (pi.fromAddress + ("&destination=" + (pi.toAddress + ("&key=" + "AIzaSyAuq2lMfK8JPYK4-zYYw9Bl8SeTQrKJJeY")))));
                              return React_DOM.iframe([ React_DOM_Props.width("100%"), React_DOM_Props.height("400"), React_DOM_Props.frameBorder("0"), React_DOM_Props.src(q) ])([  ]);
                          };
                          return Data_Monoid.mempty(React.monoidReactElement);
                      })() ]);
                  };
              })(state.passengers)))();
          };
      };
      var onMsg = function ($$this) {
          return function (v) {
              if (v instanceof Data_Maybe.Just && v.value0 instanceof Api_Push.FreePassengers) {
                  return React.modifyState($$this)(function (v1) {
                      return {
                          date: v1.date,
                          passengers: v.value0.value0.freePassengers,
                          showItem: v1.showItem,
                          unsub: v1.unsub
                      };
                  });
              };
              return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
          };
      };
      var fetchPassengers = function ($$this) {
          return function __do() {
              var p = React.getProps($$this)();
              var s = React.getState($$this)();
              return Lib_WebSocket.snd(p.ws)(new Api_Pull.GetFreePassengers({
                  date: Data_JSDate.getTime(s.date)
              }))();
          };
      };
      var render = function ($$this) {
          return function __do() {
              var props = React.getProps($$this)();
              var state = React.getState($$this)();
              var dl = passengersList($$this)();
              return React_DOM.div([  ])([ React_DOM.div([ Lib_React.cn("d-flex justify-content-center mb-3") ])([ React.createLeafElement()(Datepicker.datepickerClass)({
                  onChange: function (d) {
                      return React.modifyState($$this)(function (v) {
                          return {
                              date: d,
                              passengers: v.passengers,
                              showItem: v.showItem,
                              unsub: v.unsub
                          };
                      });
                  },
                  lang: props.lang,
                  showTime: false,
                  className: "form-control",
                  wrapperClassName: "form-control col-6 col-sm-5 col-md-4 col-lg-3 mr-2",
                  "_id": "date",
                  keyText: props.keyText
              }), React_DOM.button([ Lib_React.cn("btn btn-outline-secondary"), React_DOM_Props["_type"]("button"), React_DOM_Props.onClick(function (v) {
                  return fetchPassengers($$this);
              }) ])([ React_DOM.text(props.keyText("key.search")) ]) ]), dl ]);
          };
      };
      return React.component()("View.Passengers")(function ($$this) {
          return function __do() {
              var date = Data_JSDate.now();
              var props = React.getProps($$this)();
              return {
                  state: {
                      date: date,
                      passengers: [  ],
                      showItem: "",
                      unsub: Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit)
                  },
                  render: render($$this),
                  componentDidMount: function __do() {
                      fetchPassengers($$this)();
                      var unsub = Lib_WebSocket.sub(props.ws)(onMsg($$this))();
                      return React.modifyState($$this)(function (v) {
                          return {
                              date: v.date,
                              passengers: v.passengers,
                              showItem: v.showItem,
                              unsub: unsub
                          };
                      })();
                  },
                  componentWillUnmount: function __do() {
                      var v = React.getState($$this)();
                      return v.unsub();
                  }
              };
          };
      });
  })();
  exports["ridersClass"] = ridersClass;
})(PS);
(function($PS) {
  "use strict";
  $PS["App.View"] = $PS["App.View"] || {};
  var exports = $PS["App.View"];
  var App_View_Drivers = $PS["App.View.Drivers"];
  var App_View_Riders = $PS["App.View.Riders"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect = $PS["Effect"];
  var Lib_React = $PS["Lib.React"];
  var React = $PS["React"];
  var React_DOM = $PS["React.DOM"];
  var React_DOM_Props = $PS["React.DOM.Props"];
  var React_SyntheticEvent = $PS["React.SyntheticEvent"];                
  var ViewD = (function () {
      function ViewD() {

      };
      ViewD.value = new ViewD();
      return ViewD;
  })();
  var ViewP = (function () {
      function ViewP() {

      };
      ViewP.value = new ViewP();
      return ViewP;
  })();
  var tabKey = function (v) {
      if (v instanceof ViewD) {
          return "key.drivers";
      };
      if (v instanceof ViewP) {
          return "key.passengers";
      };
      throw new Error("Failed pattern match at App.View (line 35, column 1 - line 35, column 24): " + [ v.constructor.name ]);
  };
  var eqTab = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof ViewD && y instanceof ViewD) {
              return true;
          };
          if (x instanceof ViewP && y instanceof ViewP) {
              return true;
          };
          return false;
      };
  });
  var viewClass = React.component()("View")(function ($$this) {
      return Control_Applicative.pure(Effect.applicativeEffect)({
          state: {
              tab: ViewD.value
          },
          render: function __do() {
              var props = React.getProps($$this)();
              var state = React.getState($$this)();
              return React_DOM.div([  ])([ React_DOM.ul([ Lib_React.cn("nav nav-pills nav-pills-primary justify-content-center mb-3") ])(Data_Functor.map(Data_Functor.functorArray)(function (t) {
                  return React_DOM.li([  ])([ React_DOM.a([ Lib_React.cn("nav-link" + (function () {
                      var $8 = Data_Eq.eq(eqTab)(t)(state.tab);
                      if ($8) {
                          return " active";
                      };
                      return "";
                  })()), React_DOM_Props.href("#"), React_DOM_Props.onClick(function (e) {
                      return function __do() {
                          var v = React_SyntheticEvent.preventDefault(e)();
                          return React.modifyState($$this)(function (v1) {
                              var $9 = {};
                              for (var $10 in v1) {
                                  if ({}.hasOwnProperty.call(v1, $10)) {
                                      $9[$10] = v1[$10];
                                  };
                              };
                              $9.tab = t;
                              return $9;
                          })();
                      };
                  }) ])([ React_DOM.text(props.keyText(tabKey(t))) ]) ]);
              })([ ViewD.value, ViewP.value ])), (function () {
                  if (state.tab instanceof ViewD) {
                      return React.createLeafElement()(App_View_Drivers.driversClass)(props);
                  };
                  if (state.tab instanceof ViewP) {
                      return React.createLeafElement()(App_View_Riders.ridersClass)(props);
                  };
                  throw new Error("Failed pattern match at App.View (line 57, column 13 - line 59, column 59): " + [ state.tab.constructor.name ]);
              })() ]);
          }
      });
  });
  exports["viewClass"] = viewClass;
})(PS);
(function(exports) {
  /* global exports */
  "use strict";
  var ReactDOM =require("react-dom");
  var ReactDOMServer =require("react-dom/server"); 

  exports.renderImpl = function (element, container) {
    return ReactDOM.render(element, container);
  };
})(PS["ReactDOM"] = PS["ReactDOM"] || {});
(function($PS) {
  "use strict";
  $PS["ReactDOM"] = $PS["ReactDOM"] || {};
  var exports = $PS["ReactDOM"];
  var $foreign = $PS["ReactDOM"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect = $PS["Effect"];                                                                  
  var render = function (rEl) {
      return function (el) {
          return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)(function () {
              return $foreign.renderImpl(rEl, el);
          });
      };
  };
  exports["render"] = render;
})(PS);
(function(exports) {
  "use strict";

  exports._getElementById = function (id) {
    return function (node) {
      return function () {
        return node.getElementById(id);
      };
    };
  };
})(PS["Web.DOM.NonElementParentNode"] = PS["Web.DOM.NonElementParentNode"] || {});
(function($PS) {
  "use strict";
  $PS["Web.DOM.NonElementParentNode"] = $PS["Web.DOM.NonElementParentNode"] || {};
  var exports = $PS["Web.DOM.NonElementParentNode"];
  var $foreign = $PS["Web.DOM.NonElementParentNode"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect = $PS["Effect"];                
  var getElementById = function (eid) {
      var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);
      var $1 = $foreign["_getElementById"](eid);
      return function ($2) {
          return $0($1($2));
      };
  };
  exports["getElementById"] = getElementById;
})(PS);
(function($PS) {
  "use strict";
  $PS["Web.HTML.HTMLDocument"] = $PS["Web.HTML.HTMLDocument"] || {};
  var exports = $PS["Web.HTML.HTMLDocument"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];     
  var toNonElementParentNode = Unsafe_Coerce.unsafeCoerce;
  exports["toNonElementParentNode"] = toNonElementParentNode;
})(PS);
(function($PS) {
  "use strict";
  $PS["App"] = $PS["App"] || {};
  var exports = $PS["App"];
  var Ajax = $PS["Ajax"];
  var Api_Push = $PS["Api.Push"];
  var App_Add = $PS["App.Add"];
  var App_Home = $PS["App.Home"];
  var App_View = $PS["App.View"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Datepicker = $PS["Datepicker"];
  var Effect = $PS["Effect"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Lib_React = $PS["Lib.React"];
  var Lib_WebSocket = $PS["Lib.WebSocket"];
  var React = $PS["React"];
  var React_DOM = $PS["React.DOM"];
  var React_DOM_Props = $PS["React.DOM.Props"];
  var ReactDOM = $PS["ReactDOM"];
  var Web_DOM_NonElementParentNode = $PS["Web.DOM.NonElementParentNode"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_HTMLDocument = $PS["Web.HTML.HTMLDocument"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];                
  var HomeItem = (function () {
      function HomeItem() {

      };
      HomeItem.value = new HomeItem();
      return HomeItem;
  })();
  var ViewItem = (function () {
      function ViewItem() {

      };
      ViewItem.value = new ViewItem();
      return ViewItem;
  })();
  var AddItem = (function () {
      function AddItem() {

      };
      AddItem.value = new AddItem();
      return AddItem;
  })();
  var showMenuItem = new Data_Show.Show(function (v) {
      if (v instanceof HomeItem) {
          return "key.menu.home";
      };
      if (v instanceof ViewItem) {
          return "key.menu.view";
      };
      if (v instanceof AddItem) {
          return "key.menu.add";
      };
      throw new Error("Failed pattern match at App (line 48, column 1 - line 52, column 33): " + [ v.constructor.name ]);
  });
  var eqMenuItem = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof HomeItem && y instanceof HomeItem) {
              return true;
          };
          if (x instanceof ViewItem && y instanceof ViewItem) {
              return true;
          };
          if (x instanceof AddItem && y instanceof AddItem) {
              return true;
          };
          return false;
      };
  });
  var ordMenuItem = new Data_Ord.Ord(function () {
      return eqMenuItem;
  }, function (x) {
      return function (y) {
          if (x instanceof HomeItem && y instanceof HomeItem) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof HomeItem) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof HomeItem) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof ViewItem && y instanceof ViewItem) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof ViewItem) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof ViewItem) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof AddItem && y instanceof AddItem) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at App (line 54, column 1 - line 54, column 44): " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  var appClass = (function () {
      var userIcon = function ($$this) {
          return function __do() {
              var state = React.getState($$this)();
              if (state.user instanceof Data_Maybe.Just && state.user.value0.photo instanceof Data_Maybe.Just) {
                  return React_DOM.li([ Lib_React.cn("avatar") ])([ React_DOM.span([ Lib_React.cn("nav-link p-0") ])([ React_DOM.img([ React_DOM_Props.src(state.user.value0.photo.value0), Lib_React.cn("rounded-circle z-depth-0 mr-1"), React_DOM_Props.height("35") ]), React_DOM.text(Data_Maybe.fromMaybe(state.user.value0.username)(Control_Alt.alt(Data_Maybe.altMaybe)(state.user.value0.firstName)(state.user.value0.lastName))) ]) ]);
              };
              if (state.user instanceof Data_Maybe.Just) {
                  return React_DOM.li([ Lib_React.cn("nav-item") ])([ React_DOM.span([ Lib_React.cn("nav-link") ])([ React_DOM.text(Data_Maybe.fromMaybe(state.user.value0.username)(Control_Alt.alt(Data_Maybe.altMaybe)(state.user.value0.firstName)(state.user.value0.lastName))) ]) ]);
              };
              if (state.user instanceof Data_Maybe.Nothing) {
                  return React_DOM.li([ Lib_React.cn("nav-item") ])([ React_DOM.a([ Lib_React.cn("nav-link"), React_DOM_Props.href("#"), React_DOM_Props.onClick(function (v) {
                      return React.modifyState($$this)(function (v1) {
                          return {
                              user: v1.user,
                              lang: v1.lang,
                              keyText: v1.keyText,
                              menuItem: HomeItem.value,
                              expandMenu: v1.expandMenu
                          };
                      });
                  }) ])([ React_DOM.text(state.keyText("key.login")) ]) ]);
              };
              throw new Error("Failed pattern match at App (line 134, column 12 - line 151, column 10): " + [ state.user.constructor.name ]);
          };
      };
      var setLang = function ($$this) {
          return function (lang) {
              return Ajax.getEff("/langs/" + (lang + ".js"))(function (err) {
                  return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
              })(function (v) {
                  var keys = Data_Map_Internal.fromFoldable(Data_Ord.ordString)(Data_Foldable.foldableArray)(Data_Functor.mapFlipped(Data_Functor.functorArray)(Data_Functor.mapFlipped(Data_Functor.functorArray)(Data_String_Common.split("\x0a")(v))(Data_String_Common.split("=")))(function (kv) {
                      return new Data_Tuple.Tuple(Data_String_Common.joinWith("")(Data_Array.take(1)(kv)), Data_String_Common.joinWith("")(Data_Array.drop(1)(kv)));
                  }));
                  return React.modifyState($$this)(function (v1) {
                      return {
                          user: v1.user,
                          lang: lang,
                          keyText: function (key) {
                              return Data_Maybe.fromMaybe(key)(Data_Map_Internal.lookup(Data_Ord.ordString)(Data_String_Common.toLower(key))(keys));
                          },
                          menuItem: v1.menuItem,
                          expandMenu: v1.expandMenu
                      };
                  });
              });
          };
      };
      var render = function ($$this) {
          return function __do() {
              var props = React.getProps($$this)();
              var state = React.getState($$this)();
              var u = userIcon($$this)();
              return React_DOM.div([  ])([ React_DOM.nav([ Lib_React.cn("navbar navbar-expand-lg navbar-dark bg-primary") ])([ React_DOM.a([ Lib_React.cn("navbar-brand"), React_DOM_Props.href("#"), React_DOM_Props.onClick(function (v) {
                  return React.modifyState($$this)(function (v1) {
                      return {
                          user: v1.user,
                          lang: v1.lang,
                          keyText: v1.keyText,
                          menuItem: HomeItem.value,
                          expandMenu: v1.expandMenu
                      };
                  });
              }) ])([ React_DOM.text("Ridehub") ]), React_DOM.ul([ Lib_React.cn("navbar-nav ml-auto nav-flex-icons d-lg-none") ])([ u ]), React_DOM.button([ Lib_React.cn("navbar-toggler collapsed"), React_DOM_Props["_type"]("button"), React_DOM_Props.onClick(function (v) {
                  return React.modifyState($$this)(function (s) {
                      return {
                          user: s.user,
                          lang: s.lang,
                          keyText: s.keyText,
                          menuItem: s.menuItem,
                          expandMenu: !s.expandMenu
                      };
                  });
              }) ])([ React_DOM.span([ Lib_React.cn("navbar-toggler-icon") ])([  ]) ]), React_DOM.div([ Lib_React.cn("navbar-collapse" + (function () {
                  if (state.expandMenu) {
                      return "";
                  };
                  return " collapse";
              })()) ])([ React_DOM.ul([ Lib_React.cn("navbar-nav mr-auto") ])(Data_Functor.map(Data_Functor.functorArray)(function (v) {
                  return React_DOM.li([ Lib_React.cn("nav-item" + (function () {
                      var $27 = Data_Eq.eq(eqMenuItem)(v)(state.menuItem);
                      if ($27) {
                          return " active";
                      };
                      return "";
                  })()) ])([ React_DOM.a([ Lib_React.cn("nav-link"), React_DOM_Props.href("#"), React_DOM_Props.onClick(function (v1) {
                      return React.modifyState($$this)(function (v2) {
                          return {
                              user: v2.user,
                              lang: v2.lang,
                              keyText: v2.keyText,
                              menuItem: v,
                              expandMenu: false
                          };
                      });
                  }) ])([ React_DOM.text(state.keyText(Data_Show.show(showMenuItem)(v))) ]) ]);
              })([ HomeItem.value, AddItem.value, ViewItem.value ])), React_DOM.select([ Lib_React.cn("custom-select bg-primary text-white-50"), React_DOM_Props.style({
                  width: "9.5rem"
              }), Lib_React.onChangeValue(function (v) {
                  return setLang($$this)(v);
              }) ])(Data_Functor.map(Data_Functor.functorArray)(function (v) {
                  return React_DOM.option([ React_DOM_Props.value(v), React_DOM_Props.selected(v === state.lang) ])([ React_DOM.text(state.keyText("key." + v)) ]);
              })([ "uk", "ru" ])) ]), React_DOM.ul([ Lib_React.cn("navbar-nav ml-auto nav-flex-icons d-none d-lg-inline") ])([ u ]) ]), React_DOM.div([ Lib_React.cn("m-3") ])((function () {
                  if (state.menuItem instanceof HomeItem) {
                      return [ React.createLeafElement()(App_Home.homeClass)({
                          "await": Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit),
                          ok: Lib_WebSocket.reconnect(props.ws),
                          err: Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit),
                          keyText: state.keyText,
                          user: state.user
                      }) ];
                  };
                  if (state.menuItem instanceof ViewItem) {
                      return [ React.createLeafElement()(App_View.viewClass)({
                          ws: props.ws,
                          lang: state.lang,
                          keyText: state.keyText,
                          user: state.user
                      }) ];
                  };
                  if (state.menuItem instanceof AddItem) {
                      return [ React.createLeafElement()(App_Add.addClass)({
                          ws: props.ws,
                          lang: state.lang,
                          keyText: state.keyText,
                          user: state.user
                      }) ];
                  };
                  throw new Error("Failed pattern match at App (line 117, column 27 - line 128, column 24): " + [ state.menuItem.constructor.name ]);
              })()) ]);
          };
      };
      var onMsg = function ($$this) {
          return function (v) {
              if (v instanceof Data_Maybe.Just && v.value0 instanceof Api_Push.SessionData) {
                  return React.modifyState($$this)(function (v1) {
                      return {
                          user: new Data_Maybe.Just(v.value0.value0.user),
                          lang: v1.lang,
                          keyText: v1.keyText,
                          menuItem: v1.menuItem,
                          expandMenu: v1.expandMenu
                      };
                  });
              };
              return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
          };
      };
      return React.component()("App")(function ($$this) {
          return Control_Applicative.pure(Effect.applicativeEffect)({
              state: {
                  user: Data_Maybe.Nothing.value,
                  lang: "uk",
                  keyText: function (key) {
                      return key;
                  },
                  menuItem: HomeItem.value,
                  expandMenu: false
              },
              render: render($$this),
              componentDidMount: function __do() {
                  var props = React.getProps($$this)();
                  setLang($$this)("uk")();
                  return Data_Functor["void"](Effect.functorEffect)(Lib_WebSocket.sub(props.ws)(onMsg($$this)))();
              }
          });
      });
  })();
  var view = function __do() {
      Datepicker.datepickerLoad();
      var doc = Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)(Web_HTML_Window.document)();
      var elem = Web_DOM_NonElementParentNode.getElementById("container")(Web_HTML_HTMLDocument.toNonElementParentNode(doc))();
      var container = Data_Maybe.maybe(Effect_Exception["throw"]("container not found"))(Control_Applicative.pure(Effect.applicativeEffect))(elem)();
      var ws = Lib_WebSocket["new"]("ridehub.city/ws")();
      var element = React.createLeafElement()(appClass)({
          ws: ws
      });
      return Data_Functor["void"](Effect.functorEffect)(ReactDOM.render(element)(container))();
  };
  exports["HomeItem"] = HomeItem;
  exports["ViewItem"] = ViewItem;
  exports["AddItem"] = AddItem;
  exports["appClass"] = appClass;
  exports["view"] = view;
  exports["showMenuItem"] = showMenuItem;
  exports["eqMenuItem"] = eqMenuItem;
  exports["ordMenuItem"] = ordMenuItem;
})(PS);